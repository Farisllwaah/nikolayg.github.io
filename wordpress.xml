<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.6" created="2016-08-20 09:42" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Nikolay Grozev</title>
	<link>http://www.nikgrozev.org</link>
	<description>Staying on top of it</description>
	<pubDate>Sat, 20 Aug 2016 09:42:40 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://www.nikgrozev.org</wp:base_site_url>
	<wp:base_blog_url>http://www.nikgrozev.org</wp:base_blog_url>

	<wp:author><wp:author_id>2</wp:author_id><wp:author_login><![CDATA[nikolaygrozev]]></wp:author_login><wp:author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:author_email><wp:author_display_name><![CDATA[nikolaygrozev]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>
	<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[nikolay.grozev@gmail.com]]></wp:author_login><wp:author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:author_email><wp:author_display_name><![CDATA[nikolay.grozev@gmail.com]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category>
		<wp:term_id>75</wp:term_id>
		<wp:category_nicename><![CDATA[bash]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Bash]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>2</wp:term_id>
		<wp:category_nicename><![CDATA[c-2]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[C#]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>3</wp:term_id>
		<wp:category_nicename><![CDATA[category-theory]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Category Theory]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>4</wp:term_id>
		<wp:category_nicename><![CDATA[cloudsimex]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[CloudSimEx]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>5</wp:term_id>
		<wp:category_nicename><![CDATA[cloudstone]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[CloudStone]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>6</wp:term_id>
		<wp:category_nicename><![CDATA[datascience]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[DataScience]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>79</wp:term_id>
		<wp:category_nicename><![CDATA[docker]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Docker]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>7</wp:term_id>
		<wp:category_nicename><![CDATA[functional-programming]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Functional programming]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>8</wp:term_id>
		<wp:category_nicename><![CDATA[miscellaneous]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Miscellaneous]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>9</wp:term_id>
		<wp:category_nicename><![CDATA[python]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Python]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>10</wp:term_id>
		<wp:category_nicename><![CDATA[scala]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Scala]]></wp:cat_name>
	</wp:category>
	<wp:category>
		<wp:term_id>1</wp:term_id>
		<wp:category_nicename><![CDATA[uncategorized]]></wp:category_nicename>
		<wp:category_parent><![CDATA[]]></wp:category_parent>
		<wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name>
	</wp:category>
	<wp:tag>
		<wp:term_id>11</wp:term_id>
		<wp:tag_slug><![CDATA[applicative-functor]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Applicative Functor]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>12</wp:term_id>
		<wp:tag_slug><![CDATA[aws]]></wp:tag_slug>
		<wp:tag_name><![CDATA[aws]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>13</wp:term_id>
		<wp:tag_slug><![CDATA[bash]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Bash]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>14</wp:term_id>
		<wp:tag_slug><![CDATA[benchmark]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Benchmark]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>15</wp:term_id>
		<wp:tag_slug><![CDATA[bgp]]></wp:tag_slug>
		<wp:tag_name><![CDATA[bgp]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>16</wp:term_id>
		<wp:tag_slug><![CDATA[c]]></wp:tag_slug>
		<wp:tag_name><![CDATA[C++]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>17</wp:term_id>
		<wp:tag_slug><![CDATA[category-theory]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Category Theory]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>18</wp:term_id>
		<wp:tag_slug><![CDATA[charp]]></wp:tag_slug>
		<wp:tag_name><![CDATA[charp]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>78</wp:term_id>
		<wp:tag_slug><![CDATA[cheatsheet]]></wp:tag_slug>
		<wp:tag_name><![CDATA[cheatsheet]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>19</wp:term_id>
		<wp:tag_slug><![CDATA[closure]]></wp:tag_slug>
		<wp:tag_name><![CDATA[closure]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>20</wp:term_id>
		<wp:tag_slug><![CDATA[cloudsim]]></wp:tag_slug>
		<wp:tag_name><![CDATA[CloudSim]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>21</wp:term_id>
		<wp:tag_slug><![CDATA[cloudsimex]]></wp:tag_slug>
		<wp:tag_name><![CDATA[CloudSimEx]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>22</wp:term_id>
		<wp:tag_slug><![CDATA[cloudstone]]></wp:tag_slug>
		<wp:tag_name><![CDATA[CloudStone]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>23</wp:term_id>
		<wp:tag_slug><![CDATA[coroutine]]></wp:tag_slug>
		<wp:tag_name><![CDATA[coroutine]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>24</wp:term_id>
		<wp:tag_slug><![CDATA[datacenterbrokerex]]></wp:tag_slug>
		<wp:tag_name><![CDATA[DatacenterBrokerEX]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>25</wp:term_id>
		<wp:tag_slug><![CDATA[dataframe]]></wp:tag_slug>
		<wp:tag_name><![CDATA[DataFrame]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>26</wp:term_id>
		<wp:tag_slug><![CDATA[delay]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Delay]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>27</wp:term_id>
		<wp:tag_slug><![CDATA[disk]]></wp:tag_slug>
		<wp:tag_name><![CDATA[disk]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>28</wp:term_id>
		<wp:tag_slug><![CDATA[diy]]></wp:tag_slug>
		<wp:tag_name><![CDATA[DIY]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>80</wp:term_id>
		<wp:tag_slug><![CDATA[docker]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Docker]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>29</wp:term_id>
		<wp:tag_slug><![CDATA[dotnet]]></wp:tag_slug>
		<wp:tag_name><![CDATA[dotnet]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>30</wp:term_id>
		<wp:tag_slug><![CDATA[eclipse]]></wp:tag_slug>
		<wp:tag_name><![CDATA[eclipse]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>31</wp:term_id>
		<wp:tag_slug><![CDATA[fiber]]></wp:tag_slug>
		<wp:tag_name><![CDATA[fiber]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>32</wp:term_id>
		<wp:tag_slug><![CDATA[functional-programming]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Functional programming]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>33</wp:term_id>
		<wp:tag_slug><![CDATA[generics]]></wp:tag_slug>
		<wp:tag_name><![CDATA[generics]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>34</wp:term_id>
		<wp:tag_slug><![CDATA[github]]></wp:tag_slug>
		<wp:tag_name><![CDATA[github]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>35</wp:term_id>
		<wp:tag_slug><![CDATA[gnu-octave]]></wp:tag_slug>
		<wp:tag_name><![CDATA[GNU Octave]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>36</wp:term_id>
		<wp:tag_slug><![CDATA[goroutine]]></wp:tag_slug>
		<wp:tag_name><![CDATA[goroutine]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>37</wp:term_id>
		<wp:tag_slug><![CDATA[guava]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Guava]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>38</wp:term_id>
		<wp:tag_slug><![CDATA[java]]></wp:tag_slug>
		<wp:tag_name><![CDATA[java]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>39</wp:term_id>
		<wp:tag_slug><![CDATA[jclouds]]></wp:tag_slug>
		<wp:tag_name><![CDATA[jclouds]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>40</wp:term_id>
		<wp:tag_slug><![CDATA[jdk]]></wp:tag_slug>
		<wp:tag_name><![CDATA[jdk]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>41</wp:term_id>
		<wp:tag_slug><![CDATA[jdk8]]></wp:tag_slug>
		<wp:tag_name><![CDATA[jdk8]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>42</wp:term_id>
		<wp:tag_slug><![CDATA[jersey]]></wp:tag_slug>
		<wp:tag_name><![CDATA[jersey]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>43</wp:term_id>
		<wp:tag_slug><![CDATA[jetty]]></wp:tag_slug>
		<wp:tag_name><![CDATA[jetty]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>44</wp:term_id>
		<wp:tag_slug><![CDATA[jupyter]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Jupyter]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>45</wp:term_id>
		<wp:tag_slug><![CDATA[jupyter-notebook]]></wp:tag_slug>
		<wp:tag_name><![CDATA[jupyter notebook]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>46</wp:term_id>
		<wp:tag_slug><![CDATA[lambda]]></wp:tag_slug>
		<wp:tag_name><![CDATA[lambda]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>47</wp:term_id>
		<wp:tag_slug><![CDATA[lmax-disruptor]]></wp:tag_slug>
		<wp:tag_name><![CDATA[lmax-disruptor]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>48</wp:term_id>
		<wp:tag_slug><![CDATA[load-balancer]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Load Balancer]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>49</wp:term_id>
		<wp:tag_slug><![CDATA[maven]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Maven]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>50</wp:term_id>
		<wp:tag_slug><![CDATA[monad]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Monad]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>51</wp:term_id>
		<wp:tag_slug><![CDATA[mooc]]></wp:tag_slug>
		<wp:tag_name><![CDATA[MOOC]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>52</wp:term_id>
		<wp:tag_slug><![CDATA[network]]></wp:tag_slug>
		<wp:tag_name><![CDATA[network]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>53</wp:term_id>
		<wp:tag_slug><![CDATA[nupic]]></wp:tag_slug>
		<wp:tag_name><![CDATA[NuPIC]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>54</wp:term_id>
		<wp:tag_slug><![CDATA[octave]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Octave]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>55</wp:term_id>
		<wp:tag_slug><![CDATA[octave-gui]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Octave GUI]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>56</wp:term_id>
		<wp:tag_slug><![CDATA[oracle]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Oracle]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>57</wp:term_id>
		<wp:tag_slug><![CDATA[ospf]]></wp:tag_slug>
		<wp:tag_name><![CDATA[ospf]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>58</wp:term_id>
		<wp:tag_slug><![CDATA[override]]></wp:tag_slug>
		<wp:tag_name><![CDATA[override]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>59</wp:term_id>
		<wp:tag_slug><![CDATA[pandas]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Pandas]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>60</wp:term_id>
		<wp:tag_slug><![CDATA[python]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Python]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>61</wp:term_id>
		<wp:tag_slug><![CDATA[read_csv]]></wp:tag_slug>
		<wp:tag_name><![CDATA[read_csv]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>62</wp:term_id>
		<wp:tag_slug><![CDATA[reshape]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Reshape]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>63</wp:term_id>
		<wp:tag_slug><![CDATA[rest]]></wp:tag_slug>
		<wp:tag_name><![CDATA[REST]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>64</wp:term_id>
		<wp:tag_slug><![CDATA[rip]]></wp:tag_slug>
		<wp:tag_name><![CDATA[rip]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>65</wp:term_id>
		<wp:tag_slug><![CDATA[sampling]]></wp:tag_slug>
		<wp:tag_name><![CDATA[sampling]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>66</wp:term_id>
		<wp:tag_slug><![CDATA[scala]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Scala]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>76</wp:term_id>
		<wp:tag_slug><![CDATA[shell]]></wp:tag_slug>
		<wp:tag_name><![CDATA[shell]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>67</wp:term_id>
		<wp:tag_slug><![CDATA[simulation]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Simulation]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>68</wp:term_id>
		<wp:tag_slug><![CDATA[thread]]></wp:tag_slug>
		<wp:tag_name><![CDATA[thread]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>77</wp:term_id>
		<wp:tag_slug><![CDATA[tmux]]></wp:tag_slug>
		<wp:tag_name><![CDATA[tmux]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>69</wp:term_id>
		<wp:tag_slug><![CDATA[ubuntu]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Ubuntu]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>70</wp:term_id>
		<wp:tag_slug><![CDATA[virtual-machine]]></wp:tag_slug>
		<wp:tag_name><![CDATA[virtual machine]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>71</wp:term_id>
		<wp:tag_slug><![CDATA[vm]]></wp:tag_slug>
		<wp:tag_name><![CDATA[VM]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>72</wp:term_id>
		<wp:tag_slug><![CDATA[vm-image]]></wp:tag_slug>
		<wp:tag_name><![CDATA[VM Image]]></wp:tag_name>
	</wp:tag>
	<wp:tag>
		<wp:term_id>73</wp:term_id>
		<wp:tag_slug><![CDATA[web-app]]></wp:tag_slug>
		<wp:tag_name><![CDATA[Web App]]></wp:tag_name>
	</wp:tag>
	<wp:term><wp:term_id>74</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug><![CDATA[page-navigation]]></wp:term_slug><wp:term_name><![CDATA[Page Navigation]]></wp:term_name>
</wp:term>

	<generator>https://wordpress.org/?v=4.6</generator>

<image>
	<url>http://www.nikgrozev.org/wp-content/uploads/2016/04/cropped-nikolay-grozev-01-32x32.jpg</url>
	<title>Nikolay Grozev</title>
	<link>http://www.nikgrozev.org</link>
	<width>32</width>
	<height>32</height>
</image> 
<site xmlns="com-wordpress:feed-additions:1">110712131</site>
	<item>
		<title>SAM_2631</title>
		<link>http://www.nikgrozev.org/sam_2631/</link>
		<pubDate>Thu, 28 Nov 2013 12:53:14 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/11/sam_26313.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>5</wp:post_id>
		<wp:post_date><![CDATA[2013-11-28 12:53:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-11-28 12:53:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sam_2631]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/11/sam_26313.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/sam_26313.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:4000;s:6:"height";i:3000;s:4:"file";s:21:"2013/11/sam_26313.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:21:"sam_26313-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:21:"sam_26313-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:21:"sam_26313-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:22:"sam_26313-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:22:"sam_26313-1200x900.jpg";s:5:"width";i:1200;s:6:"height";i:900;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"9.9";s:6:"credit";s:0:"";s:6:"camera";s:23:"SAMSUNG ES9/SAMSUNG ES8";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1364727404";s:9:"copyright";s:14:"Copyright 2011";s:12:"focal_length";s:3:"4.8";s:3:"iso";s:2:"80";s:13:"shutter_speed";s:16:"0.00970873786408";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SAM_2630</title>
		<link>http://www.nikgrozev.org/sam_2630/</link>
		<pubDate>Thu, 28 Nov 2013 13:09:22 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/11/sam_2630.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>6</wp:post_id>
		<wp:post_date><![CDATA[2013-11-28 13:09:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-11-28 13:09:22]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sam_2630]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/11/sam_2630.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/sam_2630.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:4000;s:6:"height";i:3000;s:4:"file";s:20:"2013/11/sam_2630.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"sam_2630-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"sam_2630-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:20:"sam_2630-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:21:"sam_2630-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:21:"sam_2630-1200x900.jpg";s:5:"width";i:1200;s:6:"height";i:900;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"9.9";s:6:"credit";s:0:"";s:6:"camera";s:23:"SAMSUNG ES9/SAMSUNG ES8";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1364727395";s:9:"copyright";s:14:"Copyright 2011";s:12:"focal_length";s:3:"4.8";s:3:"iso";s:2:"80";s:13:"shutter_speed";s:15:"0.0106382978723";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SAM_2631</title>
		<link>http://www.nikgrozev.org/sam_2631-2/</link>
		<pubDate>Thu, 28 Nov 2013 13:09:32 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/11/sam_26314.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>7</wp:post_id>
		<wp:post_date><![CDATA[2013-11-28 13:09:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-11-28 13:09:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sam_2631-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/11/sam_26314.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/sam_26314.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:4000;s:6:"height";i:3000;s:4:"file";s:21:"2013/11/sam_26314.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:21:"sam_26314-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:21:"sam_26314-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:21:"sam_26314-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:22:"sam_26314-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:22:"sam_26314-1200x900.jpg";s:5:"width";i:1200;s:6:"height";i:900;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"9.9";s:6:"credit";s:0:"";s:6:"camera";s:23:"SAMSUNG ES9/SAMSUNG ES8";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1364727395";s:9:"copyright";s:14:"Copyright 2011";s:12:"focal_length";s:3:"4.8";s:3:"iso";s:2:"80";s:13:"shutter_speed";s:15:"0.0106382978723";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SAM_2649</title>
		<link>http://www.nikgrozev.org/sam_2649/</link>
		<pubDate>Thu, 28 Nov 2013 13:09:40 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/11/sam_2649.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>8</wp:post_id>
		<wp:post_date><![CDATA[2013-11-28 13:09:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-11-28 13:09:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sam_2649]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/11/sam_2649.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/sam_2649.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:4000;s:6:"height";i:3000;s:4:"file";s:20:"2013/11/sam_2649.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"sam_2649-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"sam_2649-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:20:"sam_2649-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:21:"sam_2649-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:21:"sam_2649-1200x900.jpg";s:5:"width";i:1200;s:6:"height";i:900;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"9.9";s:6:"credit";s:0:"";s:6:"camera";s:23:"SAMSUNG ES9/SAMSUNG ES8";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1364727395";s:9:"copyright";s:14:"Copyright 2011";s:12:"focal_length";s:3:"4.8";s:3:"iso";s:2:"80";s:13:"shutter_speed";s:15:"0.0106382978723";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SAM_2656</title>
		<link>http://www.nikgrozev.org/sam_2656/</link>
		<pubDate>Thu, 28 Nov 2013 13:09:50 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/11/sam_2656.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>9</wp:post_id>
		<wp:post_date><![CDATA[2013-11-28 13:09:50]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-11-28 13:09:50]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sam_2656]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/11/sam_2656.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/sam_2656.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:4000;s:6:"height";i:3000;s:4:"file";s:20:"2013/11/sam_2656.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"sam_2656-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"sam_2656-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:20:"sam_2656-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:21:"sam_2656-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:21:"sam_2656-1200x900.jpg";s:5:"width";i:1200;s:6:"height";i:900;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"9.9";s:6:"credit";s:0:"";s:6:"camera";s:23:"SAMSUNG ES9/SAMSUNG ES8";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1364727395";s:9:"copyright";s:14:"Copyright 2011";s:12:"focal_length";s:3:"4.8";s:3:"iso";s:2:"80";s:13:"shutter_speed";s:15:"0.0106382978723";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SAM_2659</title>
		<link>http://www.nikgrozev.org/sam_2659/</link>
		<pubDate>Thu, 28 Nov 2013 13:10:00 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/11/sam_2659.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>10</wp:post_id>
		<wp:post_date><![CDATA[2013-11-28 13:10:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-11-28 13:10:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sam_2659]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/11/sam_2659.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/sam_2659.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:4000;s:6:"height";i:3000;s:4:"file";s:20:"2013/11/sam_2659.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"sam_2659-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"sam_2659-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:20:"sam_2659-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:21:"sam_2659-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:21:"sam_2659-1200x900.jpg";s:5:"width";i:1200;s:6:"height";i:900;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"9.9";s:6:"credit";s:0:"";s:6:"camera";s:23:"SAMSUNG ES9/SAMSUNG ES8";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1364727395";s:9:"copyright";s:14:"Copyright 2011";s:12:"focal_length";s:3:"4.8";s:3:"iso";s:2:"80";s:13:"shutter_speed";s:15:"0.0106382978723";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SAM_2669</title>
		<link>http://www.nikgrozev.org/sam_2669/</link>
		<pubDate>Thu, 28 Nov 2013 13:10:12 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/11/sam_2669.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>11</wp:post_id>
		<wp:post_date><![CDATA[2013-11-28 13:10:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-11-28 13:10:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sam_2669]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/11/sam_2669.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/sam_2669.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:4000;s:6:"height";i:3000;s:4:"file";s:20:"2013/11/sam_2669.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"sam_2669-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"sam_2669-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:20:"sam_2669-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:21:"sam_2669-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:21:"sam_2669-1200x900.jpg";s:5:"width";i:1200;s:6:"height";i:900;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"9.9";s:6:"credit";s:0:"";s:6:"camera";s:23:"SAMSUNG ES9/SAMSUNG ES8";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1364727395";s:9:"copyright";s:14:"Copyright 2011";s:12:"focal_length";s:3:"4.8";s:3:"iso";s:2:"80";s:13:"shutter_speed";s:15:"0.0106382978723";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SAM_2671</title>
		<link>http://www.nikgrozev.org/sam_2671/</link>
		<pubDate>Thu, 28 Nov 2013 13:10:23 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/11/sam_2671.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>12</wp:post_id>
		<wp:post_date><![CDATA[2013-11-28 13:10:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-11-28 13:10:23]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sam_2671]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/11/sam_2671.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/sam_2671.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:4000;s:6:"height";i:3000;s:4:"file";s:20:"2013/11/sam_2671.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"sam_2671-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"sam_2671-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:20:"sam_2671-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:21:"sam_2671-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:21:"sam_2671-1200x900.jpg";s:5:"width";i:1200;s:6:"height";i:900;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"9.9";s:6:"credit";s:0:"";s:6:"camera";s:23:"SAMSUNG ES9/SAMSUNG ES8";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1364727395";s:9:"copyright";s:14:"Copyright 2011";s:12:"focal_length";s:3:"4.8";s:3:"iso";s:2:"80";s:13:"shutter_speed";s:15:"0.0106382978723";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SAM_2672</title>
		<link>http://www.nikgrozev.org/sam_2672/</link>
		<pubDate>Thu, 28 Nov 2013 13:10:36 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/11/sam_2672.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>13</wp:post_id>
		<wp:post_date><![CDATA[2013-11-28 13:10:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-11-28 13:10:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sam_2672]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/11/sam_2672.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/sam_2672.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:4000;s:6:"height";i:3000;s:4:"file";s:20:"2013/11/sam_2672.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"sam_2672-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"sam_2672-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:20:"sam_2672-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:21:"sam_2672-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:21:"sam_2672-1200x900.jpg";s:5:"width";i:1200;s:6:"height";i:900;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"9.9";s:6:"credit";s:0:"";s:6:"camera";s:23:"SAMSUNG ES9/SAMSUNG ES8";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1364727395";s:9:"copyright";s:14:"Copyright 2011";s:12:"focal_length";s:3:"4.8";s:3:"iso";s:2:"80";s:13:"shutter_speed";s:15:"0.0106382978723";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SAM_2680</title>
		<link>http://www.nikgrozev.org/sam_2680/</link>
		<pubDate>Thu, 28 Nov 2013 13:10:46 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/11/sam_2680.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date><![CDATA[2013-11-28 13:10:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-11-28 13:10:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sam_2680]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/11/sam_2680.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/sam_2680.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:4000;s:6:"height";i:3000;s:4:"file";s:20:"2013/11/sam_2680.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"sam_2680-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"sam_2680-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:20:"sam_2680-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:21:"sam_2680-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:21:"sam_2680-1200x900.jpg";s:5:"width";i:1200;s:6:"height";i:900;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"9.9";s:6:"credit";s:0:"";s:6:"camera";s:23:"SAMSUNG ES9/SAMSUNG ES8";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1364727395";s:9:"copyright";s:14:"Copyright 2011";s:12:"focal_length";s:3:"4.8";s:3:"iso";s:2:"80";s:13:"shutter_speed";s:15:"0.0106382978723";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-sam_26313.jpg</title>
		<link>http://www.nikgrozev.org/cropped-sam_26313-jpg/</link>
		<pubDate>Thu, 28 Nov 2013 13:15:46 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/11/cropped-sam_26313.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/11/cropped-sam_26313.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>15</wp:post_id>
		<wp:post_date><![CDATA[2013-11-28 13:15:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-11-28 13:15:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-sam_26313-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/11/cropped-sam_26313.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/cropped-sam_26313.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2000;s:6:"height";i:808;s:4:"file";s:29:"2013/11/cropped-sam_26313.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:29:"cropped-sam_26313-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:29:"cropped-sam_26313-300x121.jpg";s:5:"width";i:300;s:6:"height";i:121;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:29:"cropped-sam_26313-768x310.jpg";s:5:"width";i:768;s:6:"height";i:310;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:30:"cropped-sam_26313-1024x414.jpg";s:5:"width";i:1024;s:6:"height";i:414;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:30:"cropped-sam_26313-1200x485.jpg";s:5:"width";i:1200;s:6:"height";i:485;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[pub/twentytwelve]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-sam_263131.jpg</title>
		<link>http://www.nikgrozev.org/cropped-sam_263131-jpg/</link>
		<pubDate>Thu, 28 Nov 2013 13:19:37 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/11/cropped-sam_263131.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/11/cropped-sam_263131.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date><![CDATA[2013-11-28 13:19:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-11-28 13:19:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-sam_263131-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/11/cropped-sam_263131.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/cropped-sam_263131.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2000;s:6:"height";i:617;s:4:"file";s:30:"2013/11/cropped-sam_263131.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"cropped-sam_263131-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:29:"cropped-sam_263131-300x93.jpg";s:5:"width";i:300;s:6:"height";i:93;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:30:"cropped-sam_263131-768x237.jpg";s:5:"width";i:768;s:6:"height";i:237;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:31:"cropped-sam_263131-1024x316.jpg";s:5:"width";i:1024;s:6:"height";i:316;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:31:"cropped-sam_263131-1200x370.jpg";s:5:"width";i:1200;s:6:"height";i:370;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[pub/twentytwelve]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_custom_header_last_used_pub/twentytwelve]]></wp:meta_key>
			<wp:meta_value><![CDATA[1400657887]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Welcome Screen</title>
		<link>http://www.nikgrozev.org/2013/11/29/octave-gui-in-ubuntu-13-x-first-impressions/1-welcome-screen/</link>
		<pubDate>Fri, 29 Nov 2013 03:04:17 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/11/1-welcome-screen.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Welcome Screen]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date><![CDATA[2013-11-29 14:04:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-11-29 03:04:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[1-welcome-screen]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>25</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/11/1-welcome-screen.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/1-welcome-screen.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1366;s:6:"height";i:768;s:4:"file";s:28:"2013/11/1-welcome-screen.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:28:"1-welcome-screen-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:28:"1-welcome-screen-300x169.png";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:28:"1-welcome-screen-768x432.png";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:29:"1-welcome-screen-1024x576.png";s:5:"width";i:1024;s:6:"height";i:576;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:29:"1-welcome-screen-1200x675.png";s:5:"width";i:1200;s:6:"height";i:675;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2 Command Window</title>
		<link>http://www.nikgrozev.org/2013/11/29/octave-gui-in-ubuntu-13-x-first-impressions/2-command-window/</link>
		<pubDate>Fri, 29 Nov 2013 03:04:21 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/11/2-command-window.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[A standard terminal for invoking commands. Session variables are listed in the "Workspace" panel.]]></excerpt:encoded>
		<wp:post_id>28</wp:post_id>
		<wp:post_date><![CDATA[2013-11-29 14:04:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-11-29 03:04:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[2-command-window]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>25</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/11/2-command-window.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/2-command-window.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1366;s:6:"height";i:768;s:4:"file";s:28:"2013/11/2-command-window.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:28:"2-command-window-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:28:"2-command-window-300x169.png";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:28:"2-command-window-768x432.png";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:29:"2-command-window-1024x576.png";s:5:"width";i:1024;s:6:"height";i:576;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:29:"2-command-window-1200x675.png";s:5:"width";i:1200;s:6:"height";i:675;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>4 Graphics</title>
		<link>http://www.nikgrozev.org/2013/11/29/octave-gui-in-ubuntu-13-x-first-impressions/4-graphics/</link>
		<pubDate>Fri, 29 Nov 2013 03:04:28 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/11/4-graphics.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Graphics]]></excerpt:encoded>
		<wp:post_id>30</wp:post_id>
		<wp:post_date><![CDATA[2013-11-29 14:04:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-11-29 03:04:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[4-graphics]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>25</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/11/4-graphics.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/4-graphics.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1366;s:6:"height";i:768;s:4:"file";s:22:"2013/11/4-graphics.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:22:"4-graphics-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:22:"4-graphics-300x169.png";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:22:"4-graphics-768x432.png";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:23:"4-graphics-1024x576.png";s:5:"width";i:1024;s:6:"height";i:576;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:23:"4-graphics-1200x675.png";s:5:"width";i:1200;s:6:"height";i:675;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>5 Debugging</title>
		<link>http://www.nikgrozev.org/2013/11/29/octave-gui-in-ubuntu-13-x-first-impressions/5-debugging/</link>
		<pubDate>Fri, 29 Nov 2013 03:04:32 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/11/5-debugging.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Debugging! The breakpoint is in red, the yellow arrow indicates curren line in the code.]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date><![CDATA[2013-11-29 14:04:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-11-29 03:04:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[5-debugging]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>25</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/11/5-debugging.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/5-debugging.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1366;s:6:"height";i:768;s:4:"file";s:23:"2013/11/5-debugging.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"5-debugging-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:23:"5-debugging-300x169.png";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:23:"5-debugging-768x432.png";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:24:"5-debugging-1024x576.png";s:5:"width";i:1024;s:6:"height";i:576;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:24:"5-debugging-1200x675.png";s:5:"width";i:1200;s:6:"height";i:675;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>6 Documentation</title>
		<link>http://www.nikgrozev.org/2013/11/29/octave-gui-in-ubuntu-13-x-first-impressions/6-documentation/</link>
		<pubDate>Fri, 29 Nov 2013 03:04:35 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/11/6-documentation.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[The documentation/help is organised hierarchically.]]></excerpt:encoded>
		<wp:post_id>32</wp:post_id>
		<wp:post_date><![CDATA[2013-11-29 14:04:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-11-29 03:04:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[6-documentation]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>25</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/11/6-documentation.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/6-documentation.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1366;s:6:"height";i:768;s:4:"file";s:27:"2013/11/6-documentation.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"6-documentation-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:27:"6-documentation-300x169.png";s:5:"width";i:300;s:6:"height";i:169;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:27:"6-documentation-768x432.png";s:5:"width";i:768;s:6:"height";i:432;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:28:"6-documentation-1024x576.png";s:5:"width";i:1024;s:6:"height";i:576;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:28:"6-documentation-1200x675.png";s:5:"width";i:1200;s:6:"height";i:675;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>3 Text Editor and Automcomplete</title>
		<link>http://www.nikgrozev.org/2013/11/29/octave-gui-in-ubuntu-13-x-first-impressions/3-text-editor-and-automcomplete/</link>
		<pubDate>Fri, 29 Nov 2013 03:49:47 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/11/3-text-editor-and-automcomplete1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[The code editor offers code completion.]]></excerpt:encoded>
		<wp:post_id>44</wp:post_id>
		<wp:post_date><![CDATA[2013-11-29 14:49:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-11-29 03:49:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[3-text-editor-and-automcomplete]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>25</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/11/3-text-editor-and-automcomplete1.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/11/3-text-editor-and-automcomplete1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1280;s:6:"height";i:1026;s:4:"file";s:44:"2013/11/3-text-editor-and-automcomplete1.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:44:"3-text-editor-and-automcomplete1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:44:"3-text-editor-and-automcomplete1-300x240.png";s:5:"width";i:300;s:6:"height";i:240;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:44:"3-text-editor-and-automcomplete1-768x616.png";s:5:"width";i:768;s:6:"height";i:616;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:45:"3-text-editor-and-automcomplete1-1024x821.png";s:5:"width";i:1024;s:6:"height";i:821;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:45:"3-text-editor-and-automcomplete1-1200x962.png";s:5:"width";i:1200;s:6:"height";i:962;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Monad</title>
		<link>http://www.nikgrozev.org/2013/12/10/monads-in-15-minutes/monad/</link>
		<pubDate>Mon, 09 Dec 2013 14:30:49 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/12/monad1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Monad - Computational Model]]></excerpt:encoded>
		<wp:post_id>70</wp:post_id>
		<wp:post_date><![CDATA[2013-12-10 01:30:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-12-09 14:30:49]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[monad]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>51</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/12/monad1.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/12/monad1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:710;s:6:"height";i:54;s:4:"file";s:18:"2013/12/monad1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:17:"monad1-150x54.png";s:5:"width";i:150;s:6:"height";i:54;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:17:"monad1-300x23.png";s:5:"width";i:300;s:6:"height";i:23;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Example3</title>
		<link>http://www.nikgrozev.org/2013/12/10/monads-in-15-minutes/example3/</link>
		<pubDate>Mon, 09 Dec 2013 14:30:51 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/12/example31.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Example 3 – Computational process of the monadic solution]]></excerpt:encoded>
		<wp:post_id>71</wp:post_id>
		<wp:post_date><![CDATA[2013-12-10 01:30:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-12-09 14:30:51]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[example3]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>51</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/12/example31.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/12/example31.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:766;s:6:"height";i:44;s:4:"file";s:21:"2013/12/example31.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"example31-150x44.png";s:5:"width";i:150;s:6:"height";i:44;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:20:"example31-300x17.png";s:5:"width";i:300;s:6:"height";i:17;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Example2</title>
		<link>http://www.nikgrozev.org/2013/12/10/monads-in-15-minutes/example2/</link>
		<pubDate>Mon, 09 Dec 2013 14:30:52 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/12/example21.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Example 2 – Computational process of the monadic solution]]></excerpt:encoded>
		<wp:post_id>72</wp:post_id>
		<wp:post_date><![CDATA[2013-12-10 01:30:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-12-09 14:30:52]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[example2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>51</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/12/example21.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/12/example21.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:753;s:6:"height";i:42;s:4:"file";s:21:"2013/12/example21.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"example21-150x42.png";s:5:"width";i:150;s:6:"height";i:42;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:20:"example21-300x17.png";s:5:"width";i:300;s:6:"height";i:17;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Example1</title>
		<link>http://www.nikgrozev.org/2013/12/10/monads-in-15-minutes/example1/</link>
		<pubDate>Mon, 09 Dec 2013 14:30:53 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/12/example11.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Example 1 – Computational process of the monadic solution]]></excerpt:encoded>
		<wp:post_id>73</wp:post_id>
		<wp:post_date><![CDATA[2013-12-10 01:30:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-12-09 14:30:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[example1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>51</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/12/example11.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/12/example11.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:912;s:6:"height";i:49;s:4:"file";s:21:"2013/12/example11.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"example11-150x49.png";s:5:"width";i:150;s:6:"height";i:49;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:20:"example11-300x16.png";s:5:"width";i:300;s:6:"height";i:16;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:20:"example11-768x41.png";s:5:"width";i:768;s:6:"height";i:41;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Dierct_Composition</title>
		<link>http://www.nikgrozev.org/2013/12/10/monads-in-15-minutes/dierct_composition/</link>
		<pubDate>Mon, 09 Dec 2013 14:30:54 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/12/dierct_composition1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Direct Composition – Computational model]]></excerpt:encoded>
		<wp:post_id>74</wp:post_id>
		<wp:post_date><![CDATA[2013-12-10 01:30:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-12-09 14:30:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[dierct_composition]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>51</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/12/dierct_composition1.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/12/dierct_composition1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:605;s:6:"height";i:50;s:4:"file";s:31:"2013/12/dierct_composition1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"dierct_composition1-150x50.png";s:5:"width";i:150;s:6:"height";i:50;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:30:"dierct_composition1-300x25.png";s:5:"width";i:300;s:6:"height";i:25;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ImperativeComposition</title>
		<link>http://www.nikgrozev.org/2013/12/10/monads-in-15-minutes/imperativecomposition/</link>
		<pubDate>Tue, 10 Dec 2013 05:58:26 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2013/12/imperativecomposition2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Imperative Composition - Computational model]]></excerpt:encoded>
		<wp:post_id>98</wp:post_id>
		<wp:post_date><![CDATA[2013-12-10 16:58:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-12-10 05:58:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[imperativecomposition]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>51</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2013/12/imperativecomposition2.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2013/12/imperativecomposition2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:616;s:6:"height";i:47;s:4:"file";s:34:"2013/12/imperativecomposition2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:33:"imperativecomposition2-150x47.png";s:5:"width";i:150;s:6:"height";i:47;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:33:"imperativecomposition2-300x23.png";s:5:"width";i:300;s:6:"height";i:23;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CloudStoneOverview</title>
		<link>http://www.nikgrozev.org/2014/05/10/automated-cloudstone-setup-in-ubuntu-vms/cloudstoneoverview/</link>
		<pubDate>Fri, 09 May 2014 10:37:05 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/cloudstoneoverview.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[CloudSton Architecture]]></excerpt:encoded>
		<wp:post_id>168</wp:post_id>
		<wp:post_date><![CDATA[2014-05-09 21:37:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-09 10:37:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cloudstoneoverview]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>166</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/cloudstoneoverview.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/cloudstoneoverview.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:903;s:6:"height";i:412;s:4:"file";s:30:"2014/05/cloudstoneoverview.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"cloudstoneoverview-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:30:"cloudstoneoverview-300x137.png";s:5:"width";i:300;s:6:"height";i:137;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:30:"cloudstoneoverview-768x350.png";s:5:"width";i:768;s:6:"height";i:350;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SecurityGroup</title>
		<link>http://www.nikgrozev.org/2014/05/10/automated-cloudstone-setup-in-ubuntu-vms/securitygroup/</link>
		<pubDate>Fri, 09 May 2014 10:39:25 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/securitygroup.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[CloudStone security Group in AWS]]></excerpt:encoded>
		<wp:post_id>171</wp:post_id>
		<wp:post_date><![CDATA[2014-05-09 21:39:25]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-09 10:39:25]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[securitygroup]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>166</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/securitygroup.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/securitygroup.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1274;s:6:"height";i:669;s:4:"file";s:25:"2014/05/securitygroup.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:25:"securitygroup-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:25:"securitygroup-300x158.png";s:5:"width";i:300;s:6:"height";i:158;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:25:"securitygroup-768x403.png";s:5:"width";i:768;s:6:"height";i:403;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:26:"securitygroup-1024x538.png";s:5:"width";i:1024;s:6:"height";i:538;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:26:"securitygroup-1200x630.png";s:5:"width";i:1200;s:6:"height";i:630;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CloudStoneInstallationTopology</title>
		<link>http://www.nikgrozev.org/2014/05/10/automated-cloudstone-setup-in-ubuntu-vms/cloudstoneinstallationtopology/</link>
		<pubDate>Fri, 09 May 2014 10:42:44 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/cloudstoneinstallationtopology.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[The installer Linux machine uses SSH and SCP to configure the CloudStone VMs. All CloudStone VMs run 64bit Ubuntu 14.04, have the same pem file (e.g. CloudStone.pem) and the same permissive security group (e.g. named CloudStone]]></excerpt:encoded>
		<wp:post_id>174</wp:post_id>
		<wp:post_date><![CDATA[2014-05-09 21:42:44]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-09 10:42:44]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cloudstoneinstallationtopology]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>166</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/cloudstoneinstallationtopology.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/cloudstoneinstallationtopology.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:876;s:6:"height";i:539;s:4:"file";s:42:"2014/05/cloudstoneinstallationtopology.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:42:"cloudstoneinstallationtopology-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:42:"cloudstoneinstallationtopology-300x185.png";s:5:"width";i:300;s:6:"height";i:185;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:42:"cloudstoneinstallationtopology-768x473.png";s:5:"width";i:768;s:6:"height";i:473;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FabanOlioMainScreen</title>
		<link>http://www.nikgrozev.org/2014/05/10/automated-cloudstone-setup-in-ubuntu-vms/fabanoliomainscreen/</link>
		<pubDate>Fri, 09 May 2014 10:49:42 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/fabanoliomainscreen.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Faban Main Screen]]></excerpt:encoded>
		<wp:post_id>179</wp:post_id>
		<wp:post_date><![CDATA[2014-05-09 21:49:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-09 10:49:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[fabanoliomainscreen]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>166</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/fabanoliomainscreen.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/fabanoliomainscreen.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1272;s:6:"height";i:873;s:4:"file";s:31:"2014/05/fabanoliomainscreen.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:31:"fabanoliomainscreen-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:31:"fabanoliomainscreen-300x206.png";s:5:"width";i:300;s:6:"height";i:206;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:31:"fabanoliomainscreen-768x527.png";s:5:"width";i:768;s:6:"height";i:527;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:32:"fabanoliomainscreen-1024x703.png";s:5:"width";i:1024;s:6:"height";i:703;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:32:"fabanoliomainscreen-1200x824.png";s:5:"width";i:1200;s:6:"height";i:824;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Wizard-Driver</title>
		<link>http://www.nikgrozev.org/2014/05/10/automated-cloudstone-setup-in-ubuntu-vms/wizard-driver/</link>
		<pubDate>Fri, 09 May 2014 10:51:29 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/wizard-driver.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>180</wp:post_id>
		<wp:post_date><![CDATA[2014-05-09 21:51:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-09 10:51:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[wizard-driver]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>166</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/wizard-driver.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/wizard-driver.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1251;s:6:"height";i:890;s:4:"file";s:25:"2014/05/wizard-driver.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:25:"wizard-driver-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:25:"wizard-driver-300x213.png";s:5:"width";i:300;s:6:"height";i:213;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:25:"wizard-driver-768x546.png";s:5:"width";i:768;s:6:"height";i:546;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:26:"wizard-driver-1024x729.png";s:5:"width";i:1024;s:6:"height";i:729;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:26:"wizard-driver-1200x854.png";s:5:"width";i:1200;s:6:"height";i:854;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Wizard-Data-Servers</title>
		<link>http://www.nikgrozev.org/2014/05/10/automated-cloudstone-setup-in-ubuntu-vms/wizard-data-servers/</link>
		<pubDate>Fri, 09 May 2014 10:51:32 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/wizard-data-servers.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>181</wp:post_id>
		<wp:post_date><![CDATA[2014-05-09 21:51:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-09 10:51:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[wizard-data-servers]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>166</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/wizard-data-servers.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/wizard-data-servers.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1267;s:6:"height";i:911;s:4:"file";s:31:"2014/05/wizard-data-servers.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:31:"wizard-data-servers-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:31:"wizard-data-servers-300x216.png";s:5:"width";i:300;s:6:"height";i:216;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:31:"wizard-data-servers-768x552.png";s:5:"width";i:768;s:6:"height";i:552;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:32:"wizard-data-servers-1024x736.png";s:5:"width";i:1024;s:6:"height";i:736;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:32:"wizard-data-servers-1200x863.png";s:5:"width";i:1200;s:6:"height";i:863;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Wizard-Web-Server</title>
		<link>http://www.nikgrozev.org/2014/05/10/automated-cloudstone-setup-in-ubuntu-vms/wizard-web-server/</link>
		<pubDate>Fri, 09 May 2014 10:51:34 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/wizard-web-server.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>182</wp:post_id>
		<wp:post_date><![CDATA[2014-05-09 21:51:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-09 10:51:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[wizard-web-server]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>166</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/wizard-web-server.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/wizard-web-server.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1239;s:6:"height";i:827;s:4:"file";s:29:"2014/05/wizard-web-server.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:29:"wizard-web-server-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:29:"wizard-web-server-300x200.png";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:29:"wizard-web-server-768x513.png";s:5:"width";i:768;s:6:"height";i:513;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:30:"wizard-web-server-1024x683.png";s:5:"width";i:1024;s:6:"height";i:683;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:30:"wizard-web-server-1200x801.png";s:5:"width";i:1200;s:6:"height";i:801;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DetailedResults</title>
		<link>http://www.nikgrozev.org/2014/05/10/automated-cloudstone-setup-in-ubuntu-vms/detailedresults/</link>
		<pubDate>Fri, 09 May 2014 10:54:48 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/detailedresults.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Once the execution is done - you can see the results.]]></excerpt:encoded>
		<wp:post_id>185</wp:post_id>
		<wp:post_date><![CDATA[2014-05-09 21:54:48]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-09 10:54:48]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[detailedresults]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>166</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/detailedresults.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/detailedresults.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1244;s:6:"height";i:908;s:4:"file";s:27:"2014/05/detailedresults.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"detailedresults-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:27:"detailedresults-300x219.png";s:5:"width";i:300;s:6:"height";i:219;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:27:"detailedresults-768x561.png";s:5:"width";i:768;s:6:"height";i:561;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:28:"detailedresults-1024x747.png";s:5:"width";i:1024;s:6:"height";i:747;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:28:"detailedresults-1200x876.png";s:5:"width";i:1200;s:6:"height";i:876;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Benchmark-Log</title>
		<link>http://www.nikgrozev.org/2014/05/10/automated-cloudstone-setup-in-ubuntu-vms/benchmark-log/</link>
		<pubDate>Fri, 09 May 2014 10:54:51 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/benchmark-log.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[The Logs during execution.]]></excerpt:encoded>
		<wp:post_id>186</wp:post_id>
		<wp:post_date><![CDATA[2014-05-09 21:54:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-09 10:54:51]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[benchmark-log]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>166</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/benchmark-log.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/benchmark-log.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1221;s:6:"height";i:833;s:4:"file";s:25:"2014/05/benchmark-log.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:25:"benchmark-log-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:25:"benchmark-log-300x205.png";s:5:"width";i:300;s:6:"height";i:205;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:25:"benchmark-log-768x524.png";s:5:"width";i:768;s:6:"height";i:524;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:26:"benchmark-log-1024x699.png";s:5:"width";i:1024;s:6:"height";i:699;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:26:"benchmark-log-1200x819.png";s:5:"width";i:1200;s:6:"height";i:819;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Wizard-Java</title>
		<link>http://www.nikgrozev.org/2014/05/10/automated-cloudstone-setup-in-ubuntu-vms/wizard-java/</link>
		<pubDate>Fri, 09 May 2014 11:03:13 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/wizard-java1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>189</wp:post_id>
		<wp:post_date><![CDATA[2014-05-09 22:03:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-09 11:03:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[wizard-java]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>166</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/wizard-java1.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/wizard-java1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:936;s:6:"height";i:476;s:4:"file";s:24:"2014/05/wizard-java1.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:24:"wizard-java1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:24:"wizard-java1-300x153.png";s:5:"width";i:300;s:6:"height";i:153;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:24:"wizard-java1-768x391.png";s:5:"width";i:768;s:6:"height";i:391;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-cropped-sam_263131.jpg</title>
		<link>http://www.nikgrozev.org/cropped-cropped-sam_263131-jpg/</link>
		<pubDate>Wed, 21 May 2014 07:43:39 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/cropped-cropped-sam_263131.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/cropped-cropped-sam_263131.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>196</wp:post_id>
		<wp:post_date><![CDATA[2014-05-21 18:43:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-21 07:43:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-cropped-sam_263131-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/cropped-cropped-sam_263131.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/cropped-cropped-sam_263131.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2000;s:6:"height";i:380;s:4:"file";s:38:"2014/05/cropped-cropped-sam_263131.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:38:"cropped-cropped-sam_263131-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:37:"cropped-cropped-sam_263131-300x57.jpg";s:5:"width";i:300;s:6:"height";i:57;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:38:"cropped-cropped-sam_263131-768x146.jpg";s:5:"width";i:768;s:6:"height";i:146;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:39:"cropped-cropped-sam_263131-1024x195.jpg";s:5:"width";i:1024;s:6:"height";i:195;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:39:"cropped-cropped-sam_263131-1200x228.jpg";s:5:"width";i:1200;s:6:"height";i:228;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_custom_header_last_used_pub/twentyfourteen]]></wp:meta_key>
			<wp:meta_value><![CDATA[1400658220]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[pub/twentyfourteen]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>me_d_plus_long_gs_</title>
		<link>http://www.nikgrozev.org/about/me_d_plus_long_gs_/</link>
		<pubDate>Wed, 21 May 2014 14:53:56 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/me_d_plus_long_gs_.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>197</wp:post_id>
		<wp:post_date><![CDATA[2014-05-22 01:53:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-21 14:53:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[me_d_plus_long_gs_]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>616</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/me_d_plus_long_gs_.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/me_d_plus_long_gs_.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:181;s:6:"height";i:274;s:4:"file";s:30:"2014/05/me_d_plus_long_gs_.png";s:5:"sizes";a:1:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"me_d_plus_long_gs_-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>me_big</title>
		<link>http://www.nikgrozev.org/about/me_big/</link>
		<pubDate>Wed, 21 May 2014 14:54:03 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/me_big.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>198</wp:post_id>
		<wp:post_date><![CDATA[2014-05-22 01:54:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-21 14:54:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[me_big]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>616</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/me_big.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/me_big.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2592;s:6:"height";i:1944;s:4:"file";s:18:"2014/05/me_big.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:18:"me_big-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:18:"me_big-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:18:"me_big-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:19:"me_big-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:19:"me_big-1200x900.jpg";s:5:"width";i:1200;s:6:"height";i:900;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"5.7";s:6:"credit";s:0:"";s:6:"camera";s:8:"DSC-W530";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1324833916";s:9:"copyright";s:0:"";s:12:"focal_length";s:4:"18.8";s:3:"iso";s:3:"800";s:13:"shutter_speed";s:5:"0.125";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-sam_2630.jpg</title>
		<link>http://www.nikgrozev.org/cropped-sam_2630-jpg/</link>
		<pubDate>Wed, 21 May 2014 15:47:10 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/cropped-sam_2630.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/cropped-sam_2630.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>210</wp:post_id>
		<wp:post_date><![CDATA[2014-05-22 02:47:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-21 15:47:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-sam_2630-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/cropped-sam_2630.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/cropped-sam_2630.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1280;s:6:"height";i:426;s:4:"file";s:28:"2014/05/cropped-sam_2630.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:28:"cropped-sam_2630-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:28:"cropped-sam_2630-300x100.jpg";s:5:"width";i:300;s:6:"height";i:100;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:28:"cropped-sam_2630-768x256.jpg";s:5:"width";i:768;s:6:"height";i:256;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:29:"cropped-sam_2630-1024x341.jpg";s:5:"width";i:1024;s:6:"height";i:341;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:29:"cropped-sam_2630-1200x399.jpg";s:5:"width";i:1200;s:6:"height";i:399;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_custom_header_last_used_pub/hemingway-rewritten]]></wp:meta_key>
			<wp:meta_value><![CDATA[1400687839]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[pub/hemingway-rewritten]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-cropped-cropped-sam_263131.jpg</title>
		<link>http://www.nikgrozev.org/cropped-cropped-cropped-sam_263131-jpg/</link>
		<pubDate>Wed, 21 May 2014 16:16:57 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/cropped-cropped-cropped-sam_263131.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/cropped-cropped-cropped-sam_263131.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>216</wp:post_id>
		<wp:post_date><![CDATA[2014-05-22 03:16:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-21 16:16:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-cropped-cropped-sam_263131-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/cropped-cropped-cropped-sam_263131.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/cropped-cropped-cropped-sam_263131.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1280;s:6:"height";i:208;s:4:"file";s:46:"2014/05/cropped-cropped-cropped-sam_263131.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:46:"cropped-cropped-cropped-sam_263131-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:45:"cropped-cropped-cropped-sam_263131-300x49.jpg";s:5:"width";i:300;s:6:"height";i:49;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:46:"cropped-cropped-cropped-sam_263131-768x125.jpg";s:5:"width";i:768;s:6:"height";i:125;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:47:"cropped-cropped-cropped-sam_263131-1024x166.jpg";s:5:"width";i:1024;s:6:"height";i:166;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:47:"cropped-cropped-cropped-sam_263131-1200x195.jpg";s:5:"width";i:1200;s:6:"height";i:195;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_custom_header_last_used_pub/skylark]]></wp:meta_key>
			<wp:meta_value><![CDATA[1400689018]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[pub/skylark]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SAM_5444</title>
		<link>http://www.nikgrozev.org/sam_5444/</link>
		<pubDate>Wed, 21 May 2014 16:21:16 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/sam_5444.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>217</wp:post_id>
		<wp:post_date><![CDATA[2014-05-22 03:21:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-21 16:21:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sam_5444]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/sam_5444.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/sam_5444.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2592;s:6:"height";i:1944;s:4:"file";s:20:"2014/05/sam_5444.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"sam_5444-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"sam_5444-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:20:"sam_5444-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:21:"sam_5444-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:21:"sam_5444-1200x900.jpg";s:5:"width";i:1200;s:6:"height";i:900;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"5.2";s:6:"credit";s:0:"";s:6:"camera";s:23:"SAMSUNG ES9/SAMSUNG ES8";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1394786751";s:9:"copyright";s:14:"Copyright 2011";s:12:"focal_length";s:4:"13.4";s:3:"iso";s:2:"80";s:13:"shutter_speed";s:16:"0.00315457413249";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SAM_5364</title>
		<link>http://www.nikgrozev.org/sam_5364/</link>
		<pubDate>Wed, 21 May 2014 16:21:36 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/sam_5364.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>218</wp:post_id>
		<wp:post_date><![CDATA[2014-05-22 03:21:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-21 16:21:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sam_5364]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/sam_5364.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/sam_5364.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2592;s:6:"height";i:1944;s:4:"file";s:20:"2014/05/sam_5364.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"sam_5364-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"sam_5364-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:20:"sam_5364-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:21:"sam_5364-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:21:"sam_5364-1200x900.jpg";s:5:"width";i:1200;s:6:"height";i:900;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"6.5";s:6:"credit";s:0:"";s:6:"camera";s:23:"SAMSUNG ES9/SAMSUNG ES8";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1394769747";s:9:"copyright";s:14:"Copyright 2011";s:12:"focal_length";s:4:"19.2";s:3:"iso";s:2:"80";s:13:"shutter_speed";s:16:"0.00126742712294";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SAM_5389</title>
		<link>http://www.nikgrozev.org/sam_5389/</link>
		<pubDate>Wed, 21 May 2014 16:22:04 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/sam_5389.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>219</wp:post_id>
		<wp:post_date><![CDATA[2014-05-22 03:22:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-21 16:22:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sam_5389]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/sam_5389.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/sam_5389.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2592;s:6:"height";i:1944;s:4:"file";s:20:"2014/05/sam_5389.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"sam_5389-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"sam_5389-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:20:"sam_5389-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:21:"sam_5389-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:21:"sam_5389-1200x900.jpg";s:5:"width";i:1200;s:6:"height";i:900;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"9.9";s:6:"credit";s:0:"";s:6:"camera";s:23:"SAMSUNG ES9/SAMSUNG ES8";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1394776862";s:9:"copyright";s:14:"Copyright 2011";s:12:"focal_length";s:3:"4.8";s:3:"iso";s:2:"80";s:13:"shutter_speed";s:16:"0.00408163265306";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SAM_5393</title>
		<link>http://www.nikgrozev.org/sam_5393/</link>
		<pubDate>Wed, 21 May 2014 16:22:19 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/sam_5393.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>220</wp:post_id>
		<wp:post_date><![CDATA[2014-05-22 03:22:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-21 16:22:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sam_5393]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/sam_5393.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/sam_5393.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2592;s:6:"height";i:1944;s:4:"file";s:20:"2014/05/sam_5393.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"sam_5393-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"sam_5393-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:20:"sam_5393-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:21:"sam_5393-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:21:"sam_5393-1200x900.jpg";s:5:"width";i:1200;s:6:"height";i:900;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"5.2";s:6:"credit";s:0:"";s:6:"camera";s:23:"SAMSUNG ES9/SAMSUNG ES8";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1394777147";s:9:"copyright";s:14:"Copyright 2011";s:12:"focal_length";s:4:"13.4";s:3:"iso";s:2:"80";s:13:"shutter_speed";s:5:"0.002";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>SAM_5407</title>
		<link>http://www.nikgrozev.org/sam_5407/</link>
		<pubDate>Wed, 21 May 2014 16:22:36 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/sam_5407.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>221</wp:post_id>
		<wp:post_date><![CDATA[2014-05-22 03:22:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-21 16:22:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[sam_5407]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/sam_5407.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/sam_5407.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:2592;s:6:"height";i:1944;s:4:"file";s:20:"2014/05/sam_5407.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"sam_5407-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"sam_5407-300x225.jpg";s:5:"width";i:300;s:6:"height";i:225;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:20:"sam_5407-768x576.jpg";s:5:"width";i:768;s:6:"height";i:576;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:21:"sam_5407-1024x768.jpg";s:5:"width";i:1024;s:6:"height";i:768;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:21:"sam_5407-1200x900.jpg";s:5:"width";i:1200;s:6:"height";i:900;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:3:"9.9";s:6:"credit";s:0:"";s:6:"camera";s:23:"SAMSUNG ES9/SAMSUNG ES8";s:7:"caption";s:0:"";s:17:"created_timestamp";s:10:"1394778581";s:9:"copyright";s:14:"Copyright 2011";s:12:"focal_length";s:3:"4.8";s:3:"iso";s:2:"80";s:13:"shutter_speed";s:15:"0.0042735042735";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-sam_5389.jpg</title>
		<link>http://www.nikgrozev.org/cropped-sam_5389-jpg/</link>
		<pubDate>Wed, 21 May 2014 16:23:10 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/cropped-sam_5389.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/cropped-sam_5389.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>222</wp:post_id>
		<wp:post_date><![CDATA[2014-05-22 03:23:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-21 16:23:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-sam_5389-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/cropped-sam_5389.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/cropped-sam_5389.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1280;s:6:"height";i:401;s:4:"file";s:28:"2014/05/cropped-sam_5389.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:28:"cropped-sam_5389-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:27:"cropped-sam_5389-300x94.jpg";s:5:"width";i:300;s:6:"height";i:94;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:28:"cropped-sam_5389-768x241.jpg";s:5:"width";i:768;s:6:"height";i:241;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:29:"cropped-sam_5389-1024x321.jpg";s:5:"width";i:1024;s:6:"height";i:321;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:29:"cropped-sam_5389-1200x376.jpg";s:5:"width";i:1200;s:6:"height";i:376;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_custom_header_last_used_pub/skylark]]></wp:meta_key>
			<wp:meta_value><![CDATA[1400689391]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[pub/skylark]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-sam_5393.jpg</title>
		<link>http://www.nikgrozev.org/cropped-sam_5393-jpg/</link>
		<pubDate>Wed, 21 May 2014 16:23:51 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/05/cropped-sam_5393.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/cropped-sam_5393.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>223</wp:post_id>
		<wp:post_date><![CDATA[2014-05-22 03:23:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-21 16:23:51]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-sam_5393-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/05/cropped-sam_5393.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/05/cropped-sam_5393.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1280;s:6:"height";i:229;s:4:"file";s:28:"2014/05/cropped-sam_5393.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:28:"cropped-sam_5393-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:27:"cropped-sam_5393-300x54.jpg";s:5:"width";i:300;s:6:"height";i:54;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:28:"cropped-sam_5393-768x137.jpg";s:5:"width";i:768;s:6:"height";i:137;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:29:"cropped-sam_5393-1024x183.jpg";s:5:"width";i:1024;s:6:"height";i:183;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:29:"cropped-sam_5393-1200x215.jpg";s:5:"width";i:1200;s:6:"height";i:215;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_custom_header_last_used_pub/skylark]]></wp:meta_key>
			<wp:meta_value><![CDATA[1400689456]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[pub/skylark]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CloudStoneOverviewWithLoadBalancer</title>
		<link>http://www.nikgrozev.org/2014/06/02/advanced-automated-cloudstone-setup-in-ubuntu-vms-part-2/cloudstoneoverviewwithloadbalancer/</link>
		<pubDate>Sun, 01 Jun 2014 04:00:07 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/06/cloudstoneoverviewwithloadbalancer.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>230</wp:post_id>
		<wp:post_date><![CDATA[2014-06-01 15:00:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-01 04:00:07]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cloudstoneoverviewwithloadbalancer]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>227</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/06/cloudstoneoverviewwithloadbalancer.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/cloudstoneoverviewwithloadbalancer.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:954;s:6:"height";i:485;s:4:"file";s:46:"2014/06/cloudstoneoverviewwithloadbalancer.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:46:"cloudstoneoverviewwithloadbalancer-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:46:"cloudstoneoverviewwithloadbalancer-300x153.png";s:5:"width";i:300;s:6:"height";i:153;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:46:"cloudstoneoverviewwithloadbalancer-768x390.png";s:5:"width";i:768;s:6:"height";i:390;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CloudStoneInstallationTopologyWithLoadBalancer</title>
		<link>http://www.nikgrozev.org/2014/06/02/advanced-automated-cloudstone-setup-in-ubuntu-vms-part-2/cloudstoneinstallationtopologywithloadbalancer/</link>
		<pubDate>Sun, 01 Jun 2014 04:24:14 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/06/cloudstoneinstallationtopologywithloadbalancer.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[The installer Linux machine uses SSH and SCP to configure the CloudStone VMs. All CloudStone VMs run 64bit Ubuntu 14.04, have the same pem file (e.g. CloudStone.pem) and the same permissive security group (e.g. named CloudStone)]]></excerpt:encoded>
		<wp:post_id>235</wp:post_id>
		<wp:post_date><![CDATA[2014-06-01 15:24:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-01 04:24:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cloudstoneinstallationtopologywithloadbalancer]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>227</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/06/cloudstoneinstallationtopologywithloadbalancer.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/cloudstoneinstallationtopologywithloadbalancer.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:855;s:6:"height";i:572;s:4:"file";s:58:"2014/06/cloudstoneinstallationtopologywithloadbalancer.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:58:"cloudstoneinstallationtopologywithloadbalancer-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:58:"cloudstoneinstallationtopologywithloadbalancer-300x201.png";s:5:"width";i:300;s:6:"height";i:201;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:58:"cloudstoneinstallationtopologywithloadbalancer-768x514.png";s:5:"width";i:768;s:6:"height";i:514;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Wizard-Data-Servers[Advanced]</title>
		<link>http://www.nikgrozev.org/2014/06/02/advanced-automated-cloudstone-setup-in-ubuntu-vms-part-2/wizard-data-serversadvanced/</link>
		<pubDate>Sun, 01 Jun 2014 05:10:04 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/06/wizard-data-serversadvanced.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>239</wp:post_id>
		<wp:post_date><![CDATA[2014-06-01 16:10:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-01 05:10:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[wizard-data-serversadvanced]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>227</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/06/wizard-data-serversadvanced.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/wizard-data-serversadvanced.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1267;s:6:"height";i:911;s:4:"file";s:39:"2014/06/wizard-data-serversadvanced.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:39:"wizard-data-serversadvanced-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:39:"wizard-data-serversadvanced-300x216.png";s:5:"width";i:300;s:6:"height";i:216;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:39:"wizard-data-serversadvanced-768x552.png";s:5:"width";i:768;s:6:"height";i:552;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:40:"wizard-data-serversadvanced-1024x736.png";s:5:"width";i:1024;s:6:"height";i:736;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:40:"wizard-data-serversadvanced-1200x863.png";s:5:"width";i:1200;s:6:"height";i:863;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Wizard-Java[Advanced]</title>
		<link>http://www.nikgrozev.org/2014/06/02/advanced-automated-cloudstone-setup-in-ubuntu-vms-part-2/wizard-javaadvanced/</link>
		<pubDate>Sun, 01 Jun 2014 05:10:08 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/06/wizard-javaadvanced.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>241</wp:post_id>
		<wp:post_date><![CDATA[2014-06-01 16:10:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-01 05:10:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[wizard-javaadvanced]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>227</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/06/wizard-javaadvanced.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/wizard-javaadvanced.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:936;s:6:"height";i:476;s:4:"file";s:31:"2014/06/wizard-javaadvanced.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:31:"wizard-javaadvanced-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:31:"wizard-javaadvanced-300x153.png";s:5:"width";i:300;s:6:"height";i:153;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:31:"wizard-javaadvanced-768x391.png";s:5:"width";i:768;s:6:"height";i:391;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Wizard-Driver[Advanced]</title>
		<link>http://www.nikgrozev.org/2014/06/02/advanced-automated-cloudstone-setup-in-ubuntu-vms-part-2/wizard-driveradvanced/</link>
		<pubDate>Sun, 01 Jun 2014 05:10:10 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/06/wizard-driveradvanced.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>242</wp:post_id>
		<wp:post_date><![CDATA[2014-06-01 16:10:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-01 05:10:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[wizard-driveradvanced]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>227</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/06/wizard-driveradvanced.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/wizard-driveradvanced.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1251;s:6:"height";i:890;s:4:"file";s:33:"2014/06/wizard-driveradvanced.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:33:"wizard-driveradvanced-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:33:"wizard-driveradvanced-300x213.png";s:5:"width";i:300;s:6:"height";i:213;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:33:"wizard-driveradvanced-768x546.png";s:5:"width";i:768;s:6:"height";i:546;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:34:"wizard-driveradvanced-1024x729.png";s:5:"width";i:1024;s:6:"height";i:729;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:34:"wizard-driveradvanced-1200x854.png";s:5:"width";i:1200;s:6:"height";i:854;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CloudStoneOverviewWithLoadBalancer</title>
		<link>http://www.nikgrozev.org/2014/06/02/advanced-automated-cloudstone-setup-in-ubuntu-vms-part-2/cloudstoneoverviewwithloadbalancer-2/</link>
		<pubDate>Mon, 02 Jun 2014 08:43:29 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/06/cloudstoneoverviewwithloadbalancer1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[CloudStone Architecture with a load balancer and a NFS server]]></excerpt:encoded>
		<wp:post_id>256</wp:post_id>
		<wp:post_date><![CDATA[2014-06-02 19:43:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-02 08:43:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cloudstoneoverviewwithloadbalancer-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>227</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/06/cloudstoneoverviewwithloadbalancer1.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/cloudstoneoverviewwithloadbalancer1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:948;s:6:"height";i:489;s:4:"file";s:47:"2014/06/cloudstoneoverviewwithloadbalancer1.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:47:"cloudstoneoverviewwithloadbalancer1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:47:"cloudstoneoverviewwithloadbalancer1-300x155.png";s:5:"width";i:300;s:6:"height";i:155;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:47:"cloudstoneoverviewwithloadbalancer1-768x396.png";s:5:"width";i:768;s:6:"height";i:396;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Wizard-Web-Server[Advanced]</title>
		<link>http://www.nikgrozev.org/2014/06/02/advanced-automated-cloudstone-setup-in-ubuntu-vms-part-2/wizard-web-serveradvanced/</link>
		<pubDate>Mon, 02 Jun 2014 11:14:17 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/06/wizard-web-serveradvanced1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>262</wp:post_id>
		<wp:post_date><![CDATA[2014-06-02 22:14:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-02 11:14:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[wizard-web-serveradvanced]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>227</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/06/wizard-web-serveradvanced1.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/wizard-web-serveradvanced1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1274;s:6:"height";i:802;s:4:"file";s:38:"2014/06/wizard-web-serveradvanced1.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:38:"wizard-web-serveradvanced1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:38:"wizard-web-serveradvanced1-300x189.png";s:5:"width";i:300;s:6:"height";i:189;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:38:"wizard-web-serveradvanced1-768x483.png";s:5:"width";i:768;s:6:"height";i:483;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:39:"wizard-web-serveradvanced1-1024x645.png";s:5:"width";i:1024;s:6:"height";i:645;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:39:"wizard-web-serveradvanced1-1200x755.png";s:5:"width";i:1200;s:6:"height";i:755;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MavenInEclipse</title>
		<link>http://www.nikgrozev.org/2014/06/08/cloudsim-and-cloudsimex-part-1/mavenineclipse/</link>
		<pubDate>Mon, 02 Jun 2014 15:16:40 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/06/mavenineclipse.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Maven Setup in Eclipse]]></excerpt:encoded>
		<wp:post_id>273</wp:post_id>
		<wp:post_date><![CDATA[2014-06-03 02:16:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-02 15:16:40]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[mavenineclipse]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>259</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/06/mavenineclipse.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/mavenineclipse.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:662;s:6:"height";i:888;s:4:"file";s:26:"2014/06/mavenineclipse.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:26:"mavenineclipse-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:26:"mavenineclipse-224x300.png";s:5:"width";i:224;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Import-CloudSim4</title>
		<link>http://www.nikgrozev.org/2014/06/08/cloudsim-and-cloudsimex-part-1/import-cloudsim4/</link>
		<pubDate>Mon, 02 Jun 2014 15:20:53 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/06/import-cloudsim4.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>275</wp:post_id>
		<wp:post_date><![CDATA[2014-06-03 02:20:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-02 15:20:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[import-cloudsim4]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>259</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/06/import-cloudsim4.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/import-cloudsim4.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1280;s:6:"height";i:1024;s:4:"file";s:28:"2014/06/import-cloudsim4.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:28:"import-cloudsim4-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:28:"import-cloudsim4-300x240.png";s:5:"width";i:300;s:6:"height";i:240;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:28:"import-cloudsim4-768x614.png";s:5:"width";i:768;s:6:"height";i:614;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:29:"import-cloudsim4-1024x819.png";s:5:"width";i:1024;s:6:"height";i:819;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:29:"import-cloudsim4-1200x960.png";s:5:"width";i:1200;s:6:"height";i:960;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Import-CloudSim3</title>
		<link>http://www.nikgrozev.org/2014/06/08/cloudsim-and-cloudsimex-part-1/import-cloudsim3/</link>
		<pubDate>Mon, 02 Jun 2014 15:20:57 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/06/import-cloudsim3.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>276</wp:post_id>
		<wp:post_date><![CDATA[2014-06-03 02:20:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-02 15:20:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[import-cloudsim3]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>259</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/06/import-cloudsim3.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/import-cloudsim3.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1276;s:6:"height";i:1028;s:4:"file";s:28:"2014/06/import-cloudsim3.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:28:"import-cloudsim3-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:28:"import-cloudsim3-300x242.png";s:5:"width";i:300;s:6:"height";i:242;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:28:"import-cloudsim3-768x619.png";s:5:"width";i:768;s:6:"height";i:619;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:29:"import-cloudsim3-1024x825.png";s:5:"width";i:1024;s:6:"height";i:825;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:29:"import-cloudsim3-1200x967.png";s:5:"width";i:1200;s:6:"height";i:967;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Import-CloudSim2</title>
		<link>http://www.nikgrozev.org/2014/06/08/cloudsim-and-cloudsimex-part-1/import-cloudsim2/</link>
		<pubDate>Mon, 02 Jun 2014 15:21:00 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/06/import-cloudsim2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>277</wp:post_id>
		<wp:post_date><![CDATA[2014-06-03 02:21:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-02 15:21:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[import-cloudsim2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>259</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/06/import-cloudsim2.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/import-cloudsim2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1282;s:6:"height";i:1026;s:4:"file";s:28:"2014/06/import-cloudsim2.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:28:"import-cloudsim2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:28:"import-cloudsim2-300x240.png";s:5:"width";i:300;s:6:"height";i:240;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:28:"import-cloudsim2-768x615.png";s:5:"width";i:768;s:6:"height";i:615;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:29:"import-cloudsim2-1024x820.png";s:5:"width";i:1024;s:6:"height";i:820;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:29:"import-cloudsim2-1200x960.png";s:5:"width";i:1200;s:6:"height";i:960;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Import-CloudSim1</title>
		<link>http://www.nikgrozev.org/2014/06/08/cloudsim-and-cloudsimex-part-1/import-cloudsim1/</link>
		<pubDate>Mon, 02 Jun 2014 15:21:03 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/06/import-cloudsim1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>278</wp:post_id>
		<wp:post_date><![CDATA[2014-06-03 02:21:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-02 15:21:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[import-cloudsim1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>259</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/06/import-cloudsim1.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/import-cloudsim1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1278;s:6:"height";i:1024;s:4:"file";s:28:"2014/06/import-cloudsim1.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:28:"import-cloudsim1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:28:"import-cloudsim1-300x240.png";s:5:"width";i:300;s:6:"height";i:240;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:28:"import-cloudsim1-768x615.png";s:5:"width";i:768;s:6:"height";i:615;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:29:"import-cloudsim1-1024x820.png";s:5:"width";i:1024;s:6:"height";i:820;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:29:"import-cloudsim1-1200x962.png";s:5:"width";i:1200;s:6:"height";i:962;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>New Maven Project2</title>
		<link>http://www.nikgrozev.org/2014/06/08/cloudsim-and-cloudsimex-part-1/new-maven-project2/</link>
		<pubDate>Wed, 04 Jun 2014 13:27:35 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/06/new-maven-project2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>284</wp:post_id>
		<wp:post_date><![CDATA[2014-06-05 00:27:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-04 13:27:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[new-maven-project2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>259</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/06/new-maven-project2.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/new-maven-project2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1276;s:6:"height";i:1028;s:4:"file";s:30:"2014/06/new-maven-project2.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"new-maven-project2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:30:"new-maven-project2-300x242.png";s:5:"width";i:300;s:6:"height";i:242;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:30:"new-maven-project2-768x619.png";s:5:"width";i:768;s:6:"height";i:619;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:31:"new-maven-project2-1024x825.png";s:5:"width";i:1024;s:6:"height";i:825;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:31:"new-maven-project2-1200x967.png";s:5:"width";i:1200;s:6:"height";i:967;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>New Maven Project3</title>
		<link>http://www.nikgrozev.org/2014/06/08/cloudsim-and-cloudsimex-part-1/new-maven-project3/</link>
		<pubDate>Wed, 04 Jun 2014 13:27:38 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/06/new-maven-project3.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>285</wp:post_id>
		<wp:post_date><![CDATA[2014-06-05 00:27:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-04 13:27:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[new-maven-project3]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>259</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/06/new-maven-project3.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/new-maven-project3.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1278;s:6:"height";i:1020;s:4:"file";s:30:"2014/06/new-maven-project3.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"new-maven-project3-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:30:"new-maven-project3-300x239.png";s:5:"width";i:300;s:6:"height";i:239;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:30:"new-maven-project3-768x613.png";s:5:"width";i:768;s:6:"height";i:613;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:31:"new-maven-project3-1024x817.png";s:5:"width";i:1024;s:6:"height";i:817;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:31:"new-maven-project3-1200x958.png";s:5:"width";i:1200;s:6:"height";i:958;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>New Maven Project1</title>
		<link>http://www.nikgrozev.org/2014/06/08/cloudsim-and-cloudsimex-part-1/new-maven-project1/</link>
		<pubDate>Wed, 04 Jun 2014 13:27:41 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/06/new-maven-project1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>286</wp:post_id>
		<wp:post_date><![CDATA[2014-06-05 00:27:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-04 13:27:41]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[new-maven-project1]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>259</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/06/new-maven-project1.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/new-maven-project1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1276;s:6:"height";i:1028;s:4:"file";s:30:"2014/06/new-maven-project1.png";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"new-maven-project1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:30:"new-maven-project1-300x242.png";s:5:"width";i:300;s:6:"height";i:242;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:30:"new-maven-project1-768x619.png";s:5:"width";i:768;s:6:"height";i:619;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:31:"new-maven-project1-1024x825.png";s:5:"width";i:1024;s:6:"height";i:825;s:9:"mime-type";s:9:"image/png";}s:14:"post-thumbnail";a:4:{s:4:"file";s:31:"new-maven-project1-1200x967.png";s:5:"width";i:1200;s:6:"height";i:967;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Test-Project-Properties</title>
		<link>http://www.nikgrozev.org/2014/06/08/cloudsim-and-cloudsimex-part-1/test-project-properties/</link>
		<pubDate>Sat, 07 Jun 2014 13:42:51 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/06/test-project-properties.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Test Project Properties]]></excerpt:encoded>
		<wp:post_id>307</wp:post_id>
		<wp:post_date><![CDATA[2014-06-08 00:42:51]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-07 13:42:51]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[test-project-properties]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>259</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/06/test-project-properties.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/test-project-properties.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:641;s:6:"height";i:679;s:4:"file";s:35:"2014/06/test-project-properties.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:35:"test-project-properties-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:35:"test-project-properties-283x300.png";s:5:"width";i:283;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>HostDiskSched</title>
		<link>http://www.nikgrozev.org/2014/06/13/cloudsim-and-cloudsimex-part-2-disk-opeartions/hostdisksched/</link>
		<pubDate>Thu, 12 Jun 2014 16:05:43 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/06/hostdisksched2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Scheduling of VMs load to the host.]]></excerpt:encoded>
		<wp:post_id>338</wp:post_id>
		<wp:post_date><![CDATA[2014-06-13 03:05:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-12 16:05:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[hostdisksched]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>319</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/06/hostdisksched2.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/hostdisksched2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:508;s:6:"height";i:281;s:4:"file";s:26:"2014/06/hostdisksched2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:26:"hostdisksched2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:26:"hostdisksched2-300x166.png";s:5:"width";i:300;s:6:"height";i:166;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>VMDiskSched</title>
		<link>http://www.nikgrozev.org/2014/06/13/cloudsim-and-cloudsimex-part-2-disk-opeartions/vmdisksched/</link>
		<pubDate>Thu, 12 Jun 2014 16:06:31 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/06/vmdisksched2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Cloud scheduling]]></excerpt:encoded>
		<wp:post_id>339</wp:post_id>
		<wp:post_date><![CDATA[2014-06-13 03:06:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-12 16:06:31]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[vmdisksched]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>319</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/06/vmdisksched2.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/06/vmdisksched2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:589;s:6:"height";i:224;s:4:"file";s:24:"2014/06/vmdisksched2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:24:"vmdisksched2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:24:"vmdisksched2-300x114.png";s:5:"width";i:300;s:6:"height";i:114;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Maven-&gt;Installation</title>
		<link>http://www.nikgrozev.org/2014/10/16/rest-with-embedded-jetty-and-jersey-in-a-single-jar-step-by-step/4-mvn/</link>
		<pubDate>Wed, 15 Oct 2014 13:24:56 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/10/4-mvn.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Go to Window-&gt;Preferences, then select Maven-&gt;Installations. Add a new installations]]></excerpt:encoded>
		<wp:post_id>390</wp:post_id>
		<wp:post_date><![CDATA[2014-10-16 00:24:56]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-10-15 13:24:56]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[4-mvn]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>387</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/10/4-mvn.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/10/4-mvn.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1023;s:6:"height";i:741;s:4:"file";s:17:"2014/10/4-mvn.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:17:"4-mvn-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:17:"4-mvn-300x217.png";s:5:"width";i:300;s:6:"height";i:217;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:17:"4-mvn-768x556.png";s:5:"width";i:768;s:6:"height";i:556;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Browse to installation</title>
		<link>http://www.nikgrozev.org/2014/10/16/rest-with-embedded-jetty-and-jersey-in-a-single-jar-step-by-step/5-mvn/</link>
		<pubDate>Wed, 15 Oct 2014 13:25:00 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/10/5-mvn.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA["Browse" to the location of your system Maven installation.]]></excerpt:encoded>
		<wp:post_id>391</wp:post_id>
		<wp:post_date><![CDATA[2014-10-16 00:25:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-10-15 13:25:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[5-mvn]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>387</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/10/5-mvn.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/10/5-mvn.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1014;s:6:"height";i:738;s:4:"file";s:17:"2014/10/5-mvn.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:17:"5-mvn-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:17:"5-mvn-300x218.png";s:5:"width";i:300;s:6:"height";i:218;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:17:"5-mvn-768x559.png";s:5:"width";i:768;s:6:"height";i:559;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Select Eclipse&#039;s Maven</title>
		<link>http://www.nikgrozev.org/2014/10/16/rest-with-embedded-jetty-and-jersey-in-a-single-jar-step-by-step/6-mvn/</link>
		<pubDate>Wed, 15 Oct 2014 13:25:03 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/10/6-mvn.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Set your system Maven as default for Eclipse.]]></excerpt:encoded>
		<wp:post_id>392</wp:post_id>
		<wp:post_date><![CDATA[2014-10-16 00:25:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-10-15 13:25:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[6-mvn]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>387</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/10/6-mvn.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/10/6-mvn.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1023;s:6:"height";i:743;s:4:"file";s:17:"2014/10/6-mvn.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:17:"6-mvn-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:17:"6-mvn-300x218.png";s:5:"width";i:300;s:6:"height";i:218;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:17:"6-mvn-768x558.png";s:5:"width";i:768;s:6:"height";i:558;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>File-&gt;Import</title>
		<link>http://www.nikgrozev.org/2014/10/16/rest-with-embedded-jetty-and-jersey-in-a-single-jar-step-by-step/1-importdialog/</link>
		<pubDate>Wed, 15 Oct 2014 13:30:09 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/10/1-importdialog.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Go to File-&gt;Import. Then select Maven-&gt;Existing Maven Project]]></excerpt:encoded>
		<wp:post_id>393</wp:post_id>
		<wp:post_date><![CDATA[2014-10-16 00:30:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-10-15 13:30:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[1-importdialog]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>387</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/10/1-importdialog.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/10/1-importdialog.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1020;s:6:"height";i:746;s:4:"file";s:26:"2014/10/1-importdialog.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:26:"1-importdialog-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:26:"1-importdialog-300x219.png";s:5:"width";i:300;s:6:"height";i:219;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:26:"1-importdialog-768x562.png";s:5:"width";i:768;s:6:"height";i:562;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Browse</title>
		<link>http://www.nikgrozev.org/2014/10/16/rest-with-embedded-jetty-and-jersey-in-a-single-jar-step-by-step/2-importdialog/</link>
		<pubDate>Wed, 15 Oct 2014 13:30:12 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/10/2-importdialog.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Browse to the location of the project]]></excerpt:encoded>
		<wp:post_id>394</wp:post_id>
		<wp:post_date><![CDATA[2014-10-16 00:30:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-10-15 13:30:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[2-importdialog]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>387</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/10/2-importdialog.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/10/2-importdialog.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1019;s:6:"height";i:744;s:4:"file";s:26:"2014/10/2-importdialog.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:26:"2-importdialog-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:26:"2-importdialog-300x219.png";s:5:"width";i:300;s:6:"height";i:219;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:26:"2-importdialog-768x561.png";s:5:"width";i:768;s:6:"height";i:561;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Select project</title>
		<link>http://www.nikgrozev.org/2014/10/16/rest-with-embedded-jetty-and-jersey-in-a-single-jar-step-by-step/3-importdialog/</link>
		<pubDate>Wed, 15 Oct 2014 13:30:14 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2014/10/3-importdialog.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Select the project]]></excerpt:encoded>
		<wp:post_id>395</wp:post_id>
		<wp:post_date><![CDATA[2014-10-16 00:30:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-10-15 13:30:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[3-importdialog]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>387</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2014/10/3-importdialog.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2014/10/3-importdialog.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1019;s:6:"height";i:738;s:4:"file";s:26:"2014/10/3-importdialog.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:26:"3-importdialog-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:26:"3-importdialog-300x217.png";s:5:"width";i:300;s:6:"height";i:217;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:26:"3-importdialog-768x556.png";s:5:"width";i:768;s:6:"height";i:556;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DOT_NET</title>
		<link>http://www.nikgrozev.org/2015/03/28/net-for-java-devs-in-a-nutshell/dot_net/</link>
		<pubDate>Fri, 27 Mar 2015 13:06:20 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/03/dot_net.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Relationship between specifications]]></excerpt:encoded>
		<wp:post_id>409</wp:post_id>
		<wp:post_date><![CDATA[2015-03-28 00:06:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-03-27 13:06:20]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[dot_net]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>408</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/03/dot_net.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/03/dot_net.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:669;s:6:"height";i:366;s:4:"file";s:19:"2015/03/dot_net.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:19:"dot_net-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:19:"dot_net-300x164.jpg";s:5:"width";i:300;s:6:"height";i:164;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>AS</title>
		<link>http://www.nikgrozev.org/2015/04/22/basic-networks-cheatsheet-part-1/as/</link>
		<pubDate>Wed, 22 Apr 2015 10:53:04 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/04/as.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Autonomous Systems]]></excerpt:encoded>
		<wp:post_id>416</wp:post_id>
		<wp:post_date><![CDATA[2015-04-22 21:53:04]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-04-22 10:53:04]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[as]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>414</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/04/as.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/04/as.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:837;s:6:"height";i:456;s:4:"file";s:14:"2015/04/as.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:14:"as-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:14:"as-300x163.jpg";s:5:"width";i:300;s:6:"height";i:163;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:14:"as-768x418.jpg";s:5:"width";i:768;s:6:"height";i:418;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>NAT</title>
		<link>http://www.nikgrozev.org/2015/04/22/basic-networks-cheatsheet-part-1/nat/</link>
		<pubDate>Wed, 22 Apr 2015 10:53:05 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/04/nat.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[NAT]]></excerpt:encoded>
		<wp:post_id>417</wp:post_id>
		<wp:post_date><![CDATA[2015-04-22 21:53:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-04-22 10:53:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nat]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>414</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/04/nat.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/04/nat.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:987;s:6:"height";i:467;s:4:"file";s:15:"2015/04/nat.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:15:"nat-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:15:"nat-300x142.jpg";s:5:"width";i:300;s:6:"height";i:142;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:15:"nat-768x363.jpg";s:5:"width";i:768;s:6:"height";i:363;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Pivoting_Simple</title>
		<link>http://www.nikgrozev.org/2015/07/01/reshaping-in-pandas-pivot-pivot-table-stack-and-unstack-explained-with-pictures/pivoting_simple/</link>
		<pubDate>Tue, 30 Jun 2015 16:13:21 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/07/pivoting_simple.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>426</wp:post_id>
		<wp:post_date><![CDATA[2015-07-01 03:13:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-06-30 16:13:21]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pivoting_simple]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>420</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/07/pivoting_simple.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/07/pivoting_simple.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:767;s:6:"height";i:316;s:4:"file";s:27:"2015/07/pivoting_simple.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:27:"pivoting_simple-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:27:"pivoting_simple-300x124.png";s:5:"width";i:300;s:6:"height";i:124;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Pivoting_Simple_Error</title>
		<link>http://www.nikgrozev.org/2015/07/01/reshaping-in-pandas-pivot-pivot-table-stack-and-unstack-explained-with-pictures/pivoting_simple_error/</link>
		<pubDate>Tue, 30 Jun 2015 16:13:23 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/07/pivoting_simple_error.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Common error in pivoting]]></excerpt:encoded>
		<wp:post_id>427</wp:post_id>
		<wp:post_date><![CDATA[2015-07-01 03:13:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-06-30 16:13:23]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pivoting_simple_error]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>420</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/07/pivoting_simple_error.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/07/pivoting_simple_error.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:758;s:6:"height";i:261;s:4:"file";s:33:"2015/07/pivoting_simple_error.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:33:"pivoting_simple_error-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:33:"pivoting_simple_error-300x103.png";s:5:"width";i:300;s:6:"height";i:103;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Pivoting_Simple_MultiColumn</title>
		<link>http://www.nikgrozev.org/2015/07/01/reshaping-in-pandas-pivot-pivot-table-stack-and-unstack-explained-with-pictures/pivoting_simple_multicolumn/</link>
		<pubDate>Tue, 30 Jun 2015 16:13:24 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/07/pivoting_simple_multicolumn.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Multi-column pivoting]]></excerpt:encoded>
		<wp:post_id>428</wp:post_id>
		<wp:post_date><![CDATA[2015-07-01 03:13:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-06-30 16:13:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pivoting_simple_multicolumn]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>420</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/07/pivoting_simple_multicolumn.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/07/pivoting_simple_multicolumn.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:943;s:6:"height";i:395;s:4:"file";s:39:"2015/07/pivoting_simple_multicolumn.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:39:"pivoting_simple_multicolumn-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:39:"pivoting_simple_multicolumn-300x126.png";s:5:"width";i:300;s:6:"height";i:126;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:39:"pivoting_simple_multicolumn-768x322.png";s:5:"width";i:768;s:6:"height";i:322;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Pivoting_Table_Simple</title>
		<link>http://www.nikgrozev.org/2015/07/01/reshaping-in-pandas-pivot-pivot-table-stack-and-unstack-explained-with-pictures/pivoting_table_simple/</link>
		<pubDate>Tue, 30 Jun 2015 16:13:26 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/07/pivoting_table_simple.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>429</wp:post_id>
		<wp:post_date><![CDATA[2015-07-01 03:13:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-06-30 16:13:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pivoting_table_simple]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>420</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/07/pivoting_table_simple.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/07/pivoting_table_simple.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:779;s:6:"height";i:259;s:4:"file";s:33:"2015/07/pivoting_table_simple.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:33:"pivoting_table_simple-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:33:"pivoting_table_simple-300x100.png";s:5:"width";i:300;s:6:"height";i:100;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:33:"pivoting_table_simple-768x255.png";s:5:"width";i:768;s:6:"height";i:255;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Stack-Simple</title>
		<link>http://www.nikgrozev.org/2015/07/01/reshaping-in-pandas-pivot-pivot-table-stack-and-unstack-explained-with-pictures/stack-simple/</link>
		<pubDate>Tue, 30 Jun 2015 16:13:27 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/07/stack-simple.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>430</wp:post_id>
		<wp:post_date><![CDATA[2015-07-01 03:13:27]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-06-30 16:13:27]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[stack-simple]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>420</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/07/stack-simple.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/07/stack-simple.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:665;s:6:"height";i:404;s:4:"file";s:24:"2015/07/stack-simple.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:24:"stack-simple-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:24:"stack-simple-300x182.png";s:5:"width";i:300;s:6:"height";i:182;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Stack-Unstack</title>
		<link>http://www.nikgrozev.org/2015/07/01/reshaping-in-pandas-pivot-pivot-table-stack-and-unstack-explained-with-pictures/stack-unstack/</link>
		<pubDate>Tue, 30 Jun 2015 16:13:29 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/07/stack-unstack.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>431</wp:post_id>
		<wp:post_date><![CDATA[2015-07-01 03:13:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-06-30 16:13:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[stack-unstack]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>420</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/07/stack-unstack.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/07/stack-unstack.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:850;s:6:"height";i:511;s:4:"file";s:25:"2015/07/stack-unstack.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:25:"stack-unstack-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:25:"stack-unstack-300x180.png";s:5:"width";i:300;s:6:"height";i:180;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:25:"stack-unstack-768x462.png";s:5:"width";i:768;s:6:"height";i:462;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Table</title>
		<link>http://www.nikgrozev.org/2015/07/01/reshaping-in-pandas-pivot-pivot-table-stack-and-unstack-explained-with-pictures/table/</link>
		<pubDate>Tue, 30 Jun 2015 16:13:30 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/07/table.png</guid>
		<description></description>
		<content:encoded><![CDATA[Sample data]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>432</wp:post_id>
		<wp:post_date><![CDATA[2015-07-01 03:13:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-06-30 16:13:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[table]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>420</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/07/table.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/07/table.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:316;s:6:"height";i:220;s:4:"file";s:17:"2015/07/table.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:17:"table-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:17:"table-300x209.png";s:5:"width";i:300;s:6:"height";i:209;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Pivoting_Simple</title>
		<link>http://www.nikgrozev.org/2015/07/01/reshaping-in-pandas-pivot-pivot-table-stack-and-unstack-explained-with-pictures/pivoting_simple-2/</link>
		<pubDate>Tue, 30 Jun 2015 16:42:24 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/07/pivoting_simple1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Pivoting in action]]></excerpt:encoded>
		<wp:post_id>436</wp:post_id>
		<wp:post_date><![CDATA[2015-07-01 03:42:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-06-30 16:42:24]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pivoting_simple-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>420</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/07/pivoting_simple1.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/07/pivoting_simple1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:755;s:6:"height";i:316;s:4:"file";s:28:"2015/07/pivoting_simple1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:28:"pivoting_simple1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:28:"pivoting_simple1-300x126.png";s:5:"width";i:300;s:6:"height";i:126;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Pivoting_Table_Simple</title>
		<link>http://www.nikgrozev.org/2015/07/01/reshaping-in-pandas-pivot-pivot-table-stack-and-unstack-explained-with-pictures/pivoting_table_simple-2/</link>
		<pubDate>Wed, 01 Jul 2015 03:41:43 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/07/pivoting_table_simple1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Pivoting by a single column]]></excerpt:encoded>
		<wp:post_id>441</wp:post_id>
		<wp:post_date><![CDATA[2015-07-01 14:41:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-07-01 03:41:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pivoting_table_simple-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>420</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/07/pivoting_table_simple1.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/07/pivoting_table_simple1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:749;s:6:"height";i:255;s:4:"file";s:34:"2015/07/pivoting_table_simple1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:34:"pivoting_table_simple1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:34:"pivoting_table_simple1-300x102.png";s:5:"width";i:300;s:6:"height";i:102;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Stack-Simple</title>
		<link>http://www.nikgrozev.org/2015/07/01/reshaping-in-pandas-pivot-pivot-table-stack-and-unstack-explained-with-pictures/stack-simple-2/</link>
		<pubDate>Wed, 01 Jul 2015 04:27:05 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/07/stack-simple1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>442</wp:post_id>
		<wp:post_date><![CDATA[2015-07-01 15:27:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-07-01 04:27:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[stack-simple-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>420</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/07/stack-simple1.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/07/stack-simple1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:665;s:6:"height";i:404;s:4:"file";s:25:"2015/07/stack-simple1.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:25:"stack-simple1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:25:"stack-simple1-300x182.png";s:5:"width";i:300;s:6:"height";i:182;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Stack-Unstack</title>
		<link>http://www.nikgrozev.org/2015/07/01/reshaping-in-pandas-pivot-pivot-table-stack-and-unstack-explained-with-pictures/stack-unstack-2/</link>
		<pubDate>Wed, 01 Jul 2015 04:27:45 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/07/stack-unstack1.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Stack and Unstack]]></excerpt:encoded>
		<wp:post_id>443</wp:post_id>
		<wp:post_date><![CDATA[2015-07-01 15:27:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-07-01 04:27:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[stack-unstack-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>420</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/07/stack-unstack1.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/07/stack-unstack1.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:827;s:6:"height";i:535;s:4:"file";s:26:"2015/07/stack-unstack1.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:26:"stack-unstack1-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:26:"stack-unstack1-300x194.png";s:5:"width";i:300;s:6:"height";i:194;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:26:"stack-unstack1-768x497.png";s:5:"width";i:768;s:6:"height";i:497;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Stack-Simple</title>
		<link>http://www.nikgrozev.org/2015/07/01/reshaping-in-pandas-pivot-pivot-table-stack-and-unstack-explained-with-pictures/stack-simple-3/</link>
		<pubDate>Wed, 01 Jul 2015 08:07:09 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/07/stack-simple2.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Stack and Unstack]]></excerpt:encoded>
		<wp:post_id>447</wp:post_id>
		<wp:post_date><![CDATA[2015-07-01 19:07:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-07-01 08:07:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[stack-simple-3]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>420</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/07/stack-simple2.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/07/stack-simple2.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:672;s:6:"height";i:402;s:4:"file";s:25:"2015/07/stack-simple2.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:25:"stack-simple2-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:25:"stack-simple2-300x179.png";s:5:"width";i:300;s:6:"height";i:179;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Threads</title>
		<link>http://www.nikgrozev.org/2015/07/14/overview-of-modern-concurrency-and-parallelism-concepts/threads/</link>
		<pubDate>Tue, 14 Jul 2015 06:52:11 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/07/threads.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Each thread in a process has its own stack.]]></excerpt:encoded>
		<wp:post_id>454</wp:post_id>
		<wp:post_date><![CDATA[2015-07-14 17:52:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-07-14 06:52:11]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[threads]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>453</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/07/threads.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/07/threads.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:326;s:6:"height";i:326;s:4:"file";s:19:"2015/07/threads.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:19:"threads-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:19:"threads-300x300.png";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Goroutine</title>
		<link>http://www.nikgrozev.org/2015/07/14/overview-of-modern-concurrency-and-parallelism-concepts/goroutine/</link>
		<pubDate>Tue, 14 Jul 2015 06:52:12 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/07/goroutine.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Goroutines]]></excerpt:encoded>
		<wp:post_id>455</wp:post_id>
		<wp:post_date><![CDATA[2015-07-14 17:52:12]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-07-14 06:52:12]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[goroutine]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>453</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/07/goroutine.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/07/goroutine.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:186;s:6:"height";i:344;s:4:"file";s:21:"2015/07/goroutine.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:21:"goroutine-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:21:"goroutine-162x300.png";s:5:"width";i:162;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Fiber</title>
		<link>http://www.nikgrozev.org/2015/07/14/overview-of-modern-concurrency-and-parallelism-concepts/fiber/</link>
		<pubDate>Tue, 14 Jul 2015 06:52:13 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/07/fiber.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Multiple Fibers in a thread.]]></excerpt:encoded>
		<wp:post_id>456</wp:post_id>
		<wp:post_date><![CDATA[2015-07-14 17:52:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-07-14 06:52:13]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[fiber]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>453</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/07/fiber.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/07/fiber.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:620;s:6:"height";i:494;s:4:"file";s:17:"2015/07/fiber.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:17:"fiber-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:17:"fiber-300x239.png";s:5:"width";i:300;s:6:"height";i:239;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Disruptor</title>
		<link>http://www.nikgrozev.org/2015/07/14/overview-of-modern-concurrency-and-parallelism-concepts/disruptor/</link>
		<pubDate>Tue, 14 Jul 2015 06:52:14 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/07/disruptor.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[LMAX Disruptor]]></excerpt:encoded>
		<wp:post_id>457</wp:post_id>
		<wp:post_date><![CDATA[2015-07-14 17:52:14]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-07-14 06:52:14]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[disruptor]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>453</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/07/disruptor.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/07/disruptor.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:459;s:6:"height";i:448;s:4:"file";s:21:"2015/07/disruptor.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:21:"disruptor-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:21:"disruptor-300x293.png";s:5:"width";i:300;s:6:"height";i:293;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Concurrent_vs_Parallel</title>
		<link>http://www.nikgrozev.org/2015/07/14/overview-of-modern-concurrency-and-parallelism-concepts/concurrent_vs_parallel/</link>
		<pubDate>Tue, 14 Jul 2015 06:52:15 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/07/concurrent_vs_parallel.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Concurrent vs. Parallel]]></excerpt:encoded>
		<wp:post_id>458</wp:post_id>
		<wp:post_date><![CDATA[2015-07-14 17:52:15]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-07-14 06:52:15]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[concurrent_vs_parallel]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>453</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/07/concurrent_vs_parallel.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/07/concurrent_vs_parallel.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:874;s:6:"height";i:250;s:4:"file";s:34:"2015/07/concurrent_vs_parallel.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:34:"concurrent_vs_parallel-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:33:"concurrent_vs_parallel-300x86.png";s:5:"width";i:300;s:6:"height";i:86;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:34:"concurrent_vs_parallel-768x220.png";s:5:"width";i:768;s:6:"height";i:220;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Actors</title>
		<link>http://www.nikgrozev.org/2015/07/14/overview-of-modern-concurrency-and-parallelism-concepts/actors/</link>
		<pubDate>Tue, 14 Jul 2015 06:52:16 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/07/actors.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Actors]]></excerpt:encoded>
		<wp:post_id>459</wp:post_id>
		<wp:post_date><![CDATA[2015-07-14 17:52:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-07-14 06:52:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[actors]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>453</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/07/actors.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/07/actors.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:189;s:6:"height";i:401;s:4:"file";s:18:"2015/07/actors.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:18:"actors-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:18:"actors-141x300.png";s:5:"width";i:141;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>StreamOverview</title>
		<link>http://www.nikgrozev.org/2015/07/30/summary-of-the-oracle-jdk8-mooc/streamoverview/</link>
		<pubDate>Thu, 30 Jul 2015 08:46:35 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/07/streamoverview.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Working with streams]]></excerpt:encoded>
		<wp:post_id>478</wp:post_id>
		<wp:post_date><![CDATA[2015-07-30 19:46:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-07-30 08:46:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[streamoverview]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>477</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/07/streamoverview.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/07/streamoverview.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:946;s:6:"height";i:85;s:4:"file";s:26:"2015/07/streamoverview.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:25:"streamoverview-150x85.png";s:5:"width";i:150;s:6:"height";i:85;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:25:"streamoverview-300x27.png";s:5:"width";i:300;s:6:"height";i:27;s:9:"mime-type";s:9:"image/png";}s:12:"medium_large";a:4:{s:4:"file";s:25:"streamoverview-768x69.png";s:5:"width";i:768;s:6:"height";i:69;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>barplot_horizontal</title>
		<link>http://www.nikgrozev.org/2015/12/27/pandas-in-jupyter-quickstart-and-useful-snippets/barplot_horizontal/</link>
		<pubDate>Sun, 27 Dec 2015 01:06:55 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/12/barplot_horizontal.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Various bar charts.]]></excerpt:encoded>
		<wp:post_id>534</wp:post_id>
		<wp:post_date><![CDATA[2015-12-27 12:06:55]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-27 01:06:55]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[barplot_horizontal]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>489</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/12/barplot_horizontal.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/12/barplot_horizontal.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:362;s:6:"height";i:251;s:4:"file";s:30:"2015/12/barplot_horizontal.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"barplot_horizontal-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:30:"barplot_horizontal-300x208.png";s:5:"width";i:300;s:6:"height";i:208;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>barplot</title>
		<link>http://www.nikgrozev.org/2015/12/27/pandas-in-jupyter-quickstart-and-useful-snippets/barplot/</link>
		<pubDate>Sun, 27 Dec 2015 01:06:57 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/12/barplot.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>535</wp:post_id>
		<wp:post_date><![CDATA[2015-12-27 12:06:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-27 01:06:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[barplot]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>489</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/12/barplot.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/12/barplot.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:359;s:6:"height";i:252;s:4:"file";s:19:"2015/12/barplot.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:19:"barplot-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:19:"barplot-300x211.png";s:5:"width";i:300;s:6:"height";i:211;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>stacked_bar</title>
		<link>http://www.nikgrozev.org/2015/12/27/pandas-in-jupyter-quickstart-and-useful-snippets/stacked_bar/</link>
		<pubDate>Sun, 27 Dec 2015 01:06:59 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/12/stacked_bar.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>536</wp:post_id>
		<wp:post_date><![CDATA[2015-12-27 12:06:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-27 01:06:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[stacked_bar]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>489</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/12/stacked_bar.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/12/stacked_bar.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:365;s:6:"height";i:252;s:4:"file";s:23:"2015/12/stacked_bar.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"stacked_bar-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:23:"stacked_bar-300x207.png";s:5:"width";i:300;s:6:"height";i:207;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>boxplots</title>
		<link>http://www.nikgrozev.org/2015/12/27/pandas-in-jupyter-quickstart-and-useful-snippets/boxplots/</link>
		<pubDate>Sun, 27 Dec 2015 01:08:31 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/12/boxplots.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>537</wp:post_id>
		<wp:post_date><![CDATA[2015-12-27 12:08:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-27 01:08:31]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[boxplots]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>489</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/12/boxplots.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/12/boxplots.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:359;s:6:"height";i:256;s:4:"file";s:20:"2015/12/boxplots.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"boxplots-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:20:"boxplots-300x214.png";s:5:"width";i:300;s:6:"height";i:214;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>lines</title>
		<link>http://www.nikgrozev.org/2015/12/27/pandas-in-jupyter-quickstart-and-useful-snippets/lines/</link>
		<pubDate>Sun, 27 Dec 2015 01:09:42 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2015/12/lines.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>538</wp:post_id>
		<wp:post_date><![CDATA[2015-12-27 12:09:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-27 01:09:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[lines]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>489</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2015/12/lines.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2015/12/lines.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:367;s:6:"height";i:256;s:4:"file";s:17:"2015/12/lines.png";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:17:"lines-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:17:"lines-300x209.png";s:5:"width";i:300;s:6:"height";i:209;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Category</title>
		<link>http://www.nikgrozev.org/2016/03/14/functional-programming-and-category-theory-part-1-categories-and-functors/category/</link>
		<pubDate>Sun, 13 Mar 2016 12:20:05 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2016/03/category.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[A category of 4 objects. For every object there must be an identity arrow (i.e. loop). The order of composition should not matter.]]></excerpt:encoded>
		<wp:post_id>605</wp:post_id>
		<wp:post_date><![CDATA[2016-03-13 23:20:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-13 12:20:05]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[category]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>570</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2016/03/category.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2016/03/category.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:640;s:6:"height";i:822;s:4:"file";s:20:"2016/03/category.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:20:"category-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:20:"category-234x300.jpg";s:5:"width";i:234;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Category_Roads</title>
		<link>http://www.nikgrozev.org/2016/03/14/functional-programming-and-category-theory-part-1-categories-and-functors/category_roads/</link>
		<pubDate>Sun, 13 Mar 2016 13:39:06 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2016/03/category_roads.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>611</wp:post_id>
		<wp:post_date><![CDATA[2016-03-14 00:39:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-13 13:39:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[category_roads]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>570</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2016/03/category_roads.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2016/03/category_roads.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:623;s:6:"height";i:447;s:4:"file";s:26:"2016/03/category_roads.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:26:"category_roads-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:26:"category_roads-300x215.jpg";s:5:"width";i:300;s:6:"height";i:215;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Category_OOP</title>
		<link>http://www.nikgrozev.org/2016/03/14/functional-programming-and-category-theory-part-1-categories-and-functors/category_oop/</link>
		<pubDate>Sun, 13 Mar 2016 13:45:38 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2016/03/category_oop.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Category of Programming types.]]></excerpt:encoded>
		<wp:post_id>615</wp:post_id>
		<wp:post_date><![CDATA[2016-03-14 00:45:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-13 13:45:38]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[category_oop]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>570</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2016/03/category_oop.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2016/03/category_oop.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:640;s:6:"height";i:316;s:4:"file";s:24:"2016/03/category_oop.jpg";s:5:"sizes";a:2:{s:9:"thumbnail";a:4:{s:4:"file";s:24:"category_oop-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:24:"category_oop-300x148.jpg";s:5:"width";i:300;s:6:"height";i:148;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Octave GUI in Ubuntu 13.x - First Impressions</title>
		<link>http://www.nikgrozev.org/2013/11/29/octave-gui-in-ubuntu-13-x-first-impressions/</link>
		<pubDate>Fri, 29 Nov 2013 03:26:34 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://nikolaygrozev.wordpress.com/?p=25</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.gnu.org/software/octave/">GNU Octave</a> is a powerful open source alternative to Matlab. A major obstacle to its adoption is the lack of simple and convenient graphical environment (like <a href="http://www.rstudio.com/">RStudio</a> for R). The most famous Octave GUI front-end <a href="https://sites.google.com/site/davidecittaro/apple-stuff/qtoctavenomoresupported">QtOctave is no longer developed</a> and the new environments like <a href="https://sites.google.com/site/domainmathide/">Domain Math IDE</a> and <a href="http://sourceforge.net/projects/octclipse/">Octclipse</a> still haven't gained maturity. Developing Octave code in an external editor is not too hard, as many editors (e.g. <a href="http://www.geany.org/">Geany</a>) support Matlab/Octave syntax highlighting and even code completion. For me, the real problem is the lack of an integrated debugger, which makes diagnosing and fixing bugs pretty hard.

Fortunately, the latest version 3.7 of Octave introduces a new GUI front-end with an integrated debugger. Octave 3.7 has not been officially released, but you can download the code, build and test it locally. In Ubuntu 13.x the following script does the trick:

<pre><code class="bash">#!/bin/bash

sudo apt-get install mercurial
sudo apt-get install libtool
sudo apt-get install libqt4-*
sudo apt-get install libqscintilla-*
sudo apt-get install bison
sudo apt-get install llvm
sudo apt-get build-dep octave

hg clone http://www.octave.org/hg/octave
cd octave
hg update default

./bootstrap
./configure
make
</code></pre>

The installation may take a while. Depending on your environment you may also like to install the following packages: Autoconf; Automake; Flex; Gnulib; gperf; Gzip; Perl; Rsync. For most Ubuntu installations, these should be already present.

Then you can start Octave GUI from the newly created folder "octave":

<pre><code class="bash">./run-octave
</code></pre>

This should open the new Octave GUI. It seems like the major functionalities (syntax highlighting, code completion, debugger, help) are already there :). Here are some screen-shots:

[gallery ids="27,28,44,30,31,32"]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>25</wp:post_id>
		<wp:post_date><![CDATA[2013-11-29 14:26:34]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-11-29 03:26:34]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[octave-gui-in-ubuntu-13-x-first-impressions]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="gnu-octave"><![CDATA[GNU Octave]]></category>
		<category domain="category" nicename="miscellaneous"><![CDATA[Miscellaneous]]></category>
		<category domain="post_tag" nicename="octave"><![CDATA[Octave]]></category>
		<category domain="post_tag" nicename="octave-gui"><![CDATA[Octave GUI]]></category>
		<category domain="post_tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_pending]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_google_plus_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/116873873608085229608/posts/Gg8HuNz9VWE]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_external]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"116873873608085229608";b:1;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_user]]></wp:meta_key>
			<wp:meta_value><![CDATA[nikolaygrozev]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://t.co/VEaVmWf7jm]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_linkedin_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=30071619&stype=M&topic=5812028592883781632&type=U&a=r4ZI]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[geo_public]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[30]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>3</wp:comment_id>
			<wp:comment_author><![CDATA[bagustris]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[bagustris@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.bagusta.tk</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[126.215.1.248]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2013-11-30 20:39:29]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2013-11-30 09:39:29]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Reblogged this on <a href="http://bagustris.wordpress.com/2013/11/30/octave-gui-in-ubuntu-13-x-first-impressions/" rel="nofollow">bagustris@/home</a>.</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1385804369.6338899135589599609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:9:"bagustris";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1385810091]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[reblog_ping]]></wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1385810091]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1385810091.179771900177001953125;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2013-11-30 09:39:29]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>4</wp:comment_id>
			<wp:comment_author><![CDATA[Asad]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[asad06@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[111.68.97.146]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-05-20 22:30:47]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-05-20 11:30:47]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Interesting!</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1432121537]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1432121537]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1432121537.349010944366455078125;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1432121448.1601889133453369140625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-05-20 11:30:47]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Monads in 15 minutes</title>
		<link>http://www.nikgrozev.org/2013/12/10/monads-in-15-minutes/</link>
		<pubDate>Tue, 10 Dec 2013 00:28:29 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://nikolaygrozev.wordpress.com/?p=51</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Introduction</h1>

At the <a href="http://yowconference.com.au/">YOW! 2013</a> conference one of the designers of Haskell <a href="http://homepages.inf.ed.ac.uk/wadler/">prof. Philip Wadler</a> illustrated how Monads enable a purely functional programming language to perform inherently imperative operations like I/O and exception handling. Not surprisingly, there has been a lot of interest in the topic resulting in almost exponential growth of Monads tutorials and resources on the web. It is unfortunate that most tutorials exemplify Monads with functional languages, given that most "Monad newbies" are not experienced functional programmers. However, Monads are not specific to Haskell and other pure functional languages and can be used and exemplified in imperative languages as well, which is the goal of this tutorial.

<strong>So how is this tutorial different from the rest out there?</strong> This tutorial explains the intuition behind Monads and demonstrates them with a few simple and short python examples. Its goal is to explain Monads simply in less than 15 minutes and thus it refrains from making insightful philosophical and theoretical reflections about <a href="http://blog.plover.com/prog/burritos.html">burritos</a>, <a href="http://web.archive.org/web/20081206204420/http://www.loria.fr/~kow/monads/index.html">space suits</a>, <a href="http://www.infoq.com/presentations/Why-is-a-Monad-Like-a-Writing-Desk">writing desks</a> and endofunctors.

<h1>Motivating Examples</h1>

We will look at 3 example problems for function composition. We will solve each of them in two ways - the standard imperative way and the monad way. Then we'll compare the approaches.

<h2>1. Logging</h2>

Let's assume we have the unary (single argument) functions f1, f2 and f3, each of which returns an increment of its integer parameter. Additionally, each of them generates a readable log message, representing its arithmetic operation:

<pre><code class="python">def f1(x):
    return (x + 1, str(x) + "+1")

def f2(x):
    return (x + 2, str(x) + "+2")

def f3(x):
    return (x + 3, str(x) + "+3")
</code></pre>

Now we would like to chain the functions f1, f2 and f3 given a parameter x - i.e. we want to compute x+1+2+3&#46; Additionally we want to have a readable description of all applied functions.

One way to achieve this is:

<pre><code class="python">log = "Ops:"

res, log1 = f1(x)
log += log1 + ";"

res, log2 = f2(res)
log += log2 + ";"

res, log3 = f3(res)
log += log3 + ";"

print(res, log)
</code></pre>

This solution is far from perfect, as we have repeated "glue code", which accumulates the overall result and prepares the input of the functions. If we add a new function f4 to the sequence, we'll have to repeat the glue code again. Moreover, manipulating the state of the variables <u>res</u> and <u>log</u> makes the code less readable, and is not essential to the program logic.

Ideally, we would like to have something as simple as the chain invocation <u>f3(f2(f1(x)))</u>. Unfortunately, the return types of f1 and f2 are incompatible with the input parameter types of f2 and f3&#46; To solve the problem we introduce two new functions:

<pre><code class="python">def unit(x):
    return (x, "Ops:")

def bind(t, f):
    res = f(t[0])
    return (res[0], t[1] + res[1] + ";")
</code></pre>

Hence, we can solve the problem with a single chained function invocation:

<pre><code class="python">print( bind(bind(bind(unit(x), f1), f2), f3) )
</code></pre>

The following diagram depicts the computational process when <u>x=0</u>. By v1, v2 and v3 we denote the interim values resulting from calling unit and bind:

[caption id="attachment_73" align="aligncenter" width="912"]<img src="http://www.nikgrozev.org/wp-content/uploads/2013/12/example11.png" alt="Example 1 – Computational process of the monadic solution" width="912" height="49" class="size-full wp-image-73" /> Example 1 – Computational process of the monadic solution[/caption]

The <u>unit</u> function converts the input parameter <u>x</u> into a tuple/pair of an integer and a string. The subsequent invocations of <u>bind</u> call their parameter function <u>f</u> and accumulate its result with the interim value represented by the <u>t</u> formal parameter.

This avoids the shortcomings of our previous approach because the <u>bind</u> function implements all the glue code and we don't have to repeat it. We can add a new function f4 by just including it in the sequence as <u>bind(f4, bind(f3, ... ))</u> and we won't have to do other changes.

<h2>2. List of Interim Values</h2>

In this example we assume that we have three simple unary functions:

<pre><code class="python">def f1(x): return x + 1

def f2(x): return x + 2

def f3(x): return x + 3
</code></pre>

As in the previous example we would like to compose them in order to compute x+1+2+3&#46; Additionally we would like to generate a list of all interim and final values - i.e. x, x+1, x+1+2 and x+1+2+3.

Unlike the previous example, in this one the functions are composable as their parameter and result types match. Therefore the simple invocation <u>f3(f2(f1(x)))</u> will give us the desired value of x+1+2+3&#46; However, this won't generate the interim values.

A straightforward approach is:

<pre><code class="python">st = [x]

res = f1(x)
lst.append(res)

res = f2(res)
lst.append(res)

res = f3(res)
lst.append(res);

print(res, lst)
</code></pre>

Again, this is not a very good solution, as we have glue code that takes care of aggregating the interim values in a list. If we add a new function f4 to the sequence, we'll have to repeat the glue code for updating the list.

To overcome these issues, just like in our previous example we introduce two auxiliary functions:

<pre><code class="python">def unit(x):
    return (x, [x])

def bind(t, f):
    res = f(t[0])
    return (res, t[1] + [res])
</code></pre>

Now we can write the entire program as a single sequence of invocations:

<pre><code class="python">print( bind(bind(bind(unit(x), f1), f2), f3) )
</code></pre>

The following diagram depicts the computational process when <u>x=0</u>. Again v1, v2 and v3 are the interim values resulting from calling <u>unit</u> and <u>bind</u>:

[caption id="attachment_72" align="aligncenter" width="919"]<img src="http://www.nikgrozev.org/wp-content/uploads/2013/12/example21.png" alt="Example 2 – Computational process of the monadic solution" width="919" class="size-full wp-image-72" /> Example 2 – Computational process of the monadic solution[/caption]

<h2>3. Nulls/Nones</h2>

Lets try something a bit more interesting with classes and objects. Lets assume we have a class Employee with two methods:

<pre><code class="python">class Employee:
    def get_boss(self):
        # Return the employee's boss

    def get_wage(self):
        # Compute the wage
</code></pre>

Each employee instance has a boss of type <u>Employee</u> and a wage, which can be accessed through the two methods. Both of these methods can return None (i.e. the wage is unknown, or the employee does not have a boss). In this example we want to develop a program, which given an <u>Employee</u> instance <u>john</u> returns his boss's wage. If the wage can no be determined or if <u>john</u> is <u>None</u>, we should return <u>None</u>.

Ideally we would want to write something as simple as:

<pre><code class="python">print(john.get_boss().get_wage())
</code></pre>

However, as the methods can return <u>None</u>, this can result in an error. A simple workaround is:

<pre><code class="python">result = None
if john is not None and john.get_boss() is not None and john.get_boss().get_wage() is not None:
    result = john.get_boss().get_wage()

print(result)
</code></pre>

However, in this solution we are unnecessarily calling multiple times the <u>get_boss</u> and <u>get_wage</u> methods. If they are computationally expensive (e.g. if they access a database) this may be undesirable. Hence our solution should look like:

<pre><code class="python">result = None
if john is not None:
    boss = john.get_boss()
    if boss is not None:
        wage = boss.get_wage()
        if wage is not None:
            result = wage

print(result)
</code></pre>

This obviously is not pretty, since we had to write 3 bloated if statements to get to our result. To solve the problem, we resort to the same trick we used previously. We define the following two functions:

<pre><code class="python">def unit(e):
    return e

def bind(e, f):
    return None if e is None else f(e)
</code></pre>

Now we can write the program in one line:

<pre><code class="python">print( bind(bind(unit(john), Employee.get_boss), Employee.get_wage) )
</code></pre>

You probably noticed that we didn't actually need to call <u>unit(john)</u>, as it simply returns its input parameter. We did it to keep to the previous framework/pattern, so we can define a generalised solution later on. Also, note that in python methods can be used as simple functions. That is, instead of <u>john.get_boss()</u> we can write <u>Employee.get_boss(john)</u>, which allows us to write the code above.

The following diagram illustrates the computational process if <u>john</u> does not have a boss (i.e. <u>john.get_boss()</u> returns <u>None</u>):

[caption id="attachment_71" align="aligncenter" width="1078"]<img src="http://www.nikgrozev.org/wp-content/uploads/2013/12/example31.png" alt="Example 3 – Computational process of the monadic solution" width="1078" class="size-full wp-image-71" /> Example 3 – Computational process of the monadic solution[/caption]

<h1>Generalisation - Monads</h1>

Lets assume we want to compose the functions f1, f2, ... fn. If all input parameters match all return types, we can simply use <u>fn(... f2(f1(x)) ...)</u>. The following diagram depicts the underlying computational process. v1, v2 ... vn represent the interim results of the function invocation.

[caption id="attachment_74" align="aligncenter" width="918"]<img src="http://www.nikgrozev.org/wp-content/uploads/2013/12/dierct_composition1.png" alt="Direct Composition – Computational model" width="918" class="size-full wp-image-74" /> Direct Composition – Computational model[/caption]

However, often this approach is not applicable. For instance in the Logging example the types of the input parameters and the returned values are different. In the 2nd and 3rd examples the functions were composable, but we wanted to "inject" additional logic between the function invocations - in example 2 we wanted to aggregate the interim values and in example 3 we wanted to insert None/Null checks.

<h2>1&#46; Imperative Solution</h2>

In the above examples we first defined a straightforward imperative approach, which is depicted below:

[caption id="attachment_98" align="aligncenter" width="1016"]<img src="http://www.nikgrozev.org/wp-content/uploads/2013/12/imperativecomposition2.png" alt="Imperative Composition - Computational model" width="1016" class="size-full wp-image-98" /> Imperative Composition - Computational model[/caption]

Before calling f1, we execute some initialisation code. For instance, in Example 1 and 2 we initialised variables to store the aggregated log and interim values. After that, we call the functions f1, f2... fn and between the invocations we put some glue code. In Example 1 and 2 the glue code aggregates the log and the interim values. In Example 3, the glue code checks if the interim values are Null/None.

<h2>2&#46; Enter Monads</h2>

As we saw in the examples, this straightforward approach has some unpleasant effects - repeated glue code, multiple Null/None checks etc. In order to achieve more elegant solutions, in the examples above we used a design pattern with two functions (<u>unit</u> and <u>bind</u>). This pattern is called <strong><u>Monad</u></strong>. In essence the <u>bind</u> function implements the glue code and <u>unit</u> implements the initialisation code. This allows us to solve the problem in one line:

<pre><code class="python">bind(bind( ... bind(bind(unit(x), f1), f2) ... fn-1), fn)
</code></pre>

The following diagram displays the computational process:

[caption id="attachment_70" align="aligncenter" width="851"]<img src="http://www.nikgrozev.org/wp-content/uploads/2013/12/monad1.png" alt="Monad - Computational Model" width="851" class="size-full wp-image-70" /> Monad - Computational Model[/caption]

The <u>unit(x)</u> invocation generates an initial value v1&#46; Then <u>bind(v1, f1)</u> generates a new interim value v2, which is then used in the subsequent call to bind - <u>bind(v2, f2)</u>. This continues until the final result is generated. Using this pattern, by using different <u>unit</u> and <u>bind</u> functions we can achieve various types of function compositions. Standard Monad libraries provide predefined sets of ready to use monads (<u>unit</u> and <u>bind</u> functions), which can be used "out of the box" to implement different kinds of composition.

In order to compose the <u>bind</u> and <u>unit</u> functions, the return types of <u>unit</u> and <u>bind</u>, and the type of <u>bind</u>'s first parameter must be compatible. This is called the Monadic Type. In terms of the previous computational diagram, the types of all interim values v1, v2 ... vn must be Monadic.

Lastly, repeating the calls to <u>bind</u> again and again can be tedious and should be avoided. For the purpose we define an auxiliary function:

<pre><code class="python">def pipeline(e, *functions):
    for f in functions:
        e = bind(e, f)
    return e
</code></pre>

Then instead of:

<pre><code class="python">bind(bind(bind(bind(unit(x), f1), f2), f3), f4)
</code></pre>

We can use the shorthand:

<pre><code class="python">pipeline(unit(x), f1, f2, f3, f4)
</code></pre>

<h1>Conclusion</h1>

Monads are a simple and powerful design pattern for function composition. In a declarative language they can be used to implement features of imperative languages like logging and I/O. In an imperative language, they can reduce and isolate the bloated glue code between function invocations. This article only scratches the surface and builds an intuitive understanding of Monads. To learn more you can explore:

<ul>
<li><a href="http://en.wikipedia.org/wiki/Monad_%28functional_programming%29">Wikipedia</a></li>
<li><a href="http://www.valuedlessons.com/2008/01/monads-in-python-with-nice-syntax.html">Monads in Python</a></li>
<li><a href="http://www.haskell.org/haskellwiki/Monad_tutorials_timeline">List of Monad tutorials</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>51</wp:post_id>
		<wp:post_date><![CDATA[2013-12-10 11:28:29]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-12-10 00:28:29]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[monads-in-15-minutes]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="functional-programming"><![CDATA[Functional programming]]></category>
		<category domain="category" nicename="miscellaneous"><![CDATA[Miscellaneous]]></category>
		<category domain="post_tag" nicename="monad"><![CDATA[Monad]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_pending]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_google_plus_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/116873873608085229608/posts/Am1XhHDCUKu]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_external]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"116873873608085229608";b:1;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_user]]></wp:meta_key>
			<wp:meta_value><![CDATA[nikolaygrozev]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://t.co/cgZe743SXF]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_linkedin_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=30071619&stype=M&topic=5815970047944192000&type=U&a=AxFv]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[geo_public]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[70]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>5</wp:comment_id>
			<wp:comment_author><![CDATA[hakucho]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[andrew.i.swan@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[59.167.133.100]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-06-17 12:12:33]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-06-17 01:12:33]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>&gt; In order to compose the bind and unit functions, the return types of unit and bind, and the type of bind‘s second parameter must be compatible. This is called the Monadic Type.</p>

<p>Did you mean "the type of bind‘s <em>first</em> parameter"?</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1402967554]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-06-17 01:12:58]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[24702750451]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1402978107]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1402978107]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1402978108.3241689205169677734375;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1402967554.0727279186248779296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:7:"hakucho";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>6</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[128.250.192.43]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-06-17 15:12:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-06-17 04:12:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Yes, indeed... now it's fixed. Thanks hakucho :)</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>5</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1402978357]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1402978358.227758884429931640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[24702814886]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1402978359]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-06-17 04:13:00]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>7</wp:comment_id>
			<wp:comment_author><![CDATA[Fixed Monad in plain English? (For the OOP programmer with no FP background) #dev #it #asnwer | Good Answer]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://goodanswer.biz/2014/12/20/fixed-monad-in-plain-english-for-the-oop-programmer-with-no-fp-background-dev-it-asnwer/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[54.80.149.148]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-12-20 16:35:18]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-12-20 05:35:18]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>[&#8230;] I&#8217;ve written a short article comparing standard OOP python code to monadic python code demonstrating the underlying computational process with diagrams. It assumes no previous knowledge of FP. Hope you find it useful &#8211; http://nikolaygrozev.wordpress.com/2013/12/10/monads-in-15-minutes/ [&#8230;]</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1419058155.544454097747802734375;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1419053719.0500400066375732421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-12-20 05:35:18]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[wil]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[wilson.chuei@rea-group.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.17.253.249]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-12-24 11:42:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-12-24 00:42:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>nice.. an easy to understand write up on monads! is there a name for functions like f1, f2, f3 etc.?</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1450924466.4401500225067138671875;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1450922221.64665508270263671875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1450924465]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1450924465]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1450917775.8275640010833740234375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[18076174137]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-12-24 00:42:54]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.168.70.140]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-12-25 17:18:41]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-12-25 06:18:41]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi wil,
I'm not sure if there is any specific term for such functions</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>8</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1451024322]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1451024323.0131518840789794921875;s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[18104762198]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1451024323]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-12-25 06:18:41]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[Mörre Noseshine]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[hasenstein@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.reddit.com/r/cats</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[185.133.32.19]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-03-22 01:03:09]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-03-21 14:03:09]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>That's a useful explanation, finally. Thanks a lot!</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1458603560]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1458573399.449388027191162109375;s:5:"event";s:9:"check-ham";s:4:"user";s:10:"hasenstein";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1458603560.78096294403076171875;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1458568990.87201404571533203125;s:5:"event";s:9:"check-ham";s:4:"user";s:10:"hasenstein";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[20994253511]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1458603560]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2016-03-21 14:03:09]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>NuPIC Setup in Ubuntu</title>
		<link>http://www.nikgrozev.org/2014/02/25/nupic-setup-in-ubuntu/</link>
		<pubDate>Tue, 25 Feb 2014 12:34:01 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://nikolaygrozev.wordpress.com/?p=106</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Introduction</h1>

<a href="https://github.com/numenta">NuPIC</a> (Numenta Platform for Intelligent Computing) is biologically inspired library for machine learning in the loose sense of the term. It is an implementation of the <a href="http://en.wikipedia.org/wiki/Hierarchical_temporal_memory">HTM</a> (Hierarchical Temporal Memory) model which mimics the structure and organisation of the <a href="http://en.wikipedia.org/wiki/Neocortex">neocortex</a> following the ideas from <a href="http://en.wikipedia.org/wiki/Jeff_Hawkins">Jeff Hawkin</a>'s book "<a href="http://en.wikipedia.org/wiki/On_Intelligence">On Intelligence</a>".

NuPIC is not the only open source implementation of HTM, but it is the "cutting edge" in this area. Unfortunately it is quite difficult to setup and test. In this post I'll overview a setup procedure for Ubuntu (tested with version 14.04).

<h1>Setup Procedure</h1>

<blockquote>
  <u style="color:#003300;"><strong>UPDATE 2</strong></u>: The Nupic team has changed the set-up procedure again, so the script below is not longer valid with the latest code. Please follow the <a href="https://github.com/numenta/nupic#build-and-test-nupic">latest instructions</a> on GitHub instead. It is however still important to ensure you have sufficient RAM and CPU resources on your machine, as described below.
  
  <u style="color:#003300;"><strong>UPDATE 1</strong></u>: I've updated the installation instructions below, as the NuPIC team has made significant changes during the last 2-3 months. The following instructions are tested on 64 bit Ubuntu 14.04 with the NuPIC trunk code from <u>11-Jun-2014</u>.
</blockquote>

Before starting you should have <em><u>python 2.7</u></em> installed which comes by default in most Ubuntu installations. It is important to ensure that you have <strong><u>sufficient resource on your PC</u>!</strong> If you don't you may be getting strange and completely unrelated errors during the build process - e.g. compile or configuration errors. This may cause you to waste hours or even days in futile debugging. For example, running the installation procedure completed successfully on a VirtuaBox Virtual Machine with 4 dedicated CPU cores and 2GB RAM. Running the same procedure on a clone of the same VM with 1GB and 1 CPU core resulted in runtime errors of the unit tests about missing dependencies. Unfortunately, I couldn't find any documentation or guidelines about how much CPU and RAM capacity is typically needed.

Once you've setup python 2.7 you're ready to go with the installation script given below. You can also run the commands one by one to check for error messages.

The script firstly installs all needed packages. Then it clones the <a href="https://github.com/numenta/nupic">NuPIC</a>'s code and installs all required python dependencies. <u><strong>NOTE</strong></u>: The script installs the python dependencies as global python-pip packages. If you are using python-pip for purposes other than running NuPIC you may prefer to install them in <a href="http://www.virtualenv.org/en/latest/">virtualenv</a> instead. Eventually, the script builds NuPIC's code and runs all tests. The command "make -j3" (line 25) builds using 3 CPU cores. Depending on your system you may like to increase or decrease this - e.g. "make -j4" if you can use 4 cores. After the installation and tests are over you should be able to verify that all tests have completed successfully.

<pre><code class="bash">#!/bin/bash

# Install GIT, python etc.
sudo apt-get -y install git python2.7 gcc automake libtool python-pip python-dev libssl-dev cmake

# Clone the NUPIC code
git clone https://github.com/numenta/nupic.git

sudo pip install --allow-all-external --allow-unverified PIL --allow-unverified psutil -r external/common/requirements.txt

# Env. variable needed by all build scripts
pyVersion=`python -c 'import sys; print(".".join(map(str, sys.version_info[:2])))'`
export NUPIC=`pwd`/nupic
export NTA=$NUPIC/build/release
export NTA_ROOTDIR=$NTA
export PYTHONPATH=$PYTHONPATH:$NTA/lib/python$pyVersion/site-packages

# Configure and generate build files
mkdir -p $NUPIC/build/scripts
cd $NUPIC/build/scripts
cmake $NUPIC

# Build...
cd $NUPIC/build/scripts
make -j3

# Go to scripts folder to run tests
cd $NUPIC/build/scripts

# All C++ tests
make tests_everything

# C++ HTM Network API tests
make tests_cpphtm

# Python HTM Network API tests
make tests_pyhtm

# Python OPF unit and integration tests (requires mysql) - Skip
# make tests_run_all

# Run all tests!
make tests_all
</code></pre>

The above environment variables NUPIC, NTA, NTA_ROOTDIR and PYTHONPATH need to be set before running NuPIC. You may wish to save them in /etc/profile or /etc/bash.bashrc so that they are always loaded. You may have to reboot afterwards so that the changes can take effect.

<pre><code class="bash"><br /># Variable definitions at the end of /etc/default ...

pyVersion=`python -c 'import sys; print(&amp;amp;quot;.&amp;amp;quot;.join(map(str, sys.version_info[:2])))'`
export NUPIC=&amp;lt;path-to-nupic-directory&amp;gt;/nupic
export NTA=$NUPIC/build/release
export NTA_ROOTDIR=$NTA
export PYTHONPATH=$PYTHONPATH:$NTA/lib/python$pyVersion/site-packages
</code></pre>

Once you've completed the installation you can run some of the examples.

<pre><code class="bash"># Run the "Online" hotgym  example
python $NUPIC/examples/opf/clients/hotgym/simple/hotgym.py
</code></pre>

<h1>Resources</h1>

<ul>
<li><a href="https://github.com/numenta/nupic/blob/master/README.md#installation">https://github.com/numenta/nupic/blob/master/README.md#installation</a></li>
<li><a href="https://github.com/numenta/nupic/wiki/Installing-NuPIC-on-Ubuntu">https://github.com/numenta/nupic/wiki/Installing-NuPIC-on-Ubuntu</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>106</wp:post_id>
		<wp:post_date><![CDATA[2014-02-25 23:34:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-02-25 12:34:01]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[nupic-setup-in-ubuntu]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="category" nicename="miscellaneous"><![CDATA[Miscellaneous]]></category>
		<category domain="post_tag" nicename="nupic"><![CDATA[NuPIC]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_pending]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_google_plus_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/116873873608085229608/posts/jJciev2NrPC]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_external]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"116873873608085229608";b:1;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_user]]></wp:meta_key>
			<wp:meta_value><![CDATA[nikolaygrozev]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://t.co/0p9XacnQsi]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_linkedin_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[geo_public]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_63401799878b14354c0fe60cac38ddf7]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_6eaee282af52402cbc944515f988c43e]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_500f0ed340aa3775b9a038aef60ddfcf]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_da8f60601783efb8f54a976f6667c0dc]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[Josh]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sourcingp@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[72.193.63.86]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-08-27 06:08:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-08-26 19:08:11]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>The tip about the virtual machine memory was golden!  Was trying to install on Windows Host with Ubuntu 14.04 Guest on VirtualBox and installation was failing.  I was using the default recommended ram size of 512MB in VirtualBox.  Upping this to 2000MB allowed the installation to complete.  Besides this one change I was able to simply follow the instructions directly from nupic: https://github.com/numenta/nupic#build-and-test-nupic</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1409104943]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1409104943.9214580059051513671875;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-08-26 19:08:13]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1409104943]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1409080091.803390026092529296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Java 8 in a Nutshell</title>
		<link>http://www.nikgrozev.org/2014/03/21/java-8-in-a-nutshell/</link>
		<pubDate>Fri, 21 Mar 2014 11:13:36 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://nikolaygrozev.wordpress.com/?p=125</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Introduction and Installation</h1>

Oracle has <a href="https://blogs.oracle.com/thejavatutorials/entry/jdk_8_is_released">officially released JDK 8</a>, featuring long-awaited language features like lambdas and a new Date-Time API. This posts gives a brief overview of the new functional programming features in Java.

The latest JDK 8 can be downloaded and installed from <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">Oracle's website</a>, or if you are running Ubuntu you can <a href="http://www.webupd8.org/2014/03/how-to-install-oracle-java-8-in-debian.html">use an additional PPA repository</a> as follows:

<pre><code class="bash">sudo su -
echo "deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main" | tee /etc/apt/sources.list.d/webupd8team-java.list
echo "deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main" | tee -a /etc/apt/sources.list.d/webupd8team-java.list
apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886
exit

sudo apt-get update
sudo apt-get install oracle-java8-installer
sudo update-java-alternatives -s java-8-oracle
sudo apt-get install oracle-java8-set-default
</code></pre>

<h1>Enhanced interfaces</h1>

A major problem of Java interfaces is extensibility. If you change an interface, all implementing classes must change as well. If this interface is a part of a public library for example, thousands of implementations (some of which in external code bases) may have to change. As of Java 8, interfaces can have default methods. Unlike standard abstract methods, a default method has an implementation and underlying classes do not need to implement it. Hence default methods can be added later on, without having to modify or recompile existing classes.

Another change in Java 8 is that interfaces can have static methods just like classes. The following example illustrates these features:

<pre><code class="java">@FunctionalInterface // Will cause a complication error if a second abstract method is added
public interface Student {
    // Abstract method - all non-abstract subclasses need to implement it
    double getGPAGrade();

    // Static method
    static double getMaxGPAGrade() {
        return 7;
    }

    // Default method - no need to implement. Subclasses can still decide to override it.
    default double getPercentageGrade() {
        return (getGPAGrade() / getMaxGPAGrade()) * 100;
    }
}
</code></pre>

An interface with a single abstract method (i.e. which is not static or default) is called a <u><strong>functional interface</strong></u>, since it is essentially an abstract definition of a function. Standard examples are <a href="http://download.java.net/jdk8/docs/api/java/lang/Runnable.html">Runnable</a>, <a href="http://download.java.net/lambda/b78/docs/api/java/util/concurrent/Callable.html">Callable</a>, <a href="http://download.java.net/jdk8/docs/api/java/awt/event/ActionListener.html">ActionListener</a> and <a href="http://download.java.net/jdk8/docs/api/java/util/Comparator.html">Comparator</a>. The new package <a href="http://download.java.net/jdk8/docs/api/java/util/function/package-summary.html">java.util.function</a> introduces more standard functional interfaces like <a href="http://download.java.net/jdk8/docs/api/java/util/function/Predicate.html">Predicate</a>, <a href="http://download.java.net/jdk8/docs/api/java/util/function/Function.html">Function</a> and <a href="http://download.java.net/jdk8/docs/api/java/util/function/Consumer.html">Consumer</a>.

Java 8 introduces an informative annotation <a href="http://download.java.net/jdk8/docs/api/java/lang/FunctionalInterface.html">@FunctionalInterface</a> which can be used to annotate interfaces. If an annotated interface is not a functional interface a compilation error is raised.

<h1>Lambdas</h1>

Lambdas are not a new concept and should be straightforward to understand for anyone exposed to some sort of functional programming. If you have no experience with programming languages with functional features, you can think of lambda expressions as a syntax shorthand for anonymous subclasses of functional interfaces. The syntax for a lambda expression is:

<pre><code>(param1, param2, ... , paramN) -&gt; expression | block of code 
</code></pre>

If the parameter list has only one parameter the brackets can be omitted. Note that there are no types in the lambda definitions, as types are automatically inferred from the functional interface definition. Types can be defined explicitly, but this is not required. The body of the lambda expressions can be either a single expression (whose evaluation is the result of the function call) or a block of code, similar to a method definition.

The following examples demonstrate functionally equivalent definitions:

<pre><code class="java">Student s1 = () -&gt; 3;               // Expression body
Student s2 = () -&gt; {return 3;};     // Block of code body
Student s3 = new Student() {        // Java 7 style
    public double getGPAGrade() {
        return 3;
    }
};
</code></pre>

<pre><code class="java">Comparator &lt;Integer&gt; cmp1 = (x, y) -&gt; x.compareTo(y);   // Expression body. Types NOT specified
Comparator &lt;Integer&gt; cmp2 = (Integer x, Integer y) -&gt; { // Block of code body. Types specified
    return x.compareTo(y);
};
Comparator &lt;Integer&gt; cmp3 = new Comparator&lt;Integer&gt; () { // Java 7 style
    public int compare(Integer x, Integer y) {
        return x.compareTo(y);
    }
};
</code></pre>

<pre><code class="java">Runnable r1 = () -&gt; System.out.println("Test");         // Expression body
Runnable r2 = () -&gt; { System.out.println("Test"); };    // Block of code body
Runnable r3 = new Runnable() {                          // Java 7 style
    public void run() {
        System.out.println("Test");
    }
};
</code></pre>

<h1>Method References</h1>

Lambdas are a neat way to implement functional interfaces, but often all they do is call an existing method. To make things simpler Java 8 introduces method references. Method references are a shorthand for implementing functional interfaces by calling already defined methods.

There are four types of method references:

<table style="width:60em;">
    <thead>
        <tr>
            <th>Reference to</th>
            <th>Syntax</th>
            <th>Lambda Equivalent</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>Static method</td>
            <td>Class::staticMethod</td>
            <td>(param1, ... paramN) -> Class.staticMethod(param1, ... paramN)</td>
        </tr>
        <tr>
            <td>Specific instance's method</td>
            <td>var::instanceMethod</td>
            <td>(param1, ... paramN) -> var.instanceMethod(param1, ... paramN)</td>
        </tr>
        <tr>
            <td>Instance method</td>
            <td>Class::instanceMethod</td>
            <td>(var, param1, ... paramN) -> var.instanceMethod(param1, ... paramN)</td>
        </tr>
        <tr>
            <td>Constructor</td>
            <td>Class::new</td>
            <td>(param1, ... paramN) -> new Class(param1, ... paramN)</td>
        </tr>
    </tbody>
</table>

The following examples demonstrate equivalent definitions with method references and lambdas:

<pre><code class="java">Predicate &lt;String&gt; p1 = Boolean::getBoolean;         // Static method reference
Predicate &lt;String&gt; p2 = s -&gt; Boolean.getBoolean(s);  // Equivalent lambda
</code></pre>

<pre><code class="java">String var = "TestEquality";
Predicate &lt;String&gt; p1 = var::equals;         // Specific instance's method reference
Predicate &lt;String&gt; p2 = s -&gt; var.equals(s);  // Equivalent lambda
</code></pre>

<pre><code class="java">Predicate &lt;String&gt; p1 = String::isEmpty;     // Instance method reference
Predicate &lt;String&gt; p2 = s -&gt; s.isEmpty();    // Equivalent lambda
</code></pre>

<pre><code class="java">Predicate &lt;String&gt; p1 = Boolean::new;           // Constructor reference
Predicate &lt;String&gt; p2 = s -&gt; new Boolean(s);    // Equivalent lambda
</code></pre>

<h1>Streams</h1>

So far we've seen that Java 8 has removed some of the clutter around implementing functional interfaces. Functional interfaces are especially useful for manipulating collections, and thus Java 8 introduces the <a href="http://download.java.net/jdk8/docs/api/java/util/stream/package-summary.html">java.util.stream</a> package. The main interface in this package is <a href="http://download.java.net/jdk8/docs/api/java/util/stream/Stream.html">Stream</a>, which represents a sequence of elements supporting performing a sequence of actions - e.g. filtering, mapping, aggregation etc. Each of these standard stream methods takes as a parameter an instance of a functional interface.

Each standard collection in Java 8 can be converted to a stream through the <u>stream()</u> and <u>parallelStream()</u> methods. The difference between them, is that if possible <u>parallelStream()</u> returns a Stream instance, whose operations can be parallelised. Streams can also be converted to collections by the <u>collect()</u> method.

The main functionalities/methods of Stream are:

<ul>
<li><u>filter</u> - given a predicate creates a new stream, whose elements match the predicate;</li>
<li><u>map</u> - given a function f, creates a new stream, whose elements are the result of applying the function over this stream's element;</li>
<li><u>reduce</u> - aggregates the stream elements into a single value by consecutively applying a provided binary function. The result is wrapped in an <a href="http://download.java.net/jdk8/docs/api/java/util/Optional.html">Optional</a> instance;</li>
<li><u>forEach</u>/<u>forEachOrdered</u> - executes a <a href="http://download.java.net/jdk8/docs/api/java/util/function/Consumer.html">Consumer</a> instance's method for every element of the stream. The <a href="http://download.java.net/jdk8/docs/api/java/util/function/Consumer.html">Consumer</a> functional interface represents an arbitrary block of code.</li>
</ul>

The following example demonstrates how lambdas and method references allow standard collection processing operations to be written in a single line, rather than using series of loops as in Java 7.

<pre><code class="java">List &lt;Integer&gt; numbers = Arrays.asList(1, 7, 15, 51, 16, 8);

// Filter all even numbers, then convert the stream to a list
List &lt;Integer&gt; evens = numbers.stream().filter(x -&gt; x % 2 == 0).collect(Collectors.toList());

// Find the max even number
int maxEven = numbers.stream().filter(x -&gt; x % 2 == 0).max(Integer::compare).get();

// Compute the sum of the squares of all even numbers in the list
int sumSquaresEven =
   numbers.stream().filter(x -&gt; x % 2 == 0).map(x -&gt; x * x).reduce(Integer::sum).get();

// Print all elements on a new line
numbers.stream().forEachOrdered(x -&gt; System.out.println(x));
</code></pre>

<h1>References</h1>

<ul>
<li><a href="http://docs.oracle.com/javase/tutorial/java/javaOO/">http://docs.oracle.com/javase/tutorial/java/javaOO/</a></li>
<li><a href="http://baddotrobot.com/blog/2014/02/18/method-references-in-java8/">http://baddotrobot.com/blog/2014/02/18/method-references-in-java8/</a></li>
<li><a href="http://www.webupd8.org/2014/03/how-to-install-oracle-java-8-in-debian.html">http://www.webupd8.org/2014/03/how-to-install-oracle-java-8-in-debian.html</a></li>
<li><a href="http://www.infoq.com/minibooks/emag-java-8">http://www.infoq.com/minibooks/emag-java-8</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>125</wp:post_id>
		<wp:post_date><![CDATA[2014-03-21 22:13:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-03-21 11:13:36]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[java-8-in-a-nutshell]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="jdk"><![CDATA[jdk]]></category>
		<category domain="post_tag" nicename="lambda"><![CDATA[lambda]]></category>
		<category domain="category" nicename="miscellaneous"><![CDATA[Miscellaneous]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_pending]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_google_plus_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/116873873608085229608/posts/N4ohp7KMPGv]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_external]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"116873873608085229608";b:1;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_user]]></wp:meta_key>
			<wp:meta_value><![CDATA[nikolaygrozev]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://t.co/YULh9qNfwd]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_linkedin_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=30071619&stype=M&topic=5852733562503065600&type=U&a=yww-]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[geo_public]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_3afab96eee5eb967ac1e7feb8135d849]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_98fa1a8424b9985e244ac6a2389a26f6]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_249129576af856cf37f36794e8bbf665]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_b63b24e9ccb814cde55edb79648d23ae]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_ad47b4bc478290007539c16b9e044a02]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_c47be8ba7ceb7f3508a0ee9cfee7115e]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_8c03aa60a02a33d2c351874d7c8e6445]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_aa7d2db11ed677044519abf8984920b5]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_75b79200206ff2025d481602190453b6]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_f65ec015d9d7a0a881c9ba103a114780]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_68211be2e5525e5aadf10291b7dcd11a]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[Tanya Verevkina]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tveriovkina@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[172.56.2.206]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-03-27 05:58:01]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-03-26 18:58:01]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Great article :)</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1395860281.9425389766693115234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1395872823]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1395872823]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1395872823.512814044952392578125;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-03-26 18:58:01]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[49.183.193.33]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-03-28 17:07:17]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-03-28 06:07:17]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Thanks, Tanya.</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>12</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1395986837]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1395986838.2224490642547607421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1395986839]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-03-28 06:07:17]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[instagram followers hack no download or survey]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[mickituckfield@live.de]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.redbrick.dcu.ie/~debate/forums/profile.php?mode=viewprofile&amp;u=215936</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[167.160.115.186]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-06-22 07:13:51]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-06-21 20:13:51]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Appreciation to my father who stated to me on the topic of this web site,
this webpage is really remarkable.</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1403381631.709641933441162109375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1403420714]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1403420714]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-06-21 20:13:51]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[Summary of the Oracle JDK8 MOOC | Nikolay Grozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://nikolaygrozev.wordpress.com/2015/07/30/summary-of-the-oracle-jdk8-mooc/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.0.81.50]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-07-30 19:49:38]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-07-30 08:49:38]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>[&#8230;] a previous post I summarised the new functional features of Java 8. Oracle has recently released a 3-week JDK 8 [&#8230;]</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1438246534]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1438246534.3511168956756591796875;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1438246178.5407259464263916015625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-07-30 08:49:38]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Automated CloudStone Setup in Ubuntu VMs</title>
		<link>http://www.nikgrozev.org/2014/05/10/automated-cloudstone-setup-in-ubuntu-vms/</link>
		<pubDate>Fri, 09 May 2014 15:32:26 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://nikolaygrozev.wordpress.com/?p=166</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Introduction</h1>

One of the major obstacles in Cloud computing research is the lack of representative "cloudy" applications and workloads. This makes it hard for researchers to test their new approaches in areas like load balancing, resource provisioning and autoscaling with realistic industry-inspired environments. The <a href="http://parsa.epfl.ch/cloudsuite/cloudsuite.html" title="CloudStone 2.0">CloudSuite 2.0</a> suite of benchmarking applications tries to address just that. It comprises 8 benchmarks, which represent a large spectrum of typical applications run in cloud environments. Among them is CloudStone, which is a social media 3-tier web application benchmark. It is very useful in the research of web applications hosted in clouds, as it is the only (to the best of my knowledge) modern Web 2.0 benchmarking application.

However, as with other academic benchmarking tools, the installation is not straightforward. Some insidious bugs and middleware incompatibilities need to be patched, making it quite difficult to set up and use. This article introduces several scripts that automate CloudStone's installation on 64bit Ubuntu 14.04 virtual machines. These scripts have been tested in Amazon AWS, but in principle they should work in other Infrastructure as a Service (IaaS) environments as well.

<h1>CloudStone Overview</h1>

In its simplest form CloudStone is composed of three Virtual Machines (VMs) running the <em><u>Olio</u></em> application - a client/driver, a web/application server (AS) and a database server (DB). The client machine executes the workload, consisting of multiple users' actions, against the AS server. The web server VM runs the application itself in an <em>Nginx</em> server. It also hosts a <em>filestore</em> with users' multimedia content (e.g. images). The DB server provides access to a <em>MySql</em> database with the application data. It also hosts a <em>GeoCoder</em> service hosted in an <em>Apache Tomcat</em> instance providing geocoding services (e.g. mapping latitude/longitude to zip codes) to the application server.

The load generation and the performance monitoring are enabled by the <a href="https://github.com/akara/faban">Faban</a> benchmarking harness. The so called <em>Faban master</em> (or <em>driver)</em> process runs on the client VM, and emulates the user workload to the servers. The Faban driver starts <em>Faban agent</em> processes on the AS and DB servers, through which it monitors their performance throughout the benchmark execution.

The following diagram depicts the target setup of CloudStone:

[caption id="attachment_168" align="aligncenter" width="625"]<img src="http://www.nikgrozev.org/wp-content/uploads/2014/05/cloudstoneoverview.png" alt="CloudSton Architecture" width="625" class="size-full wp-image-168" /> CloudStone Architecture[/caption]

<h1>Prerequisites</h1>

<u><span style="color:#993300;text-decoration:underline;"><strong>Security Notice!</strong></span></u> CloudStone implicitly requires that all VM machines can <em>ping</em> each other and connect to each other at random ports. Thus you should create a separate firewall setting (i.e. a Security Group), which allows this and which is <u>used only for running CloudStone</u>. The following screenshot shows the security group used in this tutorial, which allows pinging and access to all TCP ports from anywhere. Alternatively, you can create a security group allowing such access only from the CloudStone VMs' addresses. Furthermore, CloudStone assumes that all machines can ssh into each other without any prompts. Hence our scripts need to copy the key (i.e. the <u>_pem_</u> file) across all machines. Thus it is advised to <u>create a new pem file only for running CloudStone</u>.

[caption id="attachment_171" align="aligncenter" width="640"]<img src="http://www.nikgrozev.org/wp-content/uploads/2014/05/securitygroup-1024x538.png" alt="CloudStone security Group in AWS" width="640" class="size-large wp-image-171" /> CloudStone security Group in AWS[/caption]

Before starting the setup, you should create 3 VM instances running <strong><u>64 bit Ubuntu 14.04</u></strong> - the client, the web and the DB servers. They should be configured with a permissive Security Group and using the same dedicated <em>pem</em> file, as described above. The application/web server VM should have at least 50GB mounted disk storage in order to host the <em>filestore</em>.

You should also have a fourth Linux machine, which will guide the installation process. We will call it the "<u>_Installer_</u>" machine. This could be your PC or laptop. If you don't have a Linux machine available, you could use a dedicated VM in the cloud. It uses SSH and SCP to configure appropriately and start all servers. The next diagram depicts the setup topology.

[caption id="attachment_174" align="aligncenter" width="640"]<img src="http://www.nikgrozev.org/wp-content/uploads/2014/05/cloudstoneinstallationtopology.png" alt="The installer Linux machine uses SSH and SCP to configure the CloudStone VMs. All CloudStone VMs run 64bit Ubuntu 14.04, have the same pem file (e.g. CloudStone.pem) and the same permissive security group (e.g. named CloudStone" width="640" class="size-full wp-image-174" /> The installer Linux machine uses SSH and SCP to configure the CloudStone VMs. All CloudStone VMs run 64bit Ubuntu 14.04, have the same pem file (e.g. CloudStone.pem) and the same permissive security group (e.g. named CloudStone[/caption]

<h1>Installation</h1>

Once you have configured the CloudStone VMs you can continue with the installation. The installation scripts are hosted in a <a href="https://github.com/nikolayg/CloudStoneSetupOnUbuntu">GitHub repository called CloudStoneSetupOnUbuntu</a>. From the installer machine you can either clone the GIT repository, or download the archive and extract it. After that you need to copy the <em>pem</em> file (e.g. CloudStone.pem) for accessing the VMs into the newly created directory with the scripts.

As a next step you need to tell the scripts the addresses of the CloudStone VMs and the name of the key. Edit the <u>main_installer.sh</u> file and modify the properties with the VM addresses and the key name. It should look something like that:

<pre><code class="bash">clientIPAddress=ec2-XX-XX-XX-XX.ap-southeast-2.compute.amazonaws.com
asIPAddress=ec2-XX-XX-XX-XX.ap-southeast-2.compute.amazonaws.com
dbIPAddress=ec2-XX-XX-XX-XX.ap-southeast-2.compute.amazonaws.com

pemFile=CloudStone.pem
</code></pre>

Now we are ready to proceed with the installation. From the directory with the scripts, issue the following command:

<pre><code class="bash">sudo bash main_installer.sh
</code></pre>

This will start the installation process. In the beginning, you may be prompted to accept the addition of the 3 VMs to the list of known ssh hosts. The installation can take quite some time! To monitor the progress and check for errors you can look at the log, which is written to the following files in the home directory of the installer machine:

<ul>
<li><u>~/client-setup.log</u> - the log for installing the Client VM. The first to be written.</li>
<li><u>~/as-setup.log</u> - the log for installing the Web/AS VM. Written after the installation of the Client VM.</li>
<li><u>~/db-setup.log</u> - the log for installing the DB VM. Written after the installation of the Web/AS VM.</li>
</ul>

If the installation is successful you shouldn't see any error messages in the logs and each log file should end with an "INSTALLATION SUMMARY" section similar to the following one:

<pre><code>==== ==== ==== ==== INSTALLATION SUMMARY ==== ==== ==== ====

$JAVA_HOME:     /usr/lib/jvm/java-6-openjdk-amd64
$JDK_HOME:      /usr/lib/jvm/java-6-openjdk-amd64
$OLIO_HOME:     /cloudstone/apache-olio-php-src-0.2
$FABAN_HOME:    /cloudstone/faban
$APP_DIR:       /var/www
$FILESTORE:     /mnt/filestorage
</code></pre>

The summary sections of the log files list installation environment variables, showing where the different components are installed. We will need this information to run CloudStone.

<h1>Running CloudStone</h1>

To run CloudStone point your browser to <u>http:// [ client-vm-address ] :9980</u>, where <u>[client-vm-address]</u> is the address of the Client VM. You should see a screen like the following one:

[caption id="attachment_179" align="aligncenter" width="440"]<img src="http://www.nikgrozev.org/wp-content/uploads/2014/05/fabanoliomainscreen-1024x703.png" alt="Faban Main Screen" width="440" class="size-large wp-image-179" /> Faban Main Screen[/caption]

Click on <u>Schedule Run</u>, input a profile name (e.g. Test) and click select. In the following wizard, you need to define the details of the CloudStone setup and the executed workload. You can use the following screenshots as a guide:

[gallery ids="189,180,182,181"]

After setting up the benchmark click OK to start it. You can view the benchmark progress and eventually the result from the "View Results" menu.

[gallery ids="186,185"]

Now that you've got CloudStone up and running, you can run different workloads (i.e. number of users) by just modifying the appropriate parameters.

<h1>Under The Cover</h1>

We saw that the installation was done by configuring and running a single bash script. This section is more technical and describes in more details the structure of the installation scripts, so you can debug if something goes wrong.

The main function of the <u>main_installer.sh</u> script is to run in sequence the installations of the CloudStone VMs and to transfer the required files to and from the servers. Under the cover, <u>main_installer.sh</u> sets the parameters of, transfers and runs 3 scripts on the CloudStone VMs. These are:

<ul>
<li><u>client-setup.sh</u> - executed on the client VM. Its log is redirected to <em>~/client-setup.log</em> on the installer machine.</li>
<li><u>as-setup.sh</u> - executed on the web/application server VM. Its log is redirected to <em>~/as-setup.log</em> on the installer machine.</li>
<li><u>db-setup.sh</u> - executed on the DB VM. Its log is redirected to <em>~/db-setup.log</em> on the installer machine.</li>
</ul>

Two additional scripts implement the installation logic which is common for multiple CloudStone VMs:

<ul>
<li><u>base-setup.sh</u> - executed by all setup scripts. Installs common packages, sets up common variables etc.</li>
<li><u>base-server.sh</u> - executed by <u>as-setup.sh</u> and <u>db-setup.sh</u>. Implements common logic for the installation of the web/application and DB server.</li>
</ul>

All these scripts have been written following the <a href="http://parsa.epfl.ch/cloudsuite/web.html">official CloudStone installation instructions</a>. They also include fixes for a lot of unexpected errors and thus differ significantly from the official installation procedure.

The main differences are:

<ul>
<li>CloudStone comes with a distribution of Faban, which according to the documentation should be deployed and used. However this version had several issues when deployed on Ubuntu. I had to fork Faban on GitHub and implement workarounds for them. The scripts use the <a href="https://github.com/nikolayg/faban">Faban fork</a> instead of the original Faban distribution. A full list of changes to Faban can be seen from forked project's history.</li>
<li>CloudStone includes a distribution of PhP code, which according to the instructions needs to be compiled and installed. However the PhP code had to be patched, as it depends on an old version of libxml2-dev and did not compile.</li>
<li>Faban assumes all VMs can ssh into each other without any prompts. The installation scripts copy the <em>pem</em> file to the CloudStone VMs and ensure their ~/.ssh/config files are set properly to allow ssh without prompts.</li>
<li>Many file permissions had to be changed and non-existing directories and files had to be created, so that the servers could have proper access to logs and system files.</li>
<li>The privileges to the <em><u>olio</u></em> MySql user had to be granted for all IP addresses, not only the web/app server address. The problem was that MySql could not perform well DNS resolution of the elastic DNS address of the web server.</li>
<li>The scripts automatically select the location for the <em><u>filestore</u></em> on the AS server. They dynamically inspect all mounted disks, and select the one with the largest amount of free storage space.</li>
</ul>

<h1>Conclusion</h1>

This article introduced several Bash scripts that automate the installation of the CloudStone 2.0 benchmark. In future articles I will explore how these scripts can be ported/rewritten to Chef or Puppet configurations, and how CloudStone can be configured to use a load balancer and multiple web/app servers... so stay tuned :)

<h1>References</h1>

Official installation documentation:

<ul>
<li><a href="http://parsa.epfl.ch/cloudsuite/web.html">http://parsa.epfl.ch/cloudsuite/web.html</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>166</wp:post_id>
		<wp:post_date><![CDATA[2014-05-10 02:32:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-05-09 15:32:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[automated-cloudstone-setup-in-ubuntu-vms]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bash"><![CDATA[Bash]]></category>
		<category domain="category" nicename="cloudstone"><![CDATA[CloudStone]]></category>
		<category domain="post_tag" nicename="cloudstone"><![CDATA[CloudStone]]></category>
		<category domain="post_tag" nicename="ubuntu"><![CDATA[Ubuntu]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_pending]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_google_plus_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/116873873608085229608/posts/jhrcDEwnNpB]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_linkedin_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=30071619&stype=M&topic=5870555711620001792&type=U&a=dab1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_external]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"116873873608085229608";b:1;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_user]]></wp:meta_key>
			<wp:meta_value><![CDATA[nikolaygrozev]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://t.co/OBwmVaua3l]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[geo_public]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[174]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[Advanced Automated CloudStone Setup in Ubuntu VMs [Part 2] | Nikolay Grozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com/2014/06/02/advanced-automated-cloudstone-setup-in-ubuntu-vms-part-2/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.0.83.104]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-06-02 22:31:12]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-06-02 11:31:12]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>[&#8230;] a previous post I described a set of scripts for automatically installing the CloudStone web benchmark, part of the [&#8230;]</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-06-02 11:31:12]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1401708672.40569305419921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1401708733]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1401708733.6727950572967529296875;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[Val]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[me2cooldude@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[73.53.201.243]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-08-20 00:46:52]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-08-19 13:46:52]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Nikolay,
Thanks for posting this article. I have a question here.</p>

<p>You said we need to edit the main_installer.sh file and modify the properties with the VM addresses. I see following in db-setup.sh, client-setup.sh and as-setup.sh respectively:
asIPAddress=ec2-XX-XX-XX-XX.ap-southeast-2.compute.amazonaws.com
clientIPAddress=ec2-XX-XX-XX-XX.ap-southeast-2.compute.amazonaws.com
dbIPAddress=ec2-XX-XX-XX-XX.ap-southeast-2.compute.amazonaws.com</p>

<p>So, do I need to edit db-setup.sh, client-setup.sh and as-setup.sh files and modify the corresponding VM address?</p>

<p>Thanks,
Val</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1408456013.0693500041961669921875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1408460149]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1408460149.8039948940277099609375;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1408460149]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-08-19 13:47:10]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.150.46.107]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-08-20 02:03:10]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-08-19 15:03:10]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Val,</p>

<p>No you don't need to. The main script will automatically modify these scripts with the correct addresses at run time.</p>

<p>You can see how this is done at lines 31-39 in main_installer.sh (http://tinyurl.com/khj48t9).</p>

<p>Regards,
Nikolay</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>17</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-08-19 15:03:13]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1408460592]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1408460590]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1408460591.3911058902740478515625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[Val]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[me2cooldude@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[73.53.201.243]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-09-01 13:41:40]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-09-01 02:41:40]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Nikolay,
Here are the couple of queries:
1)  All the three log files with Installation Summary are generated at home directory.  As I could not find following line on the command prompt, I am quite not sure if the installation was completed.
        == == == == DONE! == == == ==</p>

<p>2)  Also, I ran benchmark with the way you mentioned on the site and I could see graphs generated for UIDriver Throughput, UIDriver Response Times (seconds), UIDriver  Frequency Distribution of Response Times (seconds), UIDriver  Frequency Distribution of Cycle/Think Times (seconds), UIDriver  Frequency Distribution of Targeted Cycle/Think Times (seconds) under ‘Detailed Results’ link. 
However, ‘Oilo Workload 0.1 Summary Report’ and ‘UIDriver’ under ‘Summary Result’ show ‘Pass/Fail: FAILED’.</p>

<p>Can you please let me know your thoughts on the above two points?</p>

<p>Thank you,
Val</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1409539300]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1409539300.33576107025146484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1409539300]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-09-01 02:41:41]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.150.46.107]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-09-01 16:07:25]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-09-01 05:07:25]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Val,
Here are my answers:
1) If all log files are generated successfully, contain no error messages and end with an "INSTALLATION SUMMARY" section, you're good to go. It has been reported that in some terminals the standard output fails to refresh timely during the installation. If you think that is the case and your terminal is not refreshed upon completion, you can try Ctrl+C to frocefully close the process and flush its buffer. Alternatively you can just redirect the "Done!" message to a file.</p>

<p>2) CloudStone comes with some predefined expected performance metrics - e.g. response time, load etc. If any of them is violated with even a little bit, the whole Run is marked as "Failed". Going through the detailed results should tell you which metric has been violated.</p>

<p>I hope that helps!
Nik</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>19</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-09-01 05:07:28]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1409548047]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1409548046]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1409548046.6710720062255859375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[Val]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[me2cooldude@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[73.53.201.243]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-09-02 01:41:20]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-09-01 14:41:20]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Thanks for the reply Nikolay.</p>

<p>I get a lot of debconf messages like below in the log files. Is that an issue for the failed benchmark?</p>

<p>debconf: unable to initialize frontend: Dialog
debconf: (Dialog frontend will not work on a dumb terminal, an emacs shell buffer, or without a controlling terminal.)
debconf: falling back to frontend: Readline
debconf: unable to initialize frontend: Readline
debconf: (This frontend requires a controlling tty.)
debconf: falling back to frontend: Teletype
dpkg-preconfigure: unable to re-open stdin:</p>

<p>Thank you,
Val</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1409582480]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-09-01 14:41:21]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1409582480.5595009326934814453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1409582480]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.150.46.107]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-09-02 01:55:20]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-09-01 14:55:20]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi there,</p>

<p>I get these warnings as well and they do not indicate an error. They simply indicate that the packages are not installed in interactive shell. For more details see here - http://askubuntu.com/questions/506158/unable-to-initialize-frontend-dialog-when-using-ssh</p>

<p>As I mentioned, the Run's logs and results in the driver's web interface should have info about what is the cause of the failure.</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1409583320]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1409583320.282474040985107421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1409583320]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-09-01 14:55:21]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23</wp:comment_id>
			<wp:comment_author><![CDATA[Ubiratam de Paula]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[upaula@ic.uff.br]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[177.195.116.97]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-12-11 00:57:34]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-12-10 13:57:34]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Nikolay,
Thank you very much for posting this article. I have a question too.</p>

<p>I did not understand the meaning of the Ramp Up, Steady State and Ramp Down parameters. May I simulate a Flash Crowd event with them?</p>

<p>Thank you again,</p>

<p>Ubiratam</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1418219856]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1418219855.47111797332763671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1418224168.630858898162841796875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-12-10 13:57:34]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[17433246860]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1449142638]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1449142638]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1449142638.9231719970703125;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[NS]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nehasony8@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[73.53.137.234]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-03-19 07:10:26]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-03-18 20:10:26]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Nikolay,</p>

<p>Thank you for sharing this article. 
I am running cloudstone on T2.Medium instances that have 2 vCPUS. I entered 500 concurrent users in db-setup.sh and tried running the experiment for concurrent users ranging from 50 to 500 (in Driver tab). It passed for 50, 100, 200, 300, 450 users. For 500 users, it failed with one of the thresholds being exceeded a little bit.</p>

<p>I was wondering if T2. Medium instances could support 450 concurrent users as I saw your comment on the article "https://nikolaygrozev.wordpress.com/2014/06/02/advanced-automated-cloudstone-setup-in-ubuntu-vms-part-2/" that M3.Medium (larger than T2.Medium that I am using) support 300 - 400 users. So, I was wondering how could smaller instances support more concurrent users. Am I doing anything wrong here?</p>

<p>Also, how to check the maximum number of concurrent users that a particular instance can support?</p>

<p>--NS</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1426738995.806304931640625;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1426738995]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1426738995]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1426709428]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[8312472665]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1426714214.8735549449920654296875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1426709427.8063390254974365234375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-03-18 20:10:26]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>25</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[128.250.192.43]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-03-19 15:37:15]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-03-19 04:37:15]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi there,</p>

<p>That's a great question! First, not all VMs are created equal, even if they are of the same type. People discovered through benchmarks that 2 VMs of the same type can have pretty different actual performance - see http://dl.acm.org/citation.cfm?id=1926618.1926641. Therefore, 2 VMs of the same type may actually handle different number of users.</p>

<p>Secondly, T2 VMs are "bursty" and their performance varies over time. This means they define a comparatively low performance threshold, which however is exceeded significantly most of the time, as they use unused resources from other VMs on the same host. Thus defining what is the "average" preformance of these VMs can be quite tricky.</p>

<p>I hope that sheds some light.</p>

<p>Nik</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>24</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1426739835]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1426739835.514070987701416015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1426739835]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[8312937618]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-03-19 04:37:15]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>26</wp:comment_id>
			<wp:comment_author><![CDATA[NS]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nehasony8@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[73.53.137.234]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-03-20 07:04:42]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-03-19 20:04:42]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Thank you for the reply Nikolay. Appreciate your help.</p>

<p>My db-setup.log file ends with 'Killed by Signal 1', due to which I am not able to proceed with my experiments now. I tried running it several times for various users from 100 to 2000. However, db-setup.log file always ends with 'Killed by Signal 1' and no installation summary.</p>

<p>Do you know what might be the reason behind this?</p>

<p>Thank you,
NS</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>25</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1426795484.4044120311737060546875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1426795483]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1426832530.514357089996337890625;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1426832529.6602189540863037109375;s:7:"message";s:54:"nikolaygrozev changed the comment status to unapproved";s:5:"event";s:17:"status-unapproved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[8364613218]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1426832530]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-03-19 20:04:42]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[NS]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nehasony8@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[73.53.137.234]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-03-20 13:29:05]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-03-20 02:29:05]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>I have one more question Nikolay.</p>

<p>I entered 90 as a load scale which means database will be populated with 9000 (90*100) users. While running the benchmark, I am not sure what to enter in the ‘Loaded for concurrent users’ parameter under ‘Data Servers’ tab. If I enter 90, it does not allow me to run the benchmark for more than 90 users. On the other hand, if I enter 9000, it fails with a lot of exceptions if I enter more than 90 concurrent users in ‘Driver’ tab.</p>

<p>Can you please let me know what should I enter in ‘Loaded for concurrent users’ under ‘Data Servers’ tab? 90 or 9000?</p>

<p>Thanks a lot for your help.</p>

<p>NS</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[8364586637]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1426832478]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1426832225.1027700901031494140625;s:7:"message";s:54:"nikolaygrozev changed the comment status to unapproved";s:5:"event";s:17:"status-unapproved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1426832478.553546905517578125;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-03-20 02:29:05]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1426818547]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1426818547.8389790058135986328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>28</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[128.250.192.43]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-03-20 17:22:03]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-03-20 06:22:03]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi there,</p>

<p>First, it's important to select "NO" for the "Reload Database" field. That will ensure the DB is no re-populated upon every execution.</p>

<p>‘Loaded for concurrent users’ should be the number of users you populated with upon installation.</p>

<p>Hope that helps,
Nik</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>27</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1426832523]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1426832523.237155914306640625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-03-20 06:22:03]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[8364609615]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1426832523]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[128.250.192.43]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-03-20 17:24:07]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-03-20 06:24:07]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>I haven't seen this error. The log displays nicely all installation steps. Perhaps you can see at which stage it fails, and this will give you a clue.</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>26</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[8364668895]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1426832647]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1426832647.13858509063720703125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-03-20 06:24:07]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1426832647]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[Shashank]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[shekharshank@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[129.59.104.159]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-11-17 06:42:06]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-11-16 19:42:06]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Nikolay,</p>

<p>Thanks a lot for the article and the toolkit. Not sure if you are still active, but it would be great if you  could answer my query.</p>

<p>I have the olio setup and when I perform the same set of experiments (incrementing the number of users in steps of 25) it saturates after some time, as expected. However, if I repeat the same set of experiments without restarting the servers, the performance degrades considerably (number of ops/sec becomes approx. half). A restart restores the performance. Could it be something wrong on my setup or is this an expected behavior?</p>

<p>Regards,
Shashank</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[16935585819]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1447757401]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1447757401.405735015869140625;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1447702928.5306720733642578125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1447757401]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1447708003.568500995635986328125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-11-16 19:42:06]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>About</title>
		<link>http://www.nikgrozev.org/about/</link>
		<pubDate>Thu, 28 Nov 2013 12:17:47 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://nikolaygrozev.wordpress.com/?page_id=1</guid>
		<description></description>
		<content:encoded><![CDATA[<a href="http://www.nikgrozev.org/wp-content/uploads/2016/04/nikolay-grozev-01.jpg"><img class="alignleft wp-image-716 size-medium" src="http://www.nikgrozev.org/wp-content/uploads/2016/04/nikolay-grozev-01.jpg?w=300" width="300" height="200" /></a>

Hi there!

Welcome to my blog!

My name is Nikolay Grozev, and I am a PhD candidate at the University of Melbourne. In this blog I will be sharing thoughts, tricks and tips on technology, IT research and more.

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>616</wp:post_id>
		<wp:post_date><![CDATA[2013-11-28 12:17:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2013-11-28 12:17:47]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[about]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[geo_public]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hask</title>
		<link>http://www.nikgrozev.org/2016/03/14/functional-programming-and-category-theory-part-1-categories-and-functors/hask/</link>
		<pubDate>Mon, 14 Mar 2016 02:35:59 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2016/03/hask.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[The Hash Category]]></excerpt:encoded>
		<wp:post_id>617</wp:post_id>
		<wp:post_date><![CDATA[2016-03-14 13:35:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-14 02:35:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[hask]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>570</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2016/03/hask.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2016/03/hask.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:964;s:6:"height";i:922;s:4:"file";s:16:"2016/03/hask.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:16:"hask-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:16:"hask-300x287.jpg";s:5:"width";i:300;s:6:"height";i:287;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:16:"hask-768x735.jpg";s:5:"width";i:768;s:6:"height";i:735;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Functor</title>
		<link>http://www.nikgrozev.org/2016/03/14/functional-programming-and-category-theory-part-1-categories-and-functors/functor/</link>
		<pubDate>Mon, 14 Mar 2016 02:40:54 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2016/03/functor.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[A Functor from A to B.]]></excerpt:encoded>
		<wp:post_id>619</wp:post_id>
		<wp:post_date><![CDATA[2016-03-14 13:40:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-14 02:40:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[functor]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>570</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2016/03/functor.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2016/03/functor.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1198;s:6:"height";i:579;s:4:"file";s:19:"2016/03/functor.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:19:"functor-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:19:"functor-300x145.jpg";s:5:"width";i:300;s:6:"height";i:145;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:19:"functor-768x371.jpg";s:5:"width";i:768;s:6:"height";i:371;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:20:"functor-1024x495.jpg";s:5:"width";i:1024;s:6:"height";i:495;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>EndoFunctor</title>
		<link>http://www.nikgrozev.org/2016/03/14/functional-programming-and-category-theory-part-1-categories-and-functors/endofunctor/</link>
		<pubDate>Mon, 14 Mar 2016 03:54:59 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2016/03/endofunctor.jpeg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[An Endo Functor]]></excerpt:encoded>
		<wp:post_id>622</wp:post_id>
		<wp:post_date><![CDATA[2016-03-14 14:54:59]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-14 03:54:59]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[endofunctor]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>570</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2016/03/endofunctor.jpeg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2016/03/endofunctor.jpeg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1000;s:6:"height";i:614;s:4:"file";s:24:"2016/03/endofunctor.jpeg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:24:"endofunctor-150x150.jpeg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:24:"endofunctor-300x184.jpeg";s:5:"width";i:300;s:6:"height";i:184;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:24:"endofunctor-768x472.jpeg";s:5:"width";i:768;s:6:"height";i:472;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>HaskFunctor</title>
		<link>http://www.nikgrozev.org/2016/03/14/functional-programming-and-category-theory-part-1-categories-and-functors/haskfunctor/</link>
		<pubDate>Mon, 14 Mar 2016 04:00:42 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2016/03/haskfunctor.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[A Functor in Hask]]></excerpt:encoded>
		<wp:post_id>624</wp:post_id>
		<wp:post_date><![CDATA[2016-03-14 15:00:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-14 04:00:42]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[haskfunctor]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>570</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2016/03/haskfunctor.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2016/03/haskfunctor.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1020;s:6:"height";i:450;s:4:"file";s:23:"2016/03/haskfunctor.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:23:"haskfunctor-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:23:"haskfunctor-300x132.jpg";s:5:"width";i:300;s:6:"height";i:132;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:23:"haskfunctor-768x339.jpg";s:5:"width";i:768;s:6:"height";i:339;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>HaskFunctor</title>
		<link>http://www.nikgrozev.org/2016/03/14/functional-programming-and-category-theory-part-1-categories-and-functors/haskfunctor-2/</link>
		<pubDate>Mon, 14 Mar 2016 04:04:16 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2016/03/haskfunctor1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[ A Hash Functor]]></excerpt:encoded>
		<wp:post_id>626</wp:post_id>
		<wp:post_date><![CDATA[2016-03-14 15:04:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-14 04:04:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[haskfunctor-2]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>570</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2016/03/haskfunctor1.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2016/03/haskfunctor1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1028;s:6:"height";i:450;s:4:"file";s:24:"2016/03/haskfunctor1.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:24:"haskfunctor1-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:24:"haskfunctor1-300x131.jpg";s:5:"width";i:300;s:6:"height";i:131;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:24:"haskfunctor1-768x336.jpg";s:5:"width";i:768;s:6:"height";i:336;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:25:"haskfunctor1-1024x448.jpg";s:5:"width";i:1024;s:6:"height";i:448;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Applicative Functor</title>
		<link>http://www.nikgrozev.org/2016/04/11/functional-programming-and-category-theory-part-2-applicative-functors/applicativefunctor/</link>
		<pubDate>Sat, 09 Apr 2016 13:12:16 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2016/04/applicativefunctor1.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Computational process of applying an Applicative functor.]]></excerpt:encoded>
		<wp:post_id>696</wp:post_id>
		<wp:post_date><![CDATA[2016-04-10 00:12:16]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-04-09 13:12:16]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[applicativefunctor]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>668</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2016/04/applicativefunctor1.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2016/04/applicativefunctor1.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1149;s:6:"height";i:72;s:4:"file";s:31:"2016/04/applicativefunctor1.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:30:"applicativefunctor1-150x72.jpg";s:5:"width";i:150;s:6:"height";i:72;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:30:"applicativefunctor1-300x19.jpg";s:5:"width";i:300;s:6:"height";i:19;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:30:"applicativefunctor1-768x48.jpg";s:5:"width";i:768;s:6:"height";i:48;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:31:"applicativefunctor1-1024x64.jpg";s:5:"width";i:1024;s:6:"height";i:64;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Applicative Functor in Hask</title>
		<link>http://www.nikgrozev.org/2016/04/11/functional-programming-and-category-theory-part-2-applicative-functors/applicativefunctorhask/</link>
		<pubDate>Sun, 10 Apr 2016 07:39:54 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2016/04/applicativefunctorhask.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[An Applicative Functor in Hask]]></excerpt:encoded>
		<wp:post_id>706</wp:post_id>
		<wp:post_date><![CDATA[2016-04-10 18:39:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-04-10 07:39:54]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[applicativefunctorhask]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>668</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2016/04/applicativefunctorhask.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2016/04/applicativefunctorhask.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:884;s:6:"height";i:464;s:4:"file";s:34:"2016/04/applicativefunctorhask.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:34:"applicativefunctorhask-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:34:"applicativefunctorhask-300x157.jpg";s:5:"width";i:300;s:6:"height";i:157;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:34:"applicativefunctorhask-768x403.jpg";s:5:"width";i:768;s:6:"height";i:403;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Nikolay Grozev</title>
		<link>http://www.nikgrozev.org/about/staff-portraits-rea-melbourne-australia-23112015-picture-andrew-henshaw/</link>
		<pubDate>Mon, 25 Apr 2016 10:59:37 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2016/04/nikolay-grozev-01.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[Staff portraits, REA, Melbourne Australia. 23/11/2015. Picture Andrew Henshaw]]></excerpt:encoded>
		<wp:post_id>716</wp:post_id>
		<wp:post_date><![CDATA[2016-04-25 21:59:37]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-04-25 10:59:37]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[staff-portraits-rea-melbourne-australia-23112015-picture-andrew-henshaw]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>616</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2016/04/nikolay-grozev-01.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2016/04/nikolay-grozev-01.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1200;s:6:"height";i:798;s:4:"file";s:29:"2016/04/nikolay-grozev-01.jpg";s:5:"sizes";a:5:{s:9:"thumbnail";a:4:{s:4:"file";s:29:"nikolay-grozev-01-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:29:"nikolay-grozev-01-300x200.jpg";s:5:"width";i:300;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:29:"nikolay-grozev-01-768x511.jpg";s:5:"width";i:768;s:6:"height";i:511;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:30:"nikolay-grozev-01-1024x681.jpg";s:5:"width";i:1024;s:6:"height";i:681;s:9:"mime-type";s:10:"image/jpeg";}s:14:"post-thumbnail";a:4:{s:4:"file";s:30:"nikolay-grozev-01-1200x798.jpg";s:5:"width";i:1200;s:6:"height";i:798;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"8";s:6:"credit";s:0:"";s:6:"camera";s:9:"NIKON D3S";s:7:"caption";s:77:"Staff portraits, REA, Melbourne Australia. 23/11/2015. Picture Andrew Henshaw";s:17:"created_timestamp";s:10:"1448299598";s:9:"copyright";s:0:"";s:12:"focal_length";s:2:"70";s:3:"iso";s:3:"200";s:13:"shutter_speed";s:5:"0.004";s:5:"title";s:77:"Staff portraits, REA, Melbourne Australia. 23/11/2015. Picture Andrew Henshaw";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-cropped-sam_5393.jpg</title>
		<link>http://www.nikgrozev.org/cropped-cropped-sam_5393-jpg/</link>
		<pubDate>Thu, 28 Apr 2016 13:12:08 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2016/04/cropped-cropped-sam_5393.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>723</wp:post_id>
		<wp:post_date><![CDATA[2016-04-29 00:12:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-04-28 13:12:08]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-cropped-sam_5393-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2016/04/cropped-cropped-sam_5393.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2016/04/cropped-cropped-sam_5393.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1099;s:6:"height";i:229;s:4:"file";s:36:"2016/04/cropped-cropped-sam_5393.jpg";s:5:"sizes";a:4:{s:9:"thumbnail";a:4:{s:4:"file";s:36:"cropped-cropped-sam_5393-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:35:"cropped-cropped-sam_5393-300x63.jpg";s:5:"width";i:300;s:6:"height";i:63;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:36:"cropped-cropped-sam_5393-768x160.jpg";s:5:"width";i:768;s:6:"height";i:160;s:9:"mime-type";s:10:"image/jpeg";}s:5:"large";a:4:{s:4:"file";s:37:"cropped-cropped-sam_5393-1024x213.jpg";s:5:"width";i:1024;s:6:"height";i:213;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_custom_header_last_used_pub/p2-breathe]]></wp:meta_key>
			<wp:meta_value><![CDATA[1461849146]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[pub/p2-breathe]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-cropped-sam_53931.jpg</title>
		<link>http://www.nikgrozev.org/cropped-cropped-sam_53931-jpg/</link>
		<pubDate>Thu, 28 Apr 2016 13:38:32 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2016/04/cropped-cropped-sam_53931.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>727</wp:post_id>
		<wp:post_date><![CDATA[2016-04-29 00:38:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-04-28 13:38:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-cropped-sam_53931-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2016/04/cropped-cropped-sam_53931.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2016/04/cropped-cropped-sam_53931.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:879;s:6:"height";i:229;s:4:"file";s:37:"2016/04/cropped-cropped-sam_53931.jpg";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:37:"cropped-cropped-sam_53931-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:36:"cropped-cropped-sam_53931-300x78.jpg";s:5:"width";i:300;s:6:"height";i:78;s:9:"mime-type";s:10:"image/jpeg";}s:12:"medium_large";a:4:{s:4:"file";s:37:"cropped-cropped-sam_53931-768x200.jpg";s:5:"width";i:768;s:6:"height";i:200;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
			<wp:meta_value><![CDATA[custom-header]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_custom_header_last_used_pub/twentytwelve]]></wp:meta_key>
			<wp:meta_value><![CDATA[1461850789]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_is_custom_header]]></wp:meta_key>
			<wp:meta_value><![CDATA[pub/twentytwelve]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>cropped-nikolay-grozev-01.jpg</title>
		<link>http://www.nikgrozev.org/cropped-nikolay-grozev-01-jpg/</link>
		<pubDate>Sun, 01 May 2016 11:43:17 +0000</pubDate>
		<dc:creator><![CDATA[nikolay.grozev@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2016/04/cropped-nikolay-grozev-01.jpg</guid>
		<description></description>
		<content:encoded><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2016/04/cropped-nikolay-grozev-01.jpg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>856</wp:post_id>
		<wp:post_date><![CDATA[2016-05-01 11:43:17]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-01 11:43:17]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[cropped-nikolay-grozev-01-jpg]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2016/04/cropped-nikolay-grozev-01.jpg]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2016/04/cropped-nikolay-grozev-01.jpg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_context]]></wp:meta_key>
			<wp:meta_value><![CDATA[site-icon]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:512;s:6:"height";i:512;s:4:"file";s:37:"2016/04/cropped-nikolay-grozev-01.jpg";s:5:"sizes";a:7:{s:9:"thumbnail";a:4:{s:4:"file";s:37:"cropped-nikolay-grozev-01-150x150.jpg";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:10:"image/jpeg";}s:6:"medium";a:4:{s:4:"file";s:37:"cropped-nikolay-grozev-01-300x300.jpg";s:5:"width";i:300;s:6:"height";i:300;s:9:"mime-type";s:10:"image/jpeg";}s:12:"widget-thumb";a:4:{s:4:"file";s:35:"cropped-nikolay-grozev-01-80x50.jpg";s:5:"width";i:80;s:6:"height";i:50;s:9:"mime-type";s:10:"image/jpeg";}s:13:"site_icon-270";a:4:{s:4:"file";s:37:"cropped-nikolay-grozev-01-270x270.jpg";s:5:"width";i:270;s:6:"height";i:270;s:9:"mime-type";s:10:"image/jpeg";}s:13:"site_icon-192";a:4:{s:4:"file";s:37:"cropped-nikolay-grozev-01-192x192.jpg";s:5:"width";i:192;s:6:"height";i:192;s:9:"mime-type";s:10:"image/jpeg";}s:13:"site_icon-180";a:4:{s:4:"file";s:37:"cropped-nikolay-grozev-01-180x180.jpg";s:5:"width";i:180;s:6:"height";i:180;s:9:"mime-type";s:10:"image/jpeg";}s:12:"site_icon-32";a:4:{s:4:"file";s:35:"cropped-nikolay-grozev-01-32x32.jpg";s:5:"width";i:32;s:6:"height";i:32;s:9:"mime-type";s:10:"image/jpeg";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"8";s:6:"credit";s:0:"";s:6:"camera";s:9:"NIKON D3S";s:7:"caption";s:77:"Staff portraits, REA, Melbourne Australia. 23/11/2015. Picture Andrew Henshaw";s:17:"created_timestamp";s:10:"1448299598";s:9:"copyright";s:0:"";s:12:"focal_length";s:2:"70";s:3:"iso";s:3:"200";s:13:"shutter_speed";s:5:"0.004";s:5:"title";s:77:"Staff portraits, REA, Melbourne Australia. 23/11/2015. Picture Andrew Henshaw";s:11:"orientation";s:1:"1";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Contact Me</title>
		<link>http://www.nikgrozev.org/contact-me/</link>
		<pubDate>Sun, 01 May 2016 12:03:58 +0000</pubDate>
		<dc:creator><![CDATA[nikolay.grozev@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/?page_id=864</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- The form below requires a jetpack connection to work-->
[contact-form][contact-field label='Name' type='name' required='1'/][contact-field label='Email' type='email' required='1'/][contact-field label='Content' type='textarea' required='1'/][/contact-form]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>864</wp:post_id>
		<wp:post_date><![CDATA[2016-05-01 12:03:58]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-01 12:03:58]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[contact-me]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[page]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_page_template]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_g_feedback_shortcode]]></wp:meta_key>
			<wp:meta_value><![CDATA[[contact-field label='Name' type='name' required='1'/][contact-field label='Email' type='email' required='1'/][contact-field label='Content' type='textarea' required='1'/]]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ampoule-Lamp</title>
		<link>http://www.nikgrozev.org/ampoule-lamp/</link>
		<pubDate>Sun, 01 May 2016 12:14:57 +0000</pubDate>
		<dc:creator><![CDATA[nikolay.grozev@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/wp-content/uploads/2016/05/Ampoule-Lamp.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>866</wp:post_id>
		<wp:post_date><![CDATA[2016-05-01 12:14:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-01 12:14:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[ampoule-lamp]]></wp:post_name>
		<wp:status><![CDATA[inherit]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[attachment]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url><![CDATA[http://www.nikgrozev.org/wp-content/uploads/2016/05/Ampoule-Lamp.png]]></wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attached_file]]></wp:meta_key>
			<wp:meta_value><![CDATA[2016/05/Ampoule-Lamp.png]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wp_attachment_metadata]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:617;s:6:"height";i:726;s:4:"file";s:24:"2016/05/Ampoule-Lamp.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:24:"Ampoule-Lamp-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:24:"Ampoule-Lamp-255x300.png";s:5:"width";i:255;s:6:"height";i:300;s:9:"mime-type";s:9:"image/png";}s:12:"widget-thumb";a:4:{s:4:"file";s:22:"Ampoule-Lamp-80x50.png";s:5:"width";i:80;s:6:"height";i:50;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:12:{s:8:"aperture";s:1:"0";s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";s:1:"0";s:9:"copyright";s:0:"";s:12:"focal_length";s:1:"0";s:3:"iso";s:1:"0";s:13:"shutter_speed";s:1:"0";s:5:"title";s:0:"";s:11:"orientation";s:1:"0";s:8:"keywords";a:0:{}}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>test - 2016-05-04 12:15:23</title>
		<link>http://www.nikgrozev.org/?post_type=feedback&#038;p=870</link>
		<pubDate>Wed, 04 May 2016 12:15:23 +0000</pubDate>
		<dc:creator><![CDATA[]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/?post_type=feedback&#038;p=870</guid>
		<description></description>
		<content:encoded><![CDATA[Hi there,

Just testing if this form works :)
<!--more-->
AUTHOR: test
AUTHOR EMAIL: nikolay.grozev@hotmail.com
AUTHOR URL: 
SUBJECT: [Nikolay Grozev] Contact Me
IP: 124.168.92.100
Array
(
    [1_Name] =&gt; test
    [2_Email] =&gt; nikolay.grozev@hotmail.com
    [3_Content] =&gt; Hi there,

Just testing if this form works :)
)
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>870</wp:post_id>
		<wp:post_date><![CDATA[2016-05-04 12:15:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-04 12:15:23]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[closed]]></wp:comment_status>
		<wp:ping_status><![CDATA[closed]]></wp:ping_status>
		<wp:post_name><![CDATA[2fd2871bf747866a41c9a66d36940429]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>864</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[feedback]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_feedback_extra_fields]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_feedback_email]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:2:"to";a:1:{i:0;s:24:"nikolay.grozev@gmail.com";}s:7:"message";s:344:"<b>Name:</b> test<br /><br />
<b>Email:</b> nikolay.grozev@hotmail.com<br /><br />
<b>Content:</b> Hi there,<br />
<br />
Just testing if this form works :)<br /><br />

Time: May 4, 2016 at 12:15 pm<br />
IP Address: 124.168.92.100<br />
Contact Form URL: http://www.nikgrozev.org/contact-me/<br />

Sent by a verified "Nikolay Grozev" user.";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Starting VM with custom image, security group and key-pair via JClouds</title>
		<link>http://www.nikgrozev.org/2014/07/31/starting-vm-with-custom-image-security-group-and-key-pair-via-jclouds/</link>
		<pubDate>Wed, 30 Jul 2014 15:25:32 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://nikolaygrozev.wordpress.com/?p=226</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Introduction</h1>

Recently I needed to programatically start EC2 instances from a private <a href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html">AMI</a> (VM Image) as a part of a new provisioning algorithm I was working on. I also wanted to specify my predefined security group and key-pair, so that the new VM is usable right away. Lastly, I wanted to implement it as EC2-independent as possible, so that I can include multiple clouds later on.

There are a few Multi-Cloud libraries out there, whose purpose is to provide just that - a cloud provider agnostic API for managing cloud resources. After struggling a bit with both <a href="https://libcloud.apache.org/">Apache LibCloud</a> and <a href="https://jclouds.apache.org/">Apache JClouds</a> I could finally implement this in JClouds.

<h1>JClouds Implementation</h1>

The easiest way to set up JClouds is by using it as a <a href="https://jclouds.apache.org/start/install/">Maven dependency</a>. The following method implements the provisioning:

<pre><code class="java">public static List&lt;List&lt;String&gt;&gt; launchInstances(
        String providerId,
        String userName,
        String password,
        String locationId,
        String imageId,
        String hardwareId,
        String securityGroupName,
        String keyPairName,
        String groupName,
        int numVMs,
        Properties imageOwnerIdFilter) {

    // Get the Compute abstraction for the provider.
    // Override the available VM images
    ComputeService compute = ContextBuilder.
            newBuilder(providerId).
            credentials(userName, password).
            overrides(imageOwnerIdFilter).
            buildView(ComputeServiceContext.class).getComputeService();

    // Create a template for the VM
    Template template = compute.
            templateBuilder().
            locationId(locationId).
            imageId(imageId).
            hardwareId(hardwareId).build();

    // Specify your own security group
    TemplateOptions options = template.getOptions();
    options.securityGroups(securityGroupName);

    // Specify your own keypair if the current provider allows for this
    try {
        Method keyPairMethod = options.getClass().getMethod("keyPair", String.class);
        keyPairMethod.invoke(options, keyPairName);
    } catch (NoSuchMethodException | SecurityException | IllegalAccessException | IllegalArgumentException
            | InvocationTargetException e) {
        throw new IllegalStateException("Provider: " + providerId + " does not support specifying key-pairs.", e);
    }

    final List&lt;List&lt;String&gt;&gt; launchedNodesAddresses = new ArrayList&lt;&gt;();
    try {
        // Launch the instances...
        Set&lt;? extends NodeMetadata&gt; launchedNodesMetadata = compute.createNodesInGroup(groupName, numVMs, template);

        // Collect the addresses ...
        for (NodeMetadata nodeMetadata : launchedNodesMetadata) {
            launchedNodesAddresses.add(new ArrayList&lt;&gt;(nodeMetadata.getPublicAddresses()));
        }
    } catch (RunNodesException e) {
        throw new IllegalStateException("Nodes could not be created.", e);
    }

    return launchedNodesAddresses;
}
</code></pre>

The input parameters of the method are:

<ul>
<li><u>providerId</u> - a JClouds specific ID of the provider (AWS, RightScale etc.);</li>
<li><u>userName</u> - the user name for the provider;</li>
<li><u>password</u> - the password or secret key;</li>
<li><u>locationId</u> - a JClouds specific ID of the location of the cloud data centre site;</li>
<li><u>imageId</u> - the ID of the VM Image or AMI in AWS;</li>
<li><u>hardwareId</u> - the type of the VM (e.g. m1.small);</li>
<li><u>securityGroupName</u> - the name of the predefined security group;</li>
<li><u>keyPairName</u> - the name of the predefined key-pair;</li>
<li><u>groupName</u> - a name pattern for the newly created VMs. <u>Must be lower case</u>;</li>
<li><u>numVMs</u> - how many VMs you want to create at once. If 1 - a single VM is created;</li>
<li><u>imageOwnerIdFilter</u> - by default some providers do not list private VM images. Thus you need to specify a custom filter/query that will make them list your private images.</li>
</ul>

In the next section we'll see how all these parameters can be specified.

The above code is pretty self-evident and follows the standard JClouds templates. The first interesting point is that we need to override the list of available VM images (line 19) with a custom query, so that we can use our own private VM image. Secondly JClouds does not support specifying key-pairs for all cloud providers and hence the "keyPair" method is not present in any base class. To avoid using provider specific <u>ComputeService</u> implementations we dynamically inspect if the current provider supports key-pairs (lines 35-36).

As a result the method returns a list of the addresses for each instantiated VM.

<h1>Running in AWS</h1>

The above method is generic and is not bound to AWS EC2&#46; In order to run it on EC2 we need to specify the appropriate parameters as in the following code sample:

<pre><code class="java">String providerId = "aws-ec2";
String accesskeyid = "...";
String secretkey = "...";
String imageOwnerId = "...";
String locationId = "ap-southeast-2a";
String imageId = "ap-southeast-2/ami-XXX";
String hardwareId = org.jclouds.ec2.domain.InstanceType.T1_MICRO;
String securityGroupName = "SecGroupName";
String keyPairName = "KeyPairName";
String groupName = "groupname"; // Must be lower case
int numVMs = 1;

Properties imageOwnerIdFilter = new Properties();
imageOwnerIdFilter.setProperty(
    "jclouds.ec2.ami-query", "owner-id=" +
    imageOwnerId +
    ";state=available;image-type=machine");

List&lt;List&lt;String&gt;&gt; launchedNodesAddresses = launchInstances(providerId,
    accesskeyid,
    secretkey,
    locationId,
    imageId,
    hardwareId,
    securityGroupName,
    keyPairName,
    groupName,
    numVMs,
    imageOwnerIdFilter);

System.out.println(launchedNodesAddresses);
</code></pre>

Note that in the above code we use the AWS region as a part of the image ID (line 6). This is a requirement for EC2&#46; Also we constructed an AWS specific image query with the image owner id as a parameter (line 14).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>226</wp:post_id>
		<wp:post_date><![CDATA[2014-07-31 02:25:32]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-07-30 15:25:32]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[starting-vm-with-custom-image-security-group-and-key-pair-via-jclouds]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="aws"><![CDATA[aws]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="jclouds"><![CDATA[jclouds]]></category>
		<category domain="category" nicename="miscellaneous"><![CDATA[Miscellaneous]]></category>
		<category domain="post_tag" nicename="virtual-machine"><![CDATA[virtual machine]]></category>
		<category domain="post_tag" nicename="vm"><![CDATA[VM]]></category>
		<category domain="post_tag" nicename="vm-image"><![CDATA[VM Image]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[geo_public]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_pending]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_google_plus_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/116873873608085229608/posts/FueAkNe8HMb]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_external]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"116873873608085229608";b:1;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_user]]></wp:meta_key>
			<wp:meta_value><![CDATA[nikolaygrozev]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://t.co/0IkijBbvrM]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_linkedin_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Advanced Automated CloudStone Setup in Ubuntu VMs [Part 2]</title>
		<link>http://www.nikgrozev.org/2014/06/02/advanced-automated-cloudstone-setup-in-ubuntu-vms-part-2/</link>
		<pubDate>Mon, 02 Jun 2014 11:31:06 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://nikolaygrozev.wordpress.com/?p=227</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Introduction</h1>

In a <a href="www.nikgrozev.net/2014/05/10/automated-cloudstone-setup-in-ubuntu-vms/">previous post</a> I described a set of scripts for automatic installation of the <a href="http://parsa.epfl.ch/cloudsuite/web.html">CloudStone</a> web benchmark, part of the <a href="http://parsa.epfl.ch/cloudsuite/cloudsuite.html" title="CloudStone 2.0">CloudSuite 2.0</a> suite. They set up CloudStone in its standard topology - i.e. a workload driver/client, a web/app server and a databse server. While this is sufficient to explore the servers' utilisation under different workloads, it is not enough to test its behaviour under various autoscaling and load balancing approaches, as it has a single web server.

This post covers how to achieve a <u>more advanced CloudStone</u> deployment with a dedicated load balancer "<em>in front of</em>" the web server, so that new web servers can be added dynamically. To accommodate multiple web servers we also need a central repository for the media <u>filestore</u>, which is shared across all of them. Thus we use a dedicated Network File System (NFS) server to host the <em><u>filestore</u></em>.

Again the installation is automated with a set of scripts, which have been tested in Amazon AWS. In principle they should also work in other Infrastructure as a Service (IaaS) environments, as long they support 64bit Ubuntu 14.04 virtual machines.

<h1>SetUp Overview</h1>

Unlike the standard CloudStone deployment, now we'll need two more Virtual Machines - (i) a load balancer and (ii) a NFS server. Thus overall we'll need the following <u>64bit Ubuntu 14.04</u> VMs:

<ul>
<li>Client/Driver VM - drives/runs the workload (i.e. emulated users' requests) to the load balancer.</li>
<li>Load balancer VM - redirects the requests to a set of web servers, using a HAProxy load balancer.</li>
<li>Web/App server - serves users' requests in a Nginx web server. Accesses the the <em><u>filestore</u></em> of media files hosted on the NFS server.</li>
<li>NFS server - hosts the filestore on its file system, and shares it trough NFS. <u>Must have significant disk space!</u></li>
<li>DB server - hosts a MySql server and a geocoding application.</li>
</ul>

The client uses <a href="https://github.com/akara/faban">Faban</a> to set up and monitor the load balancer, DB and the NFS servers, through SSH and Java RMI - see the diagram. Note that in this setting the Client VM does not monitor the web server VM. In other words the client does not "know" of its existence, and only sees the load balancer as its endpoint web server. This allows us to dynamically provision more instances of the web server VM and to transparently associate them with the load balancer.

[caption id="attachment_256" align="aligncenter" width="640"]<img src="http://www.nikgrozev.org/wp-content/uploads/2014/06/cloudstoneoverviewwithloadbalancer1.png" alt="CloudStone Architecture with a load balancer and a NFS server" width="640" class="size-full wp-image-256" /> CloudStone Architecture with a load balancer and a NFS server[/caption]

<h1>Prerequisites</h1>

To be on the safe side I'll repeat the <u><span style="color:#993300;text-decoration:underline;"><strong>Security Notice!</strong></span></u> from the previous CloudStone post. CloudStone implicitly requires that all VMs can <em>ping</em> each other and connect to each other at random ports. Thus you should create a separate firewall setting (i.e. a Security Group), which allows this and which is <u>used only for running CloudStone</u>. The following screenshot shows the security group used in this tutorial, which allows pinging and access to all TCP ports from anywhere. Furthermore, CloudStone assumes that all machines can ssh into each other without any prompts. Hence our scripts need to copy the key (i.e. the <u>_pem_</u> file) across all machines. Thus it is advised to <u>create a new pem file only for running CloudStone</u>.

[caption id="attachment_171" align="aligncenter" width="640"]<img src="http://www.nikgrozev.org/wp-content/uploads/2014/05/securitygroup-1024x538.png" alt="CloudStone security Group in AWS" width="640" class="size-large wp-image-171" /> CloudStone security Group in AWS[/caption]

Before starting the setup, you should create 5 VM instances running <strong><u>64 bit Ubuntu 14.04</u></strong> – the client, the load balancer, the web, NFS, and the DB servers. They should be configured with a permissive Security Group and using the same dedicated <em>pem</em> file, as described above. The NFS server VM should have at least <u>200GB mounted disk storage</u> in order to host the <em>filestore</em> for significant workloads. In AWS EC2, you could just increase the root EBS volume size to 1TB when starting the NFS Server VM from the AWS web interface.

You should have one more Linux machine, which will guide the installation process. We will call it the “<u>_Installer_</u>” machine. This could be just a PC/laptop or a dedicated VM in the cloud. It uses SSH and SCP to configure appropriately and start all servers. The next diagram depicts the setup topology.

[caption id="attachment_235" align="aligncenter" width="640"]<img src="http://www.nikgrozev.org/wp-content/uploads/2014/06/cloudstoneinstallationtopologywithloadbalancer.png" alt="The installer Linux machine uses SSH and SCP to configure the CloudStone VMs. All CloudStone VMs run 64bit Ubuntu 14.04, have the same pem file (e.g. CloudStone.pem) and the same permissive security group (e.g. named CloudStone)" width="640" class="size-full wp-image-235" /> The installer Linux machine uses SSH and SCP to configure the CloudStone VMs. All CloudStone VMs run 64bit Ubuntu 14.04, have the same pem file (e.g. CloudStone.pem) and the same permissive security group (e.g. named CloudStone)[/caption]

<h1>Installation</h1>

Once all of this is done you can start the installation. The installation scripts are hosted in a <a href="https://github.com/nikolayg/CloudStoneSetupOnUbuntuAdvanced">GtiHub project called CloudStoneSetupOnUbuntuAdvanced</a>, which is a fork of the original installation scripts project. From the installer machine you should either clone via git or download and extract this project. Then you need to copy your pem file (e.g. CloudStone.pem) in the scripts' directory.

Next you need to edit <u>main_installer.sh</u> with the DNS or IP addresses of the client, load balancer (lb), app/web server (as) and database server (db) VMs. Additionally you can put the name of your pem file, if different from CloudStone.pem. You can also put an initial load scale, used to compute how many users the system should be populated with. For more info on the load scale parameter look at the <a href="http://parsa.epfl.ch/cloudsuite/web.html">official CloudStone documentation</a>. Your <u>main_installer.sh</u> should start with something like this:

<pre><code class="bash">clientIPAddress=ec2-XX-XX-XX-XX.ap-southeast-2.compute.amazonaws.com
lbIPAddress=ec2-XX-XX-XX-XX.ap-southeast-2.compute.amazonaws.com
asIPAddress=ec2-XX-XX-XX-XX.ap-southeast-2.compute.amazonaws.com
dbIPAddress=ec2-XX-XX-XX-XX.ap-southeast-2.compute.amazonaws.com
nfsIPAddress=ec2-XX-XX-XX-XX.ap-southeast-2.compute.amazonaws.com

pemFile=CloudStone.pem
userName=ubuntu

load_scale=100
</code></pre>

Now you can start the installation by typing the following from the scripts folder:

<pre><code class="bash">sudo bash main_installer.sh
</code></pre>

In the beginning, you may be prompted to accept the addition of the 5 VMs to the list of known ssh hosts. Installation may take quite some time! In the meantime you can monitor the following installation logs on the installer machine:

<ul>
<li><u>~/client-setup.log</u> – the log for installing the Client VM. The first to be written.</li>
<li><u>~/nfs-setup.log</u> – the log for installing the NFS server VM. Written after the installation of the Client VM.</li>
<li><u>~/lb-setup.log</u> – the log for installing the load balancer VM. Written after the installation of the NFS VM.</li>
<li><u>~/as-setup.log</u> – the log for installing the Web/AS VM. Written after the installation of the LB VM.</li>
<li><u>~/db-setup.log</u> – the log for installing the DB VM. Written after the installation of the Web/AS VM.</li>
</ul>

If all is successful you shouldn’t see error messages in the logs and each log file should end with an “INSTALLATION SUMMARY” section similar to the following one:

<pre><code>======== ======== INSTALLATION SUMMARY ======== ========

$JAVA_HOME:     /usr/lib/jvm/java-6-openjdk-amd64
$JDK_HOME:      /usr/lib/jvm/java-6-openjdk-amd64
$OLIO_HOME:     /cloudstone/apache-olio-php-src-0.2
$FABAN_HOME:    /cloudstone/faban
$APP_DIR:       
$FILESTORE:     
$NFS_MOUNT_PATH:
$CATALINA_HOME: /cloudstone/apache-tomcat-6.0.35
$GEOCODER_HOME: /cloudstone/geocoderhome
</code></pre>

You'll need these environment variables' values to run CloudStone.

<h1>Running CloudStone</h1>

Just like in the <a href="www.nikgrozev.net/2014/05/10/automated-cloudstone-setup-in-ubuntu-vms/">previous post</a>, to run CloudStone you need to point your web browser to <u>http:// [ client-vm-address ] :9980</u> to see the following screen:

[caption id="attachment_179" align="aligncenter" width="640"]<img src="http://www.nikgrozev.org/wp-content/uploads/2014/05/fabanoliomainscreen-1024x703.png" alt="Faban Main Screen" width="640" class="size-large wp-image-179" /> Faban Main Screen[/caption]

Then you need to schedule a new run, as in the previous post. The only differences are that (i) you need to use the load balancer address, instead of the web server and (ii) you need to specify the NFS server as a filestore server. The following screenshots give an overview:

[gallery ids="241,242,262,239"]

After setting up the benchmark click OK to start it. You can view the benchmark progress and eventually the result from the “View Results” menu.

<h1>Scaling Up</h1>

At this point the current set-up has a single web/app server. We can easily provision a new one and associate with the load balancer. To achieve this, we firstly need to replicate the web/app server VM. In AWS EC2, you can create a VM image from it (the so called AMI) and then create new VMs out of it. Other infrastructure as a service (IaaS) clouds have similar functionality as well. Of course, the new VM should have the same security group as the others.

After the new VM is created from the image it will automatically start its web server and will mount its NFS storage upon boot, so you don't need to take care or that. However, you still need to associate it with the load balancer. Lets assume the IP/DNS address of the initial/old web/app server is <u>asIP1</u> and the new one's is <u>asIP2</u>. Then you need to login into the load balancer VM and from the home directory issue the following commands:

<pre><code class="bash"><br /># Import utility functions
. functions.sh

# Load balance with Round Robin policy with 1:1 ratio
resetLoadBalancer asIP1 1 asIP2 1

# Reload the load balancer's configuration
sudo service haproxy reload
</code></pre>

Of course in the above <u>asIP1</u> and <u>asIP2</u>, should be replaced with the corresponding addresses. After that, the load balancer will evenly distribute the request to the two web servers. You can also implement weighted round robin (e.g. with 2:3 ratio) by simply replacing the invocation to resetLoadBalancer with:

<pre><code class="bash">....
resetLoadBalancer asIP1 2 asIP2 3
...
</code></pre>

Similarly, if you provision a 3rd web/app server <u>asIP3</u> and want to load balance with ratio 2:3:4, you should call:

<pre><code class="bash">...
resetLoadBalancer asIP1 2 asIP2 3 asIP3 4
...
</code></pre>

<h1>Under the Cover</h1>

I will not go into the implementation details of the scripts, as I've already discussed most of it in the <a href="www.nikgrozev.net/2014/05/10/automated-cloudstone-setup-in-ubuntu-vms/">previous post</a>. In essence the <u>main_installer.sh</u> script orchestrates the installation by transferring configuration files and installation scripts to all VMs. On each VM the installation is performed by a separate bash script. These are:

<ul>
<li><u>client-setup.sh</u> – executed on the client VM. Its log is redirected to <em>~/client-setup.log</em> on the installer machine.</li>
<li><u>lb-setup.sh</u> – executed on the load balancer VM. Its log is redirected to <em>~/lb-setup.log</em> on the installer machine.</li>
<li><u>nfs-setup.sh</u> – executed on the NFS server VM. Its log is redirected to <em>~/nfs-setup.log</em> on the installer machine.</li>
<li><u>as-setup.sh</u> – executed on the web/application server VM. Unlike the <a href="www.nikgrozev.net/2014/05/10/automated-cloudstone-setup-in-ubuntu-vms/">previous scripts</a>, it mounts the filestore as a NFS volume, instead of hosting it locally. Its log is redirected to <em>~/as-setup.log</em> on the installer machine.</li>
<li><u>db-setup.sh</u> – executed on the DB VM. Its log is redirected to <em>~/db-setup.log</em> on the installer machine.</li>
</ul>

Common installation logic is still implemented in <u>base-setup.sh</u> and <u>base-server.sh</u>. A lot of common and reusable functions are stored in <u>functions.sh</u>. The script <u>as-image-start.sh</u> is set to automatically execute at boot time of the web/app server VM and starts it web server and NFS mounting.

A major problem in the set up of the load balancer was the stateful nature of the Olio workload. Olio maintains session data in the web server's memory for every user. Thus requests from the same user have to be redirected by the load balancer to the same server (a policy known as <em><u>sticky load balancing</u></em>). Usually this is achieved through a mechanism called <u>ip-hashing</u>, which essentially means that HTTP requests coming from the same IP address are redirected to the same web server. However, in CloudStone all requests originate from the faban driver/client and thus have the same source IP address.

That's why we use the HAProxy load balancer. Unlike other load balancers (e.g. Nginx) it supports cookie-based load balancing. Upon session creation, the web server installs an identifying cookie in the client, which is later on used by the load balancer to dispatch the subsequent requests to the appropriate server.

<h1>References</h1>

Official installation documentation:

<ul>
<li><a href="http://parsa.epfl.ch/cloudsuite/web.html">http://parsa.epfl.ch/cloudsuite/web.html</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>227</wp:post_id>
		<wp:post_date><![CDATA[2014-06-02 22:31:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-02 11:31:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[advanced-automated-cloudstone-setup-in-ubuntu-vms-part-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bash"><![CDATA[Bash]]></category>
		<category domain="post_tag" nicename="benchmark"><![CDATA[Benchmark]]></category>
		<category domain="category" nicename="cloudstone"><![CDATA[CloudStone]]></category>
		<category domain="post_tag" nicename="cloudstone"><![CDATA[CloudStone]]></category>
		<category domain="post_tag" nicename="load-balancer"><![CDATA[Load Balancer]]></category>
		<category domain="post_tag" nicename="web-app"><![CDATA[Web App]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[geo_public]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_pending]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_google_plus_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/116873873608085229608/posts/1W8SSVVGWkM]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_external]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"116873873608085229608";b:1;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_user]]></wp:meta_key>
			<wp:meta_value><![CDATA[nikolaygrozev]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://t.co/ttnYreeQPJ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_linkedin_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=30071619&stype=M&topic=5879192300617220096&type=U&a=P1cX]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_9fb38edd2100d485216fdfe76095f139]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_899a59a8e96262ecdba954a0cb39cbc7]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[230]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>31</wp:comment_id>
			<wp:comment_author><![CDATA[Brian]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[bc@marlin.ie]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[188.141.41.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-07-12 01:15:41]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-07-11 14:15:41]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Nikolay,</p>

<p>thanks for posting this. it really simplifies the CloudStone install and fixes a few problems that took me a while to track down (ping -s !)
I ran the installation on AWS and the load balancing works great.
I test with a load of 750 users with varying numbers of  application servers (1 - 3) behind the load balancer however I always get approx the same throughput. Is this correct? 
I would expect to see better throughput with more application servers...</p>

<p>Brian.</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1405088141]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-07-11 14:15:42]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[25295944728]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1405177667]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1405177667]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1405177668.41094207763671875;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1405088141.2538869380950927734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[94.156.120.202]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-07-13 02:16:42]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-07-12 15:16:42]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Brian,</p>

<p>I'm glad you find the scripts useful.</p>

<p>I think in tour case the issue is with the performance of the other servers, which can not scale up horizontally. I would suggest you to profile the DB Server, client/driver and the load balancer VMs with something like top,htop or mpstat and see if they get overloaded during execution. Once you find the culprit you can provision a larger VM for it.</p>

<p>In my experience CloudStone works for up to 300-400 users if you use m3.medium VMs for the client, DB and load balancer. For 750, I guess you'll have to go with much larger instances.</p>

<p>I hope that helps.</p>

<p>Nikolay</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>31</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1405178202]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1405178202.35731792449951171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[25296110982]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1405178202]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-07-12 15:16:43]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33</wp:comment_id>
			<wp:comment_author><![CDATA[Brian]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[bc@marlin.ie]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[188.141.41.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-07-14 23:36:22]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-07-14 12:36:22]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Thanks Nikolay. It's very helpful in that I know which hardware you're using and the upper limits of that hardware (300 -400)
I'm using similar AWS instances, m3.medium for each VM with the exception of the client (faban) which is m3.large. The database was setup with a load of 750 concurrent users so I select 750 users (data servers tab). I have done some monitoring of the db, nfs server, client and load balancer and they appear ok (post ramp up).</p>

<p>If I reduce the number of concurrent users to 125 (driver tab), the results still show as failed. 
The UIDriver throughput remains the same regardless of whether I utilise 1 or 3 application servers behind the lb. I have confirmed that the lb is working as expected.
My question is did you see similiar results? I would expect throughput to improve with the addition of application servers?</p>

<p>Thanks again,</p>

<p>Brian.</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>32</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1405341382]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1405341382.9344379901885986328125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[25335903932]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1405341383]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-07-14 12:36:24]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>34</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[109.160.98.111]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-07-16 03:32:37]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-07-15 16:32:37]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>HI Brian,</p>

<p>In my experiments, the results are often reported as "Failed" in the Faban web interface, because some (of the many) thresholds is exceeded with just a little bit. If you start getting failures for more than 3-4 characteristics, then I would expect you have performance degradation.</p>

<p>To be honest, I haven't experimented with the throughput much. I would expect that adding more web servers will be beneficial in terms of throughput, only if the web servers were overloaded/saturated before that.</p>

<p>I hope this helps.</p>

<p>Nikolay</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>33</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1405441957]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1405441957.6041080951690673828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[25368109967]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1405441957]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-07-15 16:32:38]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>35</wp:comment_id>
			<wp:comment_author><![CDATA[vallabh]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[vallabh.kankani@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[139.62.164.187]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-04-07 07:48:53]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-04-06 20:48:53]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Nikolay,</p>

<p>Is it possible to get significantly different response time while almost the same throughput for same number of concurrent users on different clouds? The computational power (in GHz) is different in these clouds. But I am not sure why the throughput remains the same and response time differs significantly. Does throughput only means the number of requests per second and not the response received by these requests?</p>

<p>Vallabh</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1429797792]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1429797792.271359920501708984375;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[9868178601]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1429797792]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-04-06 20:48:53]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1428358101.3950569629669189453125;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1428353334.3355159759521484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>36</wp:comment_id>
			<wp:comment_author><![CDATA[vallabh]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[vallabh.kankani@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[139.62.164.187]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-04-07 07:51:33]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-04-06 20:51:33]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>I am using only one web application server in all the clouds.</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1428358101.4848840236663818359375;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1429797783]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1428353494.7662699222564697265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-04-06 20:51:33]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[9868174495]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1429797783]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1429797783.2413899898529052734375;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>37</wp:comment_id>
			<wp:comment_author><![CDATA[atekehkamali]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[atekeh.kamali@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://gravatar.com/atekehkamali</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[198.50.172.90]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-08-11 23:45:19]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-08-11 12:45:19]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>hi dear Nikolay
I’m looking for another reference for CloudStone. Would you please help me to find out if there is any book, essay, paper or any other source that could help me to write a technical report about cloudStone?</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439297120.7788600921630859375;s:5:"event";s:9:"check-ham";s:4:"user";s:12:"atekehkamali";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[13620159441]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1439297364]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1439297357]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439297357.526751041412353515625;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439297364.1422879695892333984375;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439297361.141088008880615234375;s:5:"event";s:17:"status-unapproved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-08-11 12:45:19]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>38</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.168.76.2]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-08-11 23:53:52]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-08-11 12:53:52]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi,</p>

<p>You may want to see the following paper:
    Will Sobel, Shanti Subramanyam, Akara Sucharitakul, Jimmy Nguyen, Hubert Wong, Arthur Klepchukov, Sheetal Patil, Armando Fox, and David Patterson. 2008. Cloudstone: MultiPlatform, Multi-Language Benchmark and Measurement Tools for Web 2.0. In Proceedings of Cloud Computing and Its Applications (CCA ’08)</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>37</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1439297632]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1439297632]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1439297632.299365997314453125;s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[13620264072]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-08-11 12:53:52]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>39</wp:comment_id>
			<wp:comment_author><![CDATA[Seyyed]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sjavadi@cs.stonybrook.edu]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[130.245.127.238]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-10-27 02:31:35]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-10-26 15:31:35]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi,</p>

<p>Thank you very much for the nice article.
Actually I am trying to install cloudsuite in a private cloud test bed (openstack). The setup components are as follows:
1- Faban driver + load balancer (haproxy)
2- three web server nodes (nginx) and memcached installed and enabled for each
3- Mysql DB and Geocoder
4- NFS server to store the filestore
I have a very weird issue with my setup. I am using your provided config file for paproxy. If I use only one or even 2 of the web servers via the load balancer, the responses time for the scale of 500 are low and acceptable (50 ms in avg and 100 OPS/Sec). However, when I am using all three web server virtual machines in the load balancer, all the response times are very high (5 seconds in avg) and the result shows 57 ops/sec. I repeated the experiments several times and got the same result. This is very weird and I cannot gust why this is happening. 
Could you please let me know what can be the possible reasons for this weird behaviour?</p>

<p>Seyyed</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1445873496.3094699382781982421875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[16235238890]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1445894369]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1445894369]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1445878178.5863740444183349609375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1445894369.103043079376220703125;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-10-26 15:31:35]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>CloudSim and CloudSimEx [Part 1]</title>
		<link>http://www.nikgrozev.org/2014/06/08/cloudsim-and-cloudsimex-part-1/</link>
		<pubDate>Sat, 07 Jun 2014 13:51:53 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://nikolaygrozev.wordpress.com/?p=259</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Introduction</h1>

<a href="http://www.cloudbus.org/cloudsim/">CloudSim</a> is one of the most popular Cloud infrastructure simulators and is used throughout academia and industry. Being one of its maintainers I often get emails with requests for new features. I also get quite a few emails about several CloudSim extensions that we <a href="https://237a3a5033b233626a9879c6495ec440cffa62db.googledrive.com/host/0B6RdIi8F-v-lbE0tQTFwUktmaWM/pdf/Performance%20Modelling%20and%20Simulation%20of%20Three-Tier%20Applications%20in%20Cloud%20and%20Multi-Cloud%20Environments.pdf">published a paper about (pdf)</a> last year. Thus I've started the <a href="https://github.com/Cloudslab/CloudSimEx">CloudSimEx</a> project, which brings some of these extensions together and in a series of posts I'll demo some of its functionalities.

<strong><u>So what is CloudSimEx</u>?</strong> CloudSimEx is a set of CloudSim extensions making simulation development easier and enabling the modelling of new types of applications, not supported by CloudSim. Currently the following features are included:

<ul>
<li>Web session modelling;</li>
<li>Better logging utilities;</li>
<li>Utilities for generating CSV files for statistical analysis;</li>
<li>Automatic id generation;</li>
<li>Modelling of disk operations;</li>
<li>Utilities for running multiple experiments in parallel;</li>
<li>Utilities for modelling network latencies;</li>
<li>MapReduce simulation.</li>
</ul>

In this part I'll explain how to set up CloudSim and CloudSimEx in Eclipse and how to use some of its base utility functionalities.

<h1>Prerequisites</h1>

Before following this tutorial you should have JDK 7 and Maven 3.2 or later installed on your system. <del>CloudSim currently can not be built with Java 8, because of <a href="https://cwiki.apache.org/confluence/display/MAVEN/Java+8+Upgrade">some issues in the integration of Java 8 and Maven</a>.</del> <strong><span style="color:#ff0000;">Edit</u>:</strong> Both CloudSim and CloudSimEx now compile with Java 7 and 8 as well.

Installation instructions for Java 7 and Maven can be found here:

<ul>
<li><a href="http://docs.oracle.com/javase/7/docs/webnotes/install/">http://docs.oracle.com/javase/7/docs/webnotes/install/</a></li>
<li><a href="http://maven.apache.org/download.cgi#Installation">http://maven.apache.org/download.cgi#Installation</a></li>
</ul>

You should also have installed <a href="https://www.eclipse.org/downloads/">Eclipse IDE Java EE Developers</a> and SVN and GIT clients. If you're unfamiliar with CloudSim itself, you can look at <a href="http://www.cloudbus.org/cloudsim/examples.html">these examples</a>.

<h1>CloudSim SetUp</h1>

As a first step we need to get CloudSim's code and build it. Navigate to a folder of choice and issue the following commands:

<pre><code>git clone https://github.com/Cloudslab/cloudsim.git
cd cloudsim
mvn clean install
</code></pre>

This should take some time and in the end you should see the resounding "BUILD SUCCESSFUL".

Before we open CloudSim in Eclipse, we need make a few settings in the IDE. By default Eclipse comes with an embedded installation of Maven, which is different that the one on the operating system. We need to tell Eclipse to use the already installed one. Otherwise building from the IDE and the terminal will be two different things. You can skip the next step if you have already done this. If not go to <u>Window</u> -> <u>Preferences</u> -> <u>Maven</u> -> <u>Installations</u> and add the location of your maven installation:

[caption id="attachment_273" align="aligncenter" width="340"]<img src="http://www.nikgrozev.org/wp-content/uploads/2014/06/mavenineclipse.png" alt="Maven Setup in Eclipse" width="340" class="size-full wp-image-273" /> Maven Setup in Eclipse[/caption]

Now we can import the CloudSim project into Eclipse. Go to <u>File</u> -> <u>Import</u> -> <u>Existing Maven Projects</u> and follow the wizard. You can use the following screenshots as a guideline:

[gallery ids="278,277,276,275"]

This should open the CloudSim projects in Eclipse.

<h1>CloudSimEx SetUp</h1>

After CloudSim is set, we can continue to set up CloudSimEx as well. The following commands do just that.

<pre><code>git clone https://github.com/Cloudslab/CloudSimEx.git
cd CloudSimEx
mvn clean install
</code></pre>

Again, if all is fine you should see "BUILD SUCCESSFUL" int your terminal. Next you can open the CloudSimEx projects in Eclipse. Again you need to go to <u>File</u> -> <u>Import</u> -> <u>Existing Maven Projects</u> and follow the wizard, as we did with CloudSim.

<h1>Test Project</h1>

Now that CloudSim and CloudSimEx are set up we can create a simple test project, in which we can experiment with them. Go to <u>File</u> -> <u>New</u> -> <u>Project...</u> -> <u>Maven Project</u> and follow the wizard to create a simple maven project. You can use the following screeshots as a guideline:

[gallery ids="286,284,285"]

After the project is created, open its <u>pom.xml</u> file and add the following dependencies inside the <u><project></u> section:

<pre><code class="xml">&lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.cloudbus.cloudsim&lt;/groupId&gt;
        &lt;artifactId&gt;cloudsim&lt;/artifactId&gt;
        &lt;version&gt;3.1-SNAPSHOT&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.cloudbus&lt;/groupId&gt;
        &lt;artifactId&gt;cloudsimex-core&lt;/artifactId&gt;
        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.cloudbus&lt;/groupId&gt;
        &lt;artifactId&gt;cloudsimex-geolocation&lt;/artifactId&gt;
        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.cloudbus&lt;/groupId&gt;
        &lt;artifactId&gt;cloudsimex-web&lt;/artifactId&gt;
        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.cloudbus&lt;/groupId&gt;
        &lt;artifactId&gt;cloudsimex-mapreduce&lt;/artifactId&gt;
        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
    &lt;/dependency&gt;
&lt;/dependencies&gt;
</code></pre>

Finally, you should make sure the Eclipse project is configured to use Java 7. Right click on the test project in the explorer, select <u>Properties</u>, and ensure that the Java compiler compliance level is set to 1.7, as in the following screenshot:

[caption id="attachment_307" align="aligncenter" width="340"]<img src="http://www.nikgrozev.org/wp-content/uploads/2014/06/test-project-properties.png" alt="Test Project Properties" width="340" class="size-full wp-image-307" /> Test Project Properties[/caption]

Now you can create a class with a main method in the new project and it can import all CloudSim and CloudSimEx classes. You're ready to go!

<h1>ID generation</h1>

CloudSim requires the end user to provide a lot of numerical ids for the simulation entities (e.g. cloudlets, VMs). This tends to be error prone. If you provide duplicate ids for entities of the same type (e.g. cloudlets) this will result in an insidious bug, as CloudSim won't give any warning. Moreover in complex simulations virtual machines and cloudlets (i.e. jobs) need to be created dynamically, and thus you'll need to maintain global counters for id generation.

To solve the problem I've created the simple utility class <a href="https://github.com/Cloudslab/CloudSimEx/blob/master/cloudsimex-core/src/main/java/org/cloudbus/cloudsim/ex/util/Id.java">org.cloudbus.cloudsim.ex.util.Id</a>. It allows you to create unique ids per simulation entity type. For example the following code creates three cloudlets with unique ids:

<pre><code class="java">Cloudlet cl1 = new Cloudlet(Id.pollId(Cloudlet.class), ... );
Cloudlet cl2 = new NetworkCloudlet(Id.pollId(NetworkCloudlet.class), ... );
Cloudlet cl3 = new NetworkCloudlet(Id.pollId(Cloudlet.class), ... );

System.out.println(cl1.getCloudletId());   // Prints 1
System.out.println(cl2.getCloudletId());   // Prints 2
System.out.println(cl3.getCloudletId());   // Prints 3
</code></pre>

Note that the exact type that you pass to Id.pollId( ) does not matter, as long as it is a subtype of a CloudSim entity - e.g. cloudlet, VM or host. The implementation will automatically check if the type you pass is a cloudlet or something else and will return an appropriate id. For example In the above code it didn't matter if we call Id.pollId(Cloudlet.class) or Id.pollId(NetworkCloudlet.class), it would return a unique cloudlet id in all cases.

If you're developing classes that extend CloudSim entities, you can eliminate the need for ids altogether, by redefining their constructors. For example, the following code creates a custom cloudlet, that automatically creates its own id in the costructor, and its users won't need to bother with ids.

<pre><code class="java">public class MyCloudlet extends Cloudlet {
    public MyCloudlet(...) {
        super(Id.pollId(getClass()), ...);
    }
}
</code></pre>

In fact, this is the approach taken in all CloudSimEx classes. Thus in CloudSimEx you don't need to specify your own ids.

<h1>CSV export of objects</h1>

When developing CloudSim simulations people often need to export tabular (i.e. coma separated values or CSV) for further statistical analysis. For example you may want to export data about your jobs'/cloudlets' start, end and execution time in a CSV file, in order to compute statistics or perform numerical analysis with Excel, R, SAS or Matlab. Looping over all objects and their properties, taking care of column padding and so on can be a drag.

Enter the <a href="https://github.com/Cloudslab/CloudSimEx/blob/master/cloudsimex-core/src/main/java/org/cloudbus/cloudsim/ex/util/TextUtil.java">TextUtil</a> class. Converting an object to a CSV line is now just a single line of code. Add another line and you've got yourself a header, as in this example:

<pre><code class="java">Vm vm = new Vm(Id.pollId(Vm.class), .....);
// getCaptionLine - prints a header
System.out.println(TextUtil.getCaptionLine(Vm.class));
// getTxtLine - prints a CSV line
System.out.println(TextUtil.getTxtLine(vm));
</code></pre>

By default TextUtil inspects all the properties (i.e. public no-arg get methods) of the class/object and concatenates them taking into account predefined formatting and padding options. You can modify the list and order of properties for a given class using the <a href="https://github.com/Cloudslab/CloudSimEx/blob/master/cloudsimex-core/src/main/java/org/cloudbus/cloudsim/ex/util/Textualize.java">Textualize</a> annotation. The output of the above is:

<pre><code>BeingInstantiated;     Bw;CloudletScheduler;CurrentAllocatedBw;CurrentAllocatedMips;CurrentAllocatedRam;CurrentAllocatedSize;CurrentRequestedBw;CurrentRequestedMaxMips;CurrentRequestedMips;CurrentRequestedRam;CurrentRequestedTotalMips;Host;     Id;InMigration;      Mips;NumberOfPes;    Ram;   Size;StateHistory;                 Uid; UserId;                 Vmm;Class
             true;   1000;   ref&lt;455659002&gt;;                 0;                null;                  0;                   0;              1000;                1000.00;               [...];                512;                  1000.00;null;      4;      false;   1000.00;          1;    512;  10000;       [...];                 0-4;      0;                 Xen;   Vm
</code></pre>

TextUtil automatically converts references, arrays and collections to simple representations, so that the CSV line format is maintained.

Often you don't need all properties of an object in the CSV - you may only need 2 or 3 of them. Again this can be done with a single line of code. You just need to specify the names of the properties when invoking TextUtil:

<pre><code class="java">Vm vm = new Vm(Id.pollId(Vm.class), .....);
String[] props = new String[] { "Bw", "CurrentRequestedRam" };
System.out.println(TextUtil.getCaptionLine(Vm.class, props));
System.out.println(TextUtil.getTxtLine(vm, props));
</code></pre>

This code will only print the "<u>Bw</u>" and "<u>CurrentRequestedRam</u>" properties, defined by the <u>getBw</u> and <u>getCurrentRequestedRam</u> methods:

<pre><code>     Bw;CurrentRequestedRam
   1000;                512
</code></pre>

In all above examples, we used the default delimeter ";". All TextUtil methods are overloaded so that you can specify another delimiter if needed.

Finally, often you may need some derived characteristic/column in the CSV. For example, you may like to have a field in gigabytes instead of megabytes, or you may want to compute the difference between two fields in a new column. TextUtil allows you to define the so-called virtual properties. A virtual property is just a pair - a name and Function (from the <a href="http://code.google.com/p/guava-libraries/">guava</a> library) which defines its value. The following example shows how to define an additional virtual property "CurrentRequestedRamGB" and to print it in conjunction with the regular property "CurrentRequestedRam":

<pre><code class="java">Vm vm = new Vm(Id.pollId(Vm.class), ...);

String[] props = new String[] { "CurrentRequestedRam" };

LinkedHashMap&lt;String, Function&lt;? extends Vm, String&gt;&gt; virtualProps = new LinkedHashMap&lt;&gt;();
virtualProps.put("CurrentRequestedRamGB", new Function&lt;Vm, String&gt;() {
   @Override public String apply(Vm v) {
     return String.valueOf(v.getCurrentRequestedRam() / 1024.0);
   }
});

System.out.println(TextUtil.getCaptionLine(Vm.class, props, virtualProps.keySet()));
System.out.println(TextUtil.getTxtLine(vm, props, virtualProps));
</code></pre>

This prints:

<pre><code>CurrentRequestedRam;CurrentRequestedRamGB
                512;                  0.5
</code></pre>

<h1>Custom Logging</h1>

CloudSim's default <a href="http://code.google.com/p/cloudsim/source/browse/trunk/modules/cloudsim/src/main/java/org/cloudbus/cloudsim/Log.java">Log</a> implementation is designed only to print to the standard output. Hence CloudSimEx introduces a new logger called <a href="https://github.com/Cloudslab/CloudSimEx/blob/master/cloudsimex-core/src/main/java/org/cloudbus/cloudsim/ex/util/CustomLog.java">CustomLog</a>. It follows the same design principle of the original Log, but has several new functionalities. It allows (i) output redirection to a file, (ii) flexible definition of log entry formats. Most importantly it plays well with TextUtil and can be used to easily create CSV files for analysis.

To begin with, you need to configure the logger with a set of properties. You would typically store them in a separate configuration file:

<pre><code class="java">Properties props = new Properties();
try (InputStream is = Files.newInputStream(Paths.get("...your file..."))) {
    props.load(is);
}
CustomLog.configLogger(props);
</code></pre>

The important properties are:

<ul>
<li>FilePath - if present this property has the value of the target log file. If this property is not present, the log is written to the standard output.</li>
<li>LogLevel - each log message has a level. This property identifies the minimal log level that will be printed. Levels are as in standard java logging - see <a href="http://docs.oracle.com/javase/7/docs/api/java/util/logging/Level.html">LogLevel</a>. If this property is not present, a default log level INFO is used.</li>
<li>LogCloudSimClock - a boolean proeprty. If "true" the current CloudSim simulation time will be included in every log entry.</li>
<li>LogReadableSimClock - a boolean property. If "true" the current CloudSim simulation time will be included in every log entry and it will be formatted in the "<em>days:hours:minutes:seconds</em>" format.</li>
<li>LogRealTimeClock - a boolean property. If "true" the actual system/computer time will be included in every log entry.</li>
<li>LogFormat - a list of get method names of the class <a href="http://docs.oracle.com/javase/7/docs/api/java/util/logging/LogRecord.html">LogRecord</a>. It allows you to specify what should compose your log entries. Typically you would specify just "<em><u>getMessage</u></em>" or "<em><u>getLevel;getMessage</u></em>".</li>
<li>ShutStandardLogger - a boolean property. If "true" it will shut CloudSim's standard logger. This is useful, when the standard logger generates too many log messages and causes the simulation execution to slow down significantly.</li>
</ul>

Consider the following example:

<pre><code>FilePath=/mydesktop/log.log
LogLevel=INFO
LogCloudSimClock=true
LogReadableSimClock=false
LogRealTimeClock=true
LogFormat=getMessage
ShutStandardLogger=true
</code></pre>

Given this configuration, CustomLog will output only log entries with level higher than INFO, will print the current time, and the current CloudSim simulation time and will shut the standard CloudSim logger. The output will be written to the file <u>/mydesktop/log.log</u>. Thus if you call:

<pre><code class="java">CustomLog.printf("Hello %s", "World");
</code></pre>

the output in the file will be something like this.

<pre><code>22:42:51          0.00    Hello World
</code></pre>

If all you want to see is the message and not the current time, you need to switch <u>LogCloudSimClock</u> and <u>LogRealTimeClock</u> to "false".

At any point during the simulation you can redirect CustomLog to another file or the standard output, by simply calling one of the following:

<pre><code class="java">// Redirects to stdout ...
CustomLog.redirectToConsole();

// Redirects to a file, overwrites it
CustomLog.redirectToFile("...your file...");

// Redirects to a file, appends to it
CustomLog.redirectToFile("...your file...", true);
</code></pre>

CustomLog has a lot of convenient methods for printing and formatting log messages and you can explore to see what's there. As I mentioned it can use TextUtil to print well formatted CSV files. So if you have a list of objects (e.g. cloudlets or VMs) you can convert them to a CSV with a single line of code, by using the <u>printResults</u> method. The following example demonstrates this:

<pre><code class="java">List &lt;Vm&gt; vms = ......

CustomLog.redirectToFile("... your CSV file ...");
CustomLog.printResults(Vm.class, vms);
</code></pre>

The <u>printResults</u> method is overloaded, so it can take property names and virtual properties, analogously to TextUtil.

<h1>Conclusion</h1>

In this article we just scratched the surface, by introducing CloudSimEx, explaining how to install it and overviewing some of its basic functionalities. In subsequent articles I'll talk about how CloudSimEx allows for I/O operations simulation, web session modelling, running multiple experiments in parallel and utilities for modelling Internet latencies ... so stay tuned :)

<h1>References</h1>

<ul>
<li><a href="http://www.cloudbus.org/cloudsim/">CloudSim official website</a></li>
<li><a href="https://github.com/Cloudslab/CloudSimEx">CloudSimEx on GitHub</a></li>
<li><a href="https://237a3a5033b233626a9879c6495ec440cffa62db.googledrive.com/host/0B6RdIi8F-v-lbE0tQTFwUktmaWM/pdf/Performance%20Modelling%20and%20Simulation%20of%20Three-Tier%20Applications%20in%20Cloud%20and%20Multi-Cloud%20Environments.pdf">Performance Modelling and Simulation of Three-Tier Applications in Cloud and Multi-Cloud Environments [PDF]</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>259</wp:post_id>
		<wp:post_date><![CDATA[2014-06-08 00:51:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-07 13:51:53]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cloudsim-and-cloudsimex-part-1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cloudsim"><![CDATA[CloudSim]]></category>
		<category domain="category" nicename="cloudsimex"><![CDATA[CloudSimEx]]></category>
		<category domain="post_tag" nicename="cloudsimex"><![CDATA[CloudSimEx]]></category>
		<category domain="post_tag" nicename="guava"><![CDATA[Guava]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="maven"><![CDATA[Maven]]></category>
		<category domain="post_tag" nicename="simulation"><![CDATA[Simulation]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[geo_public]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_pending]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_linkedin_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=30071619&stype=M&topic=5881039668681654272&type=U&a=g0SZ]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_user]]></wp:meta_key>
			<wp:meta_value><![CDATA[nikolaygrozev]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://t.co/icRXPw24iH]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_external]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:55056044;b:1;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_894ecfab9a23b38c3e01119c6340cc0c]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_03b04f06f0d25833092ddc3b7c3a5e6e]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_1d95a680aabc3f514b15b9c557001855]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_b5547f81af0c08cb57eb48c597e3c54d]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>40</wp:comment_id>
			<wp:comment_author><![CDATA[CloudSim and CloudSimEx [Part 2] &#8211; Disk opeartions | Nikolay Grozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com/2014/06/13/cloudsim-and-cloudsimex-part-2-disk-opeartions/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.0.83.90]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-06-13 03:38:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-06-12 16:38:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>[&#8230;] a previous post I introduced the CloudSimEx project featuring a set of CloudSim extensions and I discussed how to [&#8230;]</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1402799008]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1402799008.6708691120147705078125;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1402591130.3014791011810302734375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-06-12 16:39:11]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>41</wp:comment_id>
			<wp:comment_author><![CDATA[Samuel kao]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[citysite102@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[140.118.206.166]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-07-17 01:25:24]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-07-16 14:25:24]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Excuse me, I'm new to the cloudsimex platform! I follow all the set up step above till the Test project, but I'm confused about that the Cloudsimex example cannot be run in the Eclipse while the cloudsim example can be run by clicking the run button, when I try to run the cloudsimex example it will show up the "Error exist in required project(s) cloudsimex-core,cloudsimex-geolocation..." and then in the console will show up "exception in thread "main"...", I check all the step again and make sure that everything works fine, please help me about this, really sorry to bother you that much!</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-07-16 14:25:24]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1405520724.887342929840087890625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1405521809]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1405521809]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1405521809.9426419734954833984375;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>42</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[109.160.98.111]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-07-17 01:50:56]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-07-16 14:50:56]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Samuel,</p>

<p>Could you please provide more information about your environment (i.e. versions of Java, Eclipse and Maven), the error messages of the required project and the stack trace.</p>

<p>Nikolay</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>41</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-07-16 14:50:56]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1405522256]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1405522257.1362330913543701171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1405522257]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>43</wp:comment_id>
			<wp:comment_author><![CDATA[samuel]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[citysite102@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[140.118.206.194]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-07-17 16:41:17]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-07-17 05:41:17]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>My java version is 1.7.0_60, and the maven version is 3.2.2, also with the latest version of eclipse IDE for Java EE Developer (linux 32 bits), I'm using the ubuntu 12.04, the error message like this when I click run in the eclipse of the example "Exception in thread "main" java.lang.NoClassDefFoundError: org/cloudbus/cloudsim/ex/web/examples/CloudSimWorkloadWebExample
Caused by: java.lang.ClassNotFoundException: org.cloudbus.cloudsim.ex.web.examples.CloudSimWorkloadWebExample
    at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
    at java.security.AccessController.doPrivileged(Native Method)
    at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
    at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)
    at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
Could not find the main class: org.cloudbus.cloudsim.ex.web.examples.CloudSimWorkloadWebExample.  Program will exit."</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>42</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1406721887]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-07-17 05:41:25]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1405575677.875853061676025390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1406721887]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1406721887.995830059051513671875;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>44</wp:comment_id>
			<wp:comment_author><![CDATA[Samuel kao]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[citysite102@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[140.118.206.166]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-07-28 23:48:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-07-28 12:48:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>I already solve the  problem : )
Another question is that can CloudsimEX simulate the HDFS on it ? It seems like the execution time consider the transfer time already. If can, which part should I look inside or revise? Thank you very much !!! sorry to bother u that much!</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-07-28 12:48:58]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1406551731]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1406551731.9565799236297607421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1406551732]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>45</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.148.138.164]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-07-30 23:22:02]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-07-30 12:22:02]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Samuel,</p>

<p>I'm happy you resolved the issue!</p>

<p>I'd say that for HDFS jobs you should also consider the disk I/O throughput. You may want to see my latest post -  http://wp.me/p48ema-59 .</p>

<p>If you want to simulate Map-Reduce jobs, then CloudSimEx already supports it in one of its modules. You don't need to install anything in addition, as the above setup procedure installs all components. However, this module has been developed by one of my associates, and I can't help too much with it. To see how it works you can look at its unit tests, and if you have issues ask on its GitHub page - http://tinyurl.com/o8jrjre</p>

<p>Good luck,
Nikolay</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>44</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1406722924]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-07-30 12:22:05]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1406722923]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1406722924.0592339038848876953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>46</wp:comment_id>
			<wp:comment_author><![CDATA[Samuel kao]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[citysite102@hotmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[140.118.206.166]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-08-27 21:10:07]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-08-27 10:10:07]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Really thanks for your suggestions : )
I still have one question is about how to create a reduce only VMs, since all the examples in CloudsimEX didn't mention this part, I'm struggle with that for a few days, the question post in the git seems not get replied.. If any suggestions is appreciated, thank u very much  !!</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1409134207]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1409134207.9630219936370849609375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1409134208]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-08-27 10:10:12]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>47</wp:comment_id>
			<wp:comment_author><![CDATA[CloudSim and CloudSimEx [Part 3] – Delayed VM and Cloudlet actions | Nikolay Grozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com/2014/09/13/cloudsim-and-cloudsimex-part-3-delayed-vm-and-cloudlet-actions/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[66.155.10.55]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-09-13 03:43:37]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-09-12 16:43:37]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>[&#8230;] I assume you’ve already worked through Part 1 of this series. If not, now is a good time to check it out –  CloudSim and CloudSimEx [Part 1]. [&#8230;]</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-09-12 16:43:38]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1410541335]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1410541336.0425469875335693359375;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1410540218.0797679424285888671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>48</wp:comment_id>
			<wp:comment_author><![CDATA[Maryam Hammami]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[maryam1990.hammami@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://plus.google.com/115462680570915968275</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[197.1.163.96]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-12-15 23:58:47]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-12-15 12:58:47]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi sir
I'm new to the cloudsimex platform. I follow CloudSim SetUP. When i use  mvn clean install, i found this problem.</p>

<p>-onlymodulescloudsimsrcmainresources
[INFO]
[INFO] --- maven-compiler-plugin:2.3.2:compile (default-compile) @ cloudsim ---
[INFO] Compiling 134 source files to C:UsersMariemDesktopcloudsim-read-only
modulescloudsimtargetclasses
[INFO]
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ cl
oudsim ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO]
[INFO] --- maven-compiler-plugin:2.3.2:testCompile (default-testCompile) @ cloud
sim ---
[INFO] Compiling 26 source files to C:UsersMariemDesktopcloudsim-read-onlym
odulescloudsimtargettest-classes
[INFO]
[INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ cloudsim ---
[INFO] Surefire report directory: C:UsersMariemDesktopcloudsim-read-onlymod
ulescloudsimtargetsurefire-reports</p>

<hr />

<h2> T E S T S</h2>

<p>Running org.cloudbus.cloudsim.CloudletSchedulerSingleServiceTest
Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.955 sec
Running org.cloudbus.cloudsim.CloudletTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running org.cloudbus.cloudsim.HostDynamicWorkloadTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running org.cloudbus.cloudsim.HostTest
[VmScheduler.vmCreate] Allocation of VM #1 to Host #0 failed by RAM
[VmScheduler.vmCreate] Allocation of VM #2 to Host #0 failed by RAM
Tests run: 5, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.149 sec
Running org.cloudbus.cloudsim.lists.PeListTest
test - Machine: 0 is FAILED
test - Machine: 0 is WORKING
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.111 sec
Running org.cloudbus.cloudsim.lists.VmListTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.095 sec
Running org.cloudbus.cloudsim.LogTest
Tests run: 5, Failures: 3, Errors: 0, Skipped: 0, Time elapsed: 0.189 sec &lt;&lt;&lt; FA
ILURE!
testFormat(org.cloudbus.cloudsim.LogTest)  Time elapsed: 0.171 sec  &lt;&lt;&lt; FAILURE!</p>

<p>org.junit.ComparisonFailure: expected: but was:
        at org.junit.Assert.assertEquals(Assert.java:125)
        at org.junit.Assert.assertEquals(Assert.java:147)
        at org.cloudbus.cloudsim.LogTest.testFormat(LogTest.java:88)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:606)
        at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(Framework
Method.java:45)
        at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCal
lable.java:15)
        at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMe
thod.java:42)
        at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMet
hod.java:20)
        at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.
java:28)
        at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRun
ner.java:68)
        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRun
ner.java:47)
        at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
        at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
        at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
        at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provide
r.java:252)
        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4
Provider.java:141)
        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider
.java:112)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:606)
        at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(
ReflectionUtils.java:189)
        at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke
(ProviderFactory.java:165)
        at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(Provi
derFactory.java:85)
        at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(Fork
edBooter.java:115)
        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:
75)</p>

<p>testPrintLine(org.cloudbus.cloudsim.LogTest)  Time elapsed: 0.003 sec  &lt;&lt;&lt; FAILU
RE!
org.junit.ComparisonFailure: expected: but was:
        at org.junit.Assert.assertEquals(Assert.java:125)
        at org.junit.Assert.assertEquals(Assert.java:147)
        at org.cloudbus.cloudsim.LogTest.testPrintLine(LogTest.java:57)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:606)
        at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(Framework
Method.java:45)
        at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCal
lable.java:15)
        at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMe
thod.java:42)
        at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMet
hod.java:20)
        at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.
java:28)
        at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRun
ner.java:68)
        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRun
ner.java:47)
        at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
        at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
        at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
        at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provide
r.java:252)
        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4
Provider.java:141)
        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider
.java:112)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:606)
        at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(
ReflectionUtils.java:189)
        at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke
(ProviderFactory.java:165)
        at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(Provi
derFactory.java:85)
        at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(Fork
edBooter.java:115)
        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:
75)</p>

<p>testFormatLine(org.cloudbus.cloudsim.LogTest)  Time elapsed: 0.002 sec  &lt;&lt;&lt; FAIL
URE!
org.junit.ComparisonFailure: expected: but was:
        at org.junit.Assert.assertEquals(Assert.java:125)
        at org.junit.Assert.assertEquals(Assert.java:147)
        at org.cloudbus.cloudsim.LogTest.testFormatLine(LogTest.java:95)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:606)
        at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(Framework
Method.java:45)
        at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCal
lable.java:15)
        at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMe
thod.java:42)
        at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMet
hod.java:20)
        at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.
java:28)
        at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRun
ner.java:68)
        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRun
ner.java:47)
        at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
        at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
        at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
        at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provide
r.java:252)
        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4
Provider.java:141)
        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider
.java:112)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:606)
        at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(
ReflectionUtils.java:189)
        at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke
(ProviderFactory.java:165)
        at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(Provi
derFactory.java:85)
        at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(Fork
edBooter.java:115)
        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:
75)</p>

<p>Running org.cloudbus.cloudsim.PeTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.029 sec
Running org.cloudbus.cloudsim.power.models.PowerModelCubicTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.008 sec
Running org.cloudbus.cloudsim.power.models.PowerModelLinearTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.015 sec
Running org.cloudbus.cloudsim.power.models.PowerModelSpecPowerIbmX3550XeonX5675T
est
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running org.cloudbus.cloudsim.power.models.PowerModelSqrtTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.004 sec
Running org.cloudbus.cloudsim.power.models.PowerModelSquareTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.005 sec
Running org.cloudbus.cloudsim.power.PowerHostTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 sec
Running org.cloudbus.cloudsim.power.PowerVmSelectionPolicyMaximumCorrelationTest</p>

<p>Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running org.cloudbus.cloudsim.provisioners.BwProvisionerSimpleTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running org.cloudbus.cloudsim.provisioners.PeProvisionerSimpleTest
Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running org.cloudbus.cloudsim.provisioners.RamProvisionerSimpleTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec
Running org.cloudbus.cloudsim.util.MathUtilTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running org.cloudbus.cloudsim.util.WorkloadFileReaderTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 8.937 sec
Running org.cloudbus.cloudsim.UtilizationModelPlanetLabInMemoryTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 sec
Running org.cloudbus.cloudsim.UtilizationModelStochasticTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.044 sec
Running org.cloudbus.cloudsim.VmSchedulerTimeSharedOverSubscriptionTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.043 sec
Running org.cloudbus.cloudsim.VmSchedulerTimeSharedTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec
Running org.cloudbus.cloudsim.VmTest
Tests run: 20, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.841 sec</p>

<p>Results :</p>

<p>Failed tests:   testFormat(org.cloudbus.cloudsim.LogTest): expected: b
ut was:
(..)stPrintLine(org.cloudbus.cloudsim.LogTest): expected:&lt;[]test test
(..)stFormatLine(org.cloudbus.cloudsim.LogTest): expected: [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e swit
ch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please rea
d the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureExc
eption
[ERROR]
[ERROR] After correcting the problems, you can resume the build with the command</p>

<p>[ERROR]   mvn  -rf :cloudsim
C:UsersMariemDesktopcloudsim-read-only&gt;
C:UsersMariemDesktopcloudsim-read-only&gt;</p>

<p>Please help me about this.</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_foreign_user_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[115462680570915968275]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1418648327]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_post_as]]></wp:meta_key>
				<wp:meta_value><![CDATA[googleplus]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_avatar]]></wp:meta_key>
				<wp:meta_value><![CDATA[https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=50]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1418653248.663333892822265625;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1418648327.555119037628173828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-12-15 12:58:47]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>49</wp:comment_id>
			<wp:comment_author><![CDATA[Yuxuan Jiang]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jyx2005@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[143.89.131.58]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-12-30 22:45:13]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-12-30 11:45:13]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Can I run CloudSimEX on Windows? I found it very useful, but my CloudSim project is already on the Windows platform. Thanks a lot.</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1420225200]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1419945277.4898650646209716796875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1420225200]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1420225200.989346981048583984375;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1419939914.0425140857696533203125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[5126250227]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-12-30 11:45:13]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>50</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[131.107.174.171]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-01-03 06:01:39]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-01-02 19:01:39]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Yuxuan,</p>

<p>Yes, it should work on Windows as well. The setup procedure should be the same.</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>49</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1420225299.9434959888458251953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[5126306259]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1420225299]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1420225299]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-01-02 19:01:39]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>51</wp:comment_id>
			<wp:comment_author><![CDATA[Sabah]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[salzahr1@my.tnstate.edu]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[68.52.140.139]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-02-14 07:27:51]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-02-13 20:27:51]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Nikolaygrozev,
Thanks I have questions please.
Can we do analysis of data center network based on those examples on CloudSim website?
Can we get any network information? For example, latency or throughput?</p>

<p>Thanks.
Sabah</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1423863862.8140809535980224609375;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[6844945503]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1423871045]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1423871045]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1423859272.5472071170806884765625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-02-13 20:27:51]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1423871045.7163798809051513671875;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>52</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[131.107.159.171]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-02-14 10:45:55]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-02-13 23:45:55]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Sabah,</p>

<p>CloudSimEx can only represent network latency.</p>

<p>CloudSim has some support for in-datacentre network simulation, as per this publication – http://www.cloudbus.org/papers/NetworkCloudSim2011.pdf</p>

<p>Good luck,
Nikolay</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>51</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-02-13 23:45:55]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1423871155]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1423871155.3192369937896728515625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[6844995124]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1423871155]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>53</wp:comment_id>
			<wp:comment_author><![CDATA[Sabah]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[salzahr1@my.tnstate.edu]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[68.52.140.139]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-02-14 11:36:48]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-02-14 00:36:48]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Thanks dear for your reply.
So I am not fully understand the paper, but is the code available for data center simulation. Can you please, guide me.</p>

<p>Thanks,
Sabah</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>52</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-02-14 00:36:48]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1423874210]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1423874211.5359508991241455078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[6846377771]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1423874212]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>54</wp:comment_id>
			<wp:comment_author><![CDATA[qiuqiu]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[qiuruiqi1991@163.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[45.63.124.242]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-01-22 00:56:38]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-01-21 13:56:38]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>hai,i have got a problem in my eclipse environment ,it can import as the following reasons:
Missing artifact org.cloudbus.cloudsim:cloudsim-examples:jar:3.1-SNAPSHOT,
so, where can i get the cloudsim3.1?
thank you very much</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1453384601.362905025482177734375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[18975688844]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1453384602]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1453389913.814074993133544921875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2016-01-21 13:56:38]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>55</wp:comment_id>
			<wp:comment_author><![CDATA[BKS]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[bks051985@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[14.98.10.30]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-02-19 17:50:17]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-02-19 06:50:17]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Nikolay,</p>

<p>I want to use Mapreduce extention with Cloud Sim. plesae help me with details on this</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1455864619.4914009571075439453125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[19956259247]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1455864620]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1455869071.5378019809722900390625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2016-02-19 06:50:17]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>56</wp:comment_id>
			<wp:comment_author><![CDATA[BKS]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[bks051985@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[219.64.176.32]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-02-21 06:27:01]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-02-20 19:27:01]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>I want to use Map reduce extention of ClousimEx . Please help me with this.Can I get any tutorial?</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>45</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1456000179.672936916351318359375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[20004944505]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1455996424]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1455996422.981420993804931640625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2016-02-20 19:27:01]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>57</wp:comment_id>
			<wp:comment_author><![CDATA[Michael]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[szplss31012@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[138.128.192.225]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-03-25 12:41:37]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-03-25 01:41:37]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Nikolaygrozev,
I have a problem about Mapreduce,How to run a mapreduce program on clousimex,such as i want to run a wordcount program,This problem has troubled me for a long time,sorry maybe my ability is so poor，I feel very depression and I cannot understand ,so could you help me?how to run a simple program.Thank you very much and sorry to bother you that much!</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1459041435]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1458875314.7506020069122314453125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1459041435]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1458870099.1041920185089111328125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[21163484486]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1459041435.9845159053802490234375;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2016-03-25 01:41:37]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>118</wp:comment_id>
			<wp:comment_author><![CDATA[dkbanik]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[debojitkangsabanik@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[14.139.197.66]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-05-27 07:07:31]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-05-27 07:07:31]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[How do I solve the following problem
The POM for org.cloudbus.cloudsim:cloudsim:jar:3.1-SNAPSHOT is missing, no dependency information available
The POM for org.cloudbus:cloudsimex-core:jar:1.0-SNAPSHOT is missing, no dependency information available
The POM for org.cloudbus:cloudsimex-geolocation:jar:1.0-SNAPSHOT is missing, no dependency information available
The POM for org.cloudbus:cloudsimex-web:jar:1.0-SNAPSHOT is missing, no dependency information available
The POM for org.cloudbus:cloudsimex-mapreduce:jar:1.0-SNAPSHOT is missing, no dependency information available

I am new to it..]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>121</wp:comment_id>
			<wp:comment_author><![CDATA[Thanda]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[thandashwe@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[133.95.105.13]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-07-11 08:03:48]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-07-11 08:03:48]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[I also had that kind of problem. I also don't have experience to using maven. It took me two days to solve that problem. Please  check GroupId tag in the POM files of cloudsimEx. I think consistency for groupid. In my case, now examples are running.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>118</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>124</wp:comment_id>
			<wp:comment_author><![CDATA[boucles d'oreilles van cleef et arpels chanceux copie]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.vancleefalhambra.com/fr/cheap-vintage-alhambra-pendant-turquoise-vcarb87000-p329.html</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.67.180.13]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-08-14 09:07:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-08-14 09:07:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>boucles d'oreilles van cleef et arpels chanceux copie</strong>

Hello there! Do you use Twitter? I'd like to follow you if that would be okay. I'm undoubtedly enjoying your blog and look forward to new posts.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[trackback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>CloudSim and CloudSimEx [Part 2] - Disk operations</title>
		<link>http://www.nikgrozev.org/2014/06/13/cloudsim-and-cloudsimex-part-2-disk-opeartions/</link>
		<pubDate>Thu, 12 Jun 2014 16:38:46 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://nikolaygrozev.wordpress.com/?p=319</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Introduction</h1>

In a <a href="www.nikrozev.net/2014/06/08/cloudsim-and-cloudsimex-part-1/">previous post</a> I introduced the CloudSimEx project featuring a set of CloudSim extensions and I discussed how to set it up in Eclipse and work with it. In this post I'll focus on how CloudSimEx enables disk operations modelling.

CloudSim and most other distributed system performance simulators only represent CPU instructions. In other words, each job/cloudlet is defined only by the number of CPU operations it requires. However, many applications are disk I/O bound, not CPU bound and they work intensively with database services or files on the local storage. In a <a href="http://www.nikgrozev.com/pdf/Performance%20Modelling%20and%20Simulation%20of%20Three-Tier%20Applications%20in%20Cloud%20and%20Multi-Cloud%20Environments.pdf">previous publication</a> we've explained at a high level how disk operations can be simulated. In this post I'll demonstrate how this works in practice with CloudSimEx.

<h1>Prerequisites</h1>

I assume you've already worked through Part 1 of this series. If not, now is a good time to check it out - <a href="www.nikgrozev.net/2014/06/08/cloudsim-and-cloudsimex-part-1/">CloudSim and CloudSimEx [Part 1]</a>.

<h1>Model</h1>

In the core CloudSim every Host has a CPU with one or many cores, which are represented by the <a href="http://code.google.com/p/cloudsim/source/browse/trunk/modules/cloudsim/src/main/java/org/cloudbus/cloudsim/Pe.java">Pe</a> class. The CPU instructions are distributed to a host's VMs by a <a href="http://code.google.com/p/cloudsim/source/browse/trunk/modules/cloudsim/src/main/java/org/cloudbus/cloudsim/VmScheduler.java">VmScheduler</a>. The most widely used scheduler is <a href="http://code.google.com/p/cloudsim/source/browse/trunk/modules/cloudsim/src/main/java/org/cloudbus/cloudsim/VmSchedulerTimeShared.java">VmSchedulerTimeShared</a>, which allocates one or more cores (i.e. Pe) to a VM, and allows sharing of PEs by multiple VMs. Each Vm has a predefined CPU requirements that the scheduler tries to honour when distributing the host's CPU resources.

CPU cores and disks are similar concepts to model, since they both have some predefined capacity/throughput of operations they can perform during a given time interval (either CPU or disk I/O operations) which needs to be shared among the virtual machines. Thus in CloudSimEx we represent a disk with the class <a href="https://github.com/Cloudslab/CloudSimEx/blob/master/cloudsimex-core/src/main/java/org/cloudbus/cloudsim/ex/disk/HddPe.java">HddPe</a>, which extends <em><u>Pe</u></em>. The difference between a CPU core (<u>_Pe_</u>) and a disk (<em><u>HddPe</u></em>) is that a disk has data items stored on it. A data items is a block of persistent storage used by an application - e.g. a file or a database shard.

We also introduce new types of hosts (<a href="https://github.com/Cloudslab/CloudSimEx/blob/master/cloudsimex-core/src/main/java/org/cloudbus/cloudsim/ex/disk/HddHost.java">HddHost</a>) and virtual machines (<a href="https://github.com/Cloudslab/CloudSimEx/blob/master/cloudsimex-core/src/main/java/org/cloudbus/cloudsim/ex/disk/HddVm.java">HddVm</a>) that accommodate disks. A <u>_HddHost_</u> can have one or more disks (i.e. <em><u>HddPe</u></em>). A <em><u>HddVm</u></em> has an additional property defining how many disk operations it requires from the hosts, similarly to the way each <em><u>Vm</u></em> has a number of CPU operations per second as a requirement. Also each <em><u>HddVm</u></em> has a list of attached disks. Thus a virtual machine can have access to all or a subset of the disks of its host. Each <em><u>HddHost</u></em> has a <a href="https://github.com/Cloudslab/CloudSimEx/blob/master/cloudsimex-core/src/main/java/org/cloudbus/cloudsim/ex/disk/VmDiskScheduler.java">VmDiskScheduler</a> which allocates the available throughput of its disks to the hosted virtual machines, similarly to the way a <em><u>VmScheduler</u></em> allocates CPU operations to VMs. In fact under the hood a <em><u>VmDiskScheduler</u></em> uses a dedicated <em><u>VmScheduler</u></em> to manage each disk.

The following diagram depicts the above concepts.

[caption id="attachment_338" align="aligncenter" width="508"]<img src="http://www.nikgrozev.org/wp-content/uploads/2014/06/hostdisksched2.png" alt="Scheduling of VMs load to the host." width="508" height="281" class="size-full wp-image-338" /> HddHost – uses VmScheduler and VmDiskScheduler to assign CPU and disk operations to its disk enable VMs (i.e. HddVm). Each disk has a set of disk items (e.g. files).[/caption]

Once disk and CPU operations are distributed among the virtual machines, they in turn need to distribute them to their cloudlets/jobs. Thus CloudSimEx introduces a new type of cloudlet - <a href="https://github.com/Cloudslab/CloudSimEx/blob/master/cloudsimex-core/src/main/java/org/cloudbus/cloudsim/ex/disk/HddCloudlet.java">HddCloudlet</a>. In addition to the number of CPU instructions (<u>mips</u>) it also has a number of disk I/O operations (<u>miops</u>) and a data item. In CloudSim a standard cloudlet is complete/finished only if <u>mips</u> CPU instructions have been assigned to it by the virtual machine. In CloudSimEx a <em><u>HddCloudlet</u></em> is complete only if both <u>mips</u> CPU and <u>miops</u> disk operations have been provided by the VM. In other words a <em><u>HddCloudlet</u></em> is finished only when it has executed all of its both CPU and disk instructions.

To distribute disk and CPU operations, each <em><u>HddVm</u></em> uses a dedicated scheduler - <a href="https://github.com/Cloudslab/CloudSimEx/blob/master/cloudsimex-core/src/main/java/org/cloudbus/cloudsim/ex/disk/HddCloudletSchedulerTimeShared.java">HddCloudletSchedulerTimeShared</a>. It distributes the CPU and disk operations in a time-shared manner (i.e. similar to <em><u>CloudletSchedulerTimeShared</u></em>). However, when assigning disk operations to a cloudlet, it only uses instructions from the disk which hosts its data item. If no such disk is accessible from the VM - the cloudlet fails. In other words if a cloudlet has a given data item (e.g. a file) the <em><u>HddCloudletSchedulerTimeShared</u></em> will only allocate operations from the disk which hosts it, if it is available to the VM. Otherwise the cloudlet will fail.

The following diagram depicts the above concepts:

[caption id="attachment_339" align="aligncenter" width="589"]<img src="http://www.nikgrozev.org/wp-content/uploads/2014/06/vmdisksched2.png" alt="Cloud scheduling" width="589" height="224" class="size-full wp-image-339" /> HddVm: A HddCloudletSchedulerTimeShared isntance allocates CPU & disk resources to cloudlets. Each cloudlet is associated to a data item and requries a number of I/O operations[/caption]

<h1>Some Code Please</h1>

The samples below are extracted from <a href="https://github.com/Cloudslab/CloudSimEx/blob/master/cloudsimex-examples/src/main/java/org/cloudbus/cloudsimex/disk/examples/CloudSimDisksExample.java">CloudSimDisksExample</a>. The code excerpts below assume you have defined all capital letter constants like HOST_MIPS, HOST_MIOPS etc. You can look at <a href="https://github.com/Cloudslab/CloudSimEx/blob/master/cloudsimex-examples/src/main/java/org/cloudbus/cloudsimex/disk/examples/CloudSimDisksExample.java">CloudSimDisksExample</a> to see how these can be defined.

Lets start by creating a few data items, which later on we'll position on two disks:

<pre><code class="java">// These two items will reside on the first disk
DataItem dataItem_1_1 = new DataItem(DATA_ITEM_SIZE);
DataItem dataItem_1_2 = new DataItem(DATA_ITEM_SIZE);

// These two items will reside on the second disk
DataItem dataItem_2_1 = new DataItem(DATA_ITEM_SIZE);
DataItem dataItem_2_2 = new DataItem(DATA_ITEM_SIZE);
</code></pre>

Next we can create lists of CPUs and disks - i.e. <em><u>Pe</u></em> and <em><u>HddPe</u></em>. Disks are associated with data items in the constructor:

<pre><code class="java">List &lt;pe&gt;peList = Arrays.asList(new Pe(Id.pollId(Pe.class), new PeProvisionerSimple(HOST_MIPS)));

HddPe disk1 = new HddPe(new PeProvisionerSimple(HOST_MIOPS), dataItem_1_1, dataItem_1_2);
HddPe disk2 = new HddPe(new PeProvisionerSimple(HOST_MIOPS), dataItem_2_1, dataItem_2_2);
List &lt;hddpe&gt;hddList = Arrays.asList(disk1, disk2);
</code></pre>

Next we can create a host with these CPUs and disks:

<pre><code class="java">HddHost host = new HddHost(new RamProvisionerSimple(HOST_RAM), 
    new BwProvisionerSimple(HOST_BW), 
    HOST_STORAGE, 
    peList, 
    hddList, 
    new VmSchedulerTimeShared(peList), 
    new VmDiskScheduler(hddList)); 
</code></pre>

After that you can create a data centre with this host and a broker. This is standard CloudSim stuff. The only difference is that you need to use <em><u>HddDataCenter</u></em> instead of just <em><u>DataCenter</u></em>:

<pre><code class="java">// Build the data centre and a broker
List hostList = Arrays.asList(host);
DatacenterCharacteristics characteristics = new DatacenterCharacteristics(ARCH,
    OS,
    VMM,
    hostList,
    TIME_ZONE,
    COST,
    COST_PER_MEM,
    COST_PER_STORAGE,
    COST_PER_BW);

List &lt;storage&gt;storageList = new ArrayList&lt;&gt;();
HddDataCenter datacenter = new HddDataCenter("DC",
    characteristics,
    new VmAllocationPolicySimple(hostList),
    storageList, 0);

DatacenterBroker broker = new DatacenterBroker("Broker");
</code></pre>

Now we'll create a VM which has access to only one of the disks and submit to the broker:

<pre><code class="java">Vm vm1 = new HddVm("TestVM",
    broker.getId(),
    VM_MIPS,
    HOST_MIOPS,
    1,
    VM_RAM,
    VM_BW,
    VM_SIZE,
    VMM,
    new HddCloudletSchedulerTimeShared(),
    new Integer[] { disk1.getId() });

broker.submitVmList(Arrays.asList(vm1));
</code></pre>

Now finally we can run some cloudlets:

<pre><code class="java">// Create cloudlets accessing data items on disk 1 and disk 2 respectively
HddCloudlet cloudlet1_1 = new HddCloudlet(VM_MIPS * 1, HOST_MIOPS * 2, 5, broker.getId(), false, dataItem_1_1);
HddCloudlet cloudlet2_1 = new HddCloudlet(VM_MIPS * 1, HOST_MIOPS * 2, 5, broker.getId(), false, dataItem_2_2);

// Associate them with the VM

// cloudlet1_1 will execute, as vm1 has access to disk1 and dataItem_1_1
cloudlet1_1.setVmId(vm1.getId());
// cloudlet2_2 will fail, as vm1 has no access to disk2 and dataItem_2_2
cloudlet2_2.setVmId(vm1.getId());

// Submit...
broker.submitCloudletList(Arrays.asList(cloudlet1_1, cloudlet2_2));
</code></pre>

<h1>Relation to CloudSim storage</h1>

The core CloudSim code already defines some storage related attributes. <u><strong>They are not related to the above functionalities</strong></u>!

For example each data centre can have a <u>List<Storage></u> property. Storages like SAN storage are supported in CloudSim. However, you can not use these CloudSim entities to represent contention when accessing persistent data either at the VM or cloudlet/job level.

<h1>Extensibility</h1>

CloudSimEx comes with default implementations of the scheduling policies. However, you can implement your own <em><u>VmDiskScheduler</u></em> and <em><u>HddCloudletScheduler</u></em> extensions, which distribute CPU and disk operations with respect to your application's requirements.

<h1>References</h1>

<ul>
<li><a href="www.nikgrozev.net/2014/06/08/cloudsim-and-cloudsimex-part-1/">CloudSim and CloudSimEx [Part 1]</a></li>
<li><a href="http://www.cloudbus.org/cloudsim/">CloudSim official website</a></li>
<li><a href="https://github.com/Cloudslab/CloudSimEx">CloudSimEx on GitHub</a></li>
<li><a href="http://www.nikgrozev.com/pdf/Performance%20Modelling%20and%20Simulation%20of%20Three-Tier%20Applications%20in%20Cloud%20and%20Multi-Cloud%20Environments.pdf">Performance Modelling and Simulation of Three-Tier Applications in Cloud and Multi-Cloud Environments [PDF]</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>319</wp:post_id>
		<wp:post_date><![CDATA[2014-06-13 03:38:46]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-06-12 16:38:46]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cloudsim-and-cloudsimex-part-2-disk-opeartions]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cloudsim"><![CDATA[CloudSim]]></category>
		<category domain="category" nicename="cloudsimex"><![CDATA[CloudSimEx]]></category>
		<category domain="post_tag" nicename="cloudsimex"><![CDATA[CloudSimEx]]></category>
		<category domain="post_tag" nicename="disk"><![CDATA[disk]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="simulation"><![CDATA[Simulation]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[geo_public]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_pending]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_user]]></wp:meta_key>
			<wp:meta_value><![CDATA[nikolaygrozev]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://t.co/qPZPGTdkS6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_external]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:55056044;b:1;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_linkedin_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://www.linkedin.com/updates?discuss=&scope=30071619&stype=M&topic=5882893582314000384&type=U&a=AXhO]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[338]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>58</wp:comment_id>
			<wp:comment_author><![CDATA[lee]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ylee.lab@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[143.248.135.235]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-06-18 13:40:26]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-06-18 02:40:26]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi, Nikolay Grozev. I have a question regarding a problem running an example contained in the CloudSimEx package, namely CloudSimWebExample.java. What do you think the best way to ask you about that?</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1403059226.9812328815460205078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1403076242]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-06-18 02:40:51]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1403076242]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1403076242.975142002105712890625;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>59</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.148.138.164]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-06-18 18:31:01]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-06-18 07:31:01]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi lee,</p>

<p>If you've encountered bugs/issues with CloudSimEx and the web example, please raise an issue on GitHub (https://github.com/Cloudslab/CloudSimEx).</p>

<p>If you have problems setting up CloudSimEx, please post a comment on the installation instructions blog, so others can benefit from the discussion as well - http://nikolaygrozev.wordpress.com/2014/06/08/cloudsim-and-cloudsimex-part-1/.</p>

<p>Nik</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>58</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1403076661]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1403076661.2737329006195068359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1403076661]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-06-18 07:31:21]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>60</wp:comment_id>
			<wp:comment_author><![CDATA[Ravi]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rkgurram@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.5.132.66]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-02-13 16:22:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-02-13 05:22:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Nikolay,
    My boss wants me to use  CloudSimEx for "Network Simulation". In fact the requirement is to generate loads and loads of as close to real world n/w traffic as possible. I have proposed to use NS3 but my boss is recommending CloudSim/CloudSimEx. My understanding is "CloudSim/CloudSimEx" does not simulate any network traffic and it can only simulate "N/W Delays", "Bandwidth", "Cost" and "Scheduling data". Is my understanding correct ?</p>

<p>Regards
-Ravi</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1423804956.812345027923583984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"babafarm";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1423808044]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1423808044]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1423808044.538857936859130859375;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-02-13 05:22:36]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>61</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[24.22.164.218]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-02-13 17:19:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-02-13 06:19:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Ravi,</p>

<p>Your understanding is correct. CloudSimEx can only represent network latency.</p>

<p>CloudSim has a certain support for in-datacentre network simulation, as per this publication - http://www.cloudbus.org/papers/NetworkCloudSim2011.pdf</p>

<p>Good luck,
Nikolay</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>60</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-02-13 06:19:54]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1423808394]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1423808394.4366309642791748046875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1423808394]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>125</wp:comment_id>
			<wp:comment_author><![CDATA[copy love cartier Bangles]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.bestcalovebracelet.cn/en/replica-cartier-love-bracelet-pink-gold-with-diamonds-and-screwdriver-p-188.html</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[113.66.41.89]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-08-15 22:03:59]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-08-15 22:03:59]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>copy love cartier Bangles</strong>

cartierbraceletlove Можно подумать, после покупки wahtsapp пользовательская база лицокниги увеличится ???? как только в wahtsapp мелькнет хоть какое-то упоминание об лицкниге или навязчивая реклама, это гуано тут же будет снесено с моего аппарата и больше&#8230;]]></wp:comment_content>
			<wp:comment_approved><![CDATA[trash]]></wp:comment_approved>
			<wp:comment_type><![CDATA[trackback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_wp_trash_meta_status]]></wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_wp_trash_meta_time]]></wp:meta_key>
				<wp:meta_value><![CDATA[1471528473]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>CloudSim and CloudSimEx [Part 3] – Delayed VM and Cloudlet actions</title>
		<link>http://www.nikgrozev.org/2014/09/13/cloudsim-and-cloudsimex-part-3-delayed-vm-and-cloudlet-actions/</link>
		<pubDate>Fri, 12 Sep 2014 16:43:30 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://nikolaygrozev.wordpress.com/?p=358</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Introduction</h1>

Quite a few CloudSim users have asked on the mailing lists how to submit/destroy a VM or a cloudlet with a delay. Unfortunately, this is not straightforward in CloudSim, and users have to develop a custom broker and override several methods to achieve this. This is far from trivial, as it involves launching and handling custom events and ensuring the internal state of the broker is consistent - e.g. all cloudlets of a terminated VM are killed.

That's why CloudSimEx introduced a new broker <a href="https://github.com/Cloudslab/CloudSimEx/blob/master/cloudsimex-core/src/main/java/org/cloudbus/cloudsim/ex/DatacenterBrokerEX.java">DatacenterBrokerEX</a>, which among other new features also supports dynamic provisioning and scheduling of VMs and cloudlets.

<h1>Prerequisites</h1>

I assume you’ve already worked through Part 1 of this series. If not, now is a good time to check it out – <a href="www.nikgrozev.net/2014/06/08/cloudsim-and-cloudsimex-part-1/">CloudSim and CloudSimEx [Part 1]</a>.

<h1>Some Code Please</h1>

To demonstrate how the delayed actions work, we modify <a href="https://code.google.com/p/cloudsim/source/browse/trunk/modules/cloudsim-examples/src/main/java/org/cloudbus/cloudsim/examples/CloudSimExample1.java">CloudSimExample1</a>, which simply creates a VM and schedules a cloudlet on it. Our modification starts the VM with a 2 seconds delay, and destroys it with a 500 secs delay. Also, we delay the cloudlet submission with 10 secs. The full code of the example can be found in the class <a href="https://github.com/Cloudslab/CloudSimEx/blob/master/cloudsimex-examples/src/main/java/org/cloudbus/cloudsim/ex/DelayExample1.java">DelayExample1</a>. Below we will focus only on the usage of the functionalities.

First we need to use a broker of type <a href="https://github.com/Cloudslab/CloudSimEx/blob/master/cloudsimex-core/src/main/java/org/cloudbus/cloudsim/ex/DatacenterBrokerEX.java">DatacenterBrokerEX</a> (or a subclass):

<pre><code class="java">DatacenterBrokerEX broker = new DatacenterBrokerEX("Broker", 1000);
</code></pre>

Note that the new broker has an additional parameter called <u>lifeLength</u>. Standard CloudSim brokers are terminated whenever there are no more running cloudlets/jobs. If the simulated system becomes idle for a period of time (i.e. no cloudlets are run) the broker and the simulation will be terminated! To overcome this issues <a href="https://github.com/Cloudslab/CloudSimEx/blob/master/cloudsimex-core/src/main/java/org/cloudbus/cloudsim/ex/DatacenterBrokerEX.java">DatacenterBrokerEX</a> introduces this new parameter called <u>lifeLength</u>, and ensures that the simulation and the broker are not terminated before <u>lifeLength</u> seconds have passed, even if there are no running cloudlets. In the previous code we want the broker to be alive for lifeLength=1000 secs, even if there is an idle period.

After creating the broker, we can go on to instantiate the VM and the clouldlet, as we would in a typical CloudSim program. The interesting part is the creation and destruction of VMs with a delay:

<pre><code class="java">// submit vm to the broker after 2 seconds
broker.createVmsAfter(Arrays.asList(vm), 2);
// destroy VM after 500 seconds
broker.destroyVMsAfter(Arrays.asList(vm), 500);
</code></pre>

The above code will submit the VM 2 seconds afterwards, and will terminate it 500 secs later. Analogously, the following code will submit the cloudlet with a delay of 10 secs:

<pre><code class="java">broker.submitCloudletList(Arrays.asList(cloudlet), 10);
</code></pre>

If we look at the standard output of CloudSim, we can verify that:

<pre><code>2.0: Broker: Trying to Create VM #0 in Datacenter_0
2.1: Broker: VM #0 has been created in Datacenter #2, Host #0
10.0: Broker: Sending cloudlet 0 to VM #0
410.0: Broker: Cloudlet 0 received
500.0: Broker: Trying to Destroy VM #0 in Datacenter_0
500.0: Broker: VM #0 has been destroyed in Datacenter #2
</code></pre>

Moreover if we schedule the termination of the VM before the completion of the cloudlet, its status will be set appropriately to <u>Cloudlet.FAILED_RESOURCE_UNAVAILABLE</u>.

<h1>Use Cases</h1>

So how is this useful? Well, it allows us to easily define execution scenarios in advance before the simulation start. We can predefine that the workload (i.e. cloudlets) will occur at a given time to test an autostaling policy, or that VMs will fail at specific times to test fail over policies. And most importantly we can do this with just a few lines of code.

<a href="https://github.com/Cloudslab/CloudSimEx/blob/master/cloudsimex-core/src/main/java/org/cloudbus/cloudsim/ex/DatacenterBrokerEX.java">DatacenterBrokerEX</a> and its subclasses have other useful features as well, so stay tuned for future posts!]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>358</wp:post_id>
		<wp:post_date><![CDATA[2014-09-13 03:43:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-09-12 16:43:30]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cloudsim-and-cloudsimex-part-3-delayed-vm-and-cloudlet-actions]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="cloudsim"><![CDATA[CloudSim]]></category>
		<category domain="category" nicename="cloudsimex"><![CDATA[CloudSimEx]]></category>
		<category domain="post_tag" nicename="cloudsimex"><![CDATA[CloudSimEx]]></category>
		<category domain="post_tag" nicename="datacenterbrokerex"><![CDATA[DatacenterBrokerEX]]></category>
		<category domain="post_tag" nicename="delay"><![CDATA[Delay]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="virtual-machine"><![CDATA[virtual machine]]></category>
		<category domain="post_tag" nicename="vm"><![CDATA[VM]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_facebook]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_tumblr]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_pending]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_google_plus_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/116873873608085229608/posts/WKwrkwC4Zh9]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_external]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"116873873608085229608";b:1;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_user]]></wp:meta_key>
			<wp:meta_value><![CDATA[nikolaygrozev]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://t.co/zSyKNghRKz]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_linkedin_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>62</wp:comment_id>
			<wp:comment_author><![CDATA[Yuxuan Jiang]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jyx2005@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[143.89.131.58]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-01-27 02:05:09]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-01-26 15:05:09]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Could I bind a cloudlet to a VM using CloudletEX? In the original CloudSim, we can use broker.bindCloudletToVm to do this. However, in CloudSimEX, if we still use this method, java.lang.NullPointerException will appear. I need to assign the cloudlets equally to the current available VMs. How can I do this? Could you please advise? Thanks a lot.</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-01-26 15:05:09]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1422284709]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1422284709.447002887725830078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1422289958.757977962493896484375;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1422289958]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1422289882.06046390533447265625;s:7:"message";s:54:"nikolaygrozev changed the comment status to unapproved";s:5:"event";s:17:"status-unapproved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>63</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[131.107.192.171]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-01-27 03:32:38]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-01-26 16:32:38]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>You should be able to bind a cloudlet to a VM. Could you share a minimal working sample reproducing the error?</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>62</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1422289958]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-01-26 16:32:38]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1422289958]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1422289958.9742810726165771484375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>64</wp:comment_id>
			<wp:comment_author><![CDATA[Yuxuan Jiang]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jyx2005@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[143.89.131.58]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-01-27 20:44:25]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-01-27 09:44:25]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Oh, I noticed. We can use the cloudlet.setVmId method. Sorry for the last comment.</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1422410241.8146839141845703125;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-01-27 09:44:25]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1422351865.971683025360107421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1422410241]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1422410240.3742420673370361328125;s:7:"message";s:54:"nikolaygrozev changed the comment status to unapproved";s:5:"event";s:17:"status-unapproved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1422351865]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>65</wp:comment_id>
			<wp:comment_author><![CDATA[Aisha]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[foryou.8.1409@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://Alshiky</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[51.39.88.169]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-03-04 22:56:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-03-04 11:56:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>CAN u explain what about performance analysis on cloudsim</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1457092576.9218289852142333984375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1457092577]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1457097106.3454189300537109375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2016-03-04 11:56:16]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>C# pitfalls for Java Devs - Overriding [Part 1]</title>
		<link>http://www.nikgrozev.org/2014/10/12/c-pitfalls-for-java-devs-overriding-part-1/</link>
		<pubDate>Sun, 12 Oct 2014 11:07:10 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://nikolaygrozev.wordpress.com/?p=372</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Introduction</h1>

Last week I finally had the time to learn a bit of C#, after a number of years of mostly Java coding. Professional C# developers have described it to me as a "better Java" or "Java with syntactic sugar", and have claimed that Java programmers should not have problems picking it up. It is true that both languages have a lot in common - i.e. the C-like syntax and single inheritance. However, there are some quite fundamental philosophical differences, which can be mind-boggling for a Java programmer.

One of these is method overriding, which is fundamentally different in Java and C#.

<h1>Example</h1>

Let us consider the following seemingly analogous code snippets implemented in both languages.

C# code:

<pre><code class="csharp">public class Base
{
    public virtual void F()
    {
        System.Console.WriteLine("Base::F()");
    }
    public void G()
    {
        System.Console.WriteLine("Base::G()");
    }
}
public class Der : Base
{
    public override void F()
    {
        System.Console.WriteLine("Der::F()");
    }
    public void G()
    {
        System.Console.WriteLine("Der::G()");
    }
}
</code></pre>

Java code:

<pre><code class="java">public class Base
{
    public void F()
    {
        System.out.println("Base::F()");
    }
    public void G()
    {
        System.out.println("Base::G()");
    }
}
public class Der extends Base
{
    public void F()
    {
        System.out.println("Der::F()");
    }
    public void G()
    {
        System.out.println("Der::G()");
    }
}
</code></pre>

Now let us consider the following invocations:

<pre><code class="java">Base d = new Der();
d.F();
d.G();
((Der)d).F();
((Der)d).G();
</code></pre>

Many will be surprised to see that the results are different, as per the following table.

<table style="witdh:60em">
    <thead>
        <tr>
            <th>Command / Language</th>
            <th>C#</th>
            <th>Java</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>d.F();</td>
            <td>Der::F()</td>
            <td>Der::F()</td>
        </tr>
        <tr>
            <td>d.G();</td>
            <td>Base::G()</td>
            <td>Der::F()</td>
        </tr>
        <tr>
            <td>((Der)d).F();</td>
            <td>Der::F()</td>
            <td>Der::F()</td>
        </tr>
        <tr>
            <td>((Der)d).G();</td>
            <td>Der::G()</td>
            <td>Der::G()</td>
        </tr>
    </tbody>
</table>

Java <u>always</u> invokes the method of the <u><strong>actual</strong> <strong>class</strong></u> of the object. In other words, the actual method is not known by the compiler - it is decided on at runtime. C# has this behaviour only if the method is declared as virtual (e.g. F()). The invocation of non-virtual methods (e.g. G()) is decided by the compiler, before the execution.

In other words, Java keeps it simple, by always deferring the decision until runtime. This is called <u>Dynamic binding</u>, and causes a certain performance penalty, because of the runtime object inspection. In contrast C# does it the C++ way, and supports both dynamic and static binding. By default methods are bound statically at compile time, unless they are marked as virtual.

<h1>Syntax specifics</h1>

In Java it is a good practice to annotate overriding methods with the <u>@Override</u> annotation. This signals the compiler to validate that the method indeed overrides properly. Even if the annotation is not specified, the behaviour remains the same.

In C#, the <u>override</u> keyword has a similar role - it tells the compiler that an overriding takes place. However, if the programmer does not specify the <u>override</u> keyword, the method can not be dynamically invoked from a base class reference! In other words, in the previous example if we had omitted the override keyword, the invocation of <u>d.F()</u> would call <u>Base::F()</u>, even though it is a virtual method and the actual instance type is <u>Der</u>.

In C# you can explicitly mark methods with the <u>new</u> keyword, to indicate that they are redefining, rather than overriding a base class method. Specifying <u>new</u>, is semantically the same as not specifying override (as in the previous paragraph). The <u>new</u> keyword just makes it clearer for the reader.

<h1>A huge difference</h1>

Java's default dynamic binding behaviour can be implemented in C# by specifying all instance methods as <u>virtual</u>, and annotating all their redefinitions with <u>override</u>. The reverse is not possible. Java can't implement static binding. The closest you can achieve is to define a method as <u>final</u>, which forbids subclasses from re-implementing it altogether.

This is a huge philosophical difference. In Java an object behaves identically, no matter what the type of the reference actually is. Conversely, in C# the behaviour of a single object may change depending on the declared type of the reference.

In Java, you can extend any class from any library and override any accessible method (unless explicitly forbidden with final). This sometimes proves invaluable, as it allows you to work-around bugs or unwanted behaviour in external code bases. In C# you can only override what the original developer has marked as virtual. This in turns allows you to be more specific about which parts of your code are extensible (i.e. can be overriden).]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>372</wp:post_id>
		<wp:post_date><![CDATA[2014-10-12 22:07:10]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-10-12 11:07:10]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[c-pitfalls-for-java-devs-overriding-part-1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="c-2"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="c"><![CDATA[C++]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="override"><![CDATA[override]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_tumblr]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_facebook]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_pending]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[geo_public]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_google_plus_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/116873873608085229608/posts/X7FBE1xsWu8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_external]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"116873873608085229608";b:1;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_user]]></wp:meta_key>
			<wp:meta_value><![CDATA[nikolaygrozev]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://t.co/nMmLgEbGCU]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_linkedin_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>66</wp:comment_id>
			<wp:comment_author><![CDATA[C# pitfalls for Java Devs &#8211; Static Members in Template Classes [Part 2] | Nikolay Grozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com/2014/10/13/c-pitfalls-for-java-devs-static-members-in-template-classes-part-2/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[76.74.254.8]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-10-13 01:47:07]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-10-12 14:47:07]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>[&#8230;] I discussed one of the major differences between C# and Java &#8211; method overriding. Because of it Java and C# code, which look almost identical, can have very different semantics. [&#8230;]</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-10-12 14:47:08]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1413125548]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1413125548.22544002532958984375;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1413125227.260531902313232421875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>C# pitfalls for Java Devs - Static Members in Template Classes [Part 2]</title>
		<link>http://www.nikgrozev.org/2014/10/13/c-pitfalls-for-java-devs-static-members-in-template-classes-part-2/</link>
		<pubDate>Sun, 12 Oct 2014 14:47:03 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://nikolaygrozev.wordpress.com/?p=381</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Introduction</h1>

Previously I discussed one of the major differences between C# and Java - <a href="www.nikgrozev.net/2014/10/12/c-pitfalls-for-java-devs-overriding-part-1/">method overriding</a>. Because of it Java and C# code, which look almost identical, can have very different semantics. Similarly, C# and Java generics differ significantly in terms of the underlying semantics, which can be quite confusing for a Java programmer.

<h1>Example</h1>

Let us consider the following seemingly analogous code snippets implemented in both languages.

C# code:

<pre><code class="csharp">public class Animal { }
public class Lion:Animal { }
public class Bear:Animal { }
public class Cage&lt;T&gt;;
{
    private static int instanceCount = 0;
    public Cage()
    {
        instanceCount++;
    }
    public void PrintInstanceCount()
    {
        System.Console.WriteLine(instanceCount);
    }
}
</code></pre>

Java code:

<pre><code class="java">public class Animal { }
public class Lion extends Animal { }
public class Bear extends Animal { }
public class Cage&lt;T&gt;;
{
    private static int instanceCount = 0;
    public Cage()
    {
        instanceCount++;
    }
    public void PrintInstanceCount()
    {
        System.out.println(instanceCount);
    }
}
</code></pre>

Now let us consider the following invocations:

<pre><code class="java">Cage &lt;Animal&gt; ca = new Cage&lt;Animal&gt;();
Cage &lt;Lion&gt; cl = new Cage&lt;Lion&gt;();
Cage &lt;Bear&gt; cb = new Cage&lt;Bear&gt;();
ca.PrintInstanceCount();
cl.PrintInstanceCount();
cb.PrintInstanceCount();
</code></pre>

Many will be surprised to see that the results are different, as per the following table:

<table style="width:20em">
    <thead>
        <tr>
            <th>Command / Language</td>
            <th>C#</td>
            <th>Java</td>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>ca.PrintInstanceCount();</td>
            <td>1</td>
            <td>3</td>
        </tr>
        <tr>
            <td>cl.PrintInstanceCount();</td>
            <td>1</td>
            <td>3</td>
        </tr>
        <tr>
            <td>cb.PrintInstanceCount();</td>
            <td>1</td>
            <td>3</td>
        </tr>
    </tbody>
</table>

Java implements <a href="http://docs.oracle.com/javase/tutorial/java/generics/erasure.html">type erasure</a>, which means that type parameters are erased at compile time and at a runtime there is a single class for each template. Thus, in the previous example at runtime there is a single static member variable for all instances of Cage, independent of the type parameter.

Conversely, the C# compiler (i.e. the Just In Time compiler - JIT) ensures that all closed types (e.g. Cage<Lion>and Cage<Bear>) have their own static fields. Thus to the programmer they seem as different types/classes.

<h1>Consequences</h1>

As a result C# does not let you access the static members of a template class without specifying the template parameters:

<pre><code class="java">Cage.instanceCount = 5;         // Invalid in C#, Valid in Java
Cage&lt;Lion&gt;.instanceCount = 5;   // Valid in C#, Invalid in Java
Cage&lt;Bear&gt;.instanceCount = 5;   // Valid in C#, Invalid in Java
</code></pre>

Also C# does not let you have an entry point (i.e. a Main method) in a template class.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>381</wp:post_id>
		<wp:post_date><![CDATA[2014-10-13 01:47:03]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-10-12 14:47:03]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[c-pitfalls-for-java-devs-static-members-in-template-classes-part-2]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="c-2"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="charp"><![CDATA[charp]]></category>
		<category domain="post_tag" nicename="generics"><![CDATA[generics]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_pending]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_google_plus_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/116873873608085229608/posts/1uu2kLzqvkB]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[geo_public]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_external]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"116873873608085229608";b:1;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_user]]></wp:meta_key>
			<wp:meta_value><![CDATA[nikolaygrozev]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://t.co/PyqxCDwtik]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_linkedin_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>REST with Embedded Jetty and Jersey in a Single Jar - Step by Step</title>
		<link>http://www.nikgrozev.org/2014/10/16/rest-with-embedded-jetty-and-jersey-in-a-single-jar-step-by-step/</link>
		<pubDate>Thu, 16 Oct 2014 01:37:26 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">http://nikolaygrozev.wordpress.com/?p=387</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Introduction</h1>

Setting up a simple <a href="http://en.wikipedia.org/wiki/Representational_state_transfer">RESTful</a> development environment to play with can be surprisingly difficult. Furthermore, if you're using Java you may have to use different IDE plugins (e.g. for Eclipse or NetBeans), and to rely on the IDE's integration with a web server.

In this tutorial I will show how to set up a RESTful server (Jetty+Jersey) to start from a standard Java main method. Furthermore, using Maven we'll package the entire application in a single executable jar file, which can be started from any machine with a Java environment. Finally, we'll see how to import it into Eclipse, so we can develop and debug there.

<h1>Prerequisites</h1>

Before following this tutorial you should have JDK 7 and Maven 3.2 or later installed on your system. Installation instructions can be found here:

<ul>
<li><a href="http://docs.oracle.com/javase/7/docs/webnotes/install/">http://docs.oracle.com/javase/7/docs/webnotes/install/</a></li>
<li><a href="http://maven.apache.org/download.cgi#Installation">http://maven.apache.org/download.cgi#Installation</a></li>
</ul>

If you plan to work with Eclipse, you will need <a href="https://www.eclipse.org/downloads/">Eclipse IDE Java EE Developers</a>.

<h1>Maven Project</h1>

First, we need to create a simple maven project called <span style="text-decoration:underline;">restprj</span>. We do so by using the simplest <span style="text-decoration:underline;">quickstart</span> maven archetype. It creates a simple <span style="text-decoration:underline;">App</span> java class and an <span style="text-decoration:underline;">AppTest</span> unit test for us. We'll delete the test, as we won't need it for now:

<pre><code class="bash">mvn archetype:create -DgroupId=com.rest.test 
         -DartifactId=restprj 
         -DarchetypeArtifactId=maven-archetype-quickstart
cd restprj
rm src/test/java/com/rest/test/AppTest.java
</code></pre>

Now we need to edit the pom.xml file to include the following dependencies:

<pre><code class="xml">&lt;dependencies&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.eclipse.jetty&lt;/groupId&gt;
        &lt;artifactId&gt;jetty-server&lt;/artifactId&gt;
        &lt;version&gt;9.2.3.v20140905&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.eclipse.jetty&lt;/groupId&gt;
        &lt;artifactId&gt;jetty-servlet&lt;/artifactId&gt;
        &lt;version&gt;9.2.3.v20140905&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.glassfish.jersey.core&lt;/groupId&gt;
        &lt;artifactId&gt;jersey-server&lt;/artifactId&gt;
        &lt;version&gt;2.7&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.glassfish.jersey.containers&lt;/groupId&gt;
        &lt;artifactId&gt;jersey-container-servlet-core&lt;/artifactId&gt;
        &lt;version&gt;2.7&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.glassfish.jersey.containers&lt;/groupId&gt;
        &lt;artifactId&gt;jersey-container-jetty-http&lt;/artifactId&gt;
        &lt;version&gt;2.7&lt;/version&gt;
    &lt;/dependency&gt;
    &lt;dependency&gt;
        &lt;groupId&gt;org.glassfish.jersey.media&lt;/groupId&gt;
        &lt;artifactId&gt;jersey-media-moxy&lt;/artifactId&gt;
        &lt;version&gt;2.7&lt;/version&gt;
    &lt;/dependency&gt;
&lt;/dependencies&gt;
</code></pre>

Note that there may be newer versions of these dependencies. Visit <a href="http://mvnrepository.com/">http://mvnrepository.com/</a> to check for new versions.

<h1>Server and REST service</h1>

Now we need to create a simple test REST service class EntryPoint:

<pre><code class="java">package com.rest.test;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

@Path("/entry-point")
public class EntryPoint {

    @GET
    @Path("test")
    @Produces(MediaType.TEXT_PLAIN)
    public String test() {
        return "Test";
    }
}
</code></pre>

Afterwards we need to update the main class (i.e. App.java), which will start the server:

<pre><code class="java">package com.rest.test;

import org.eclipse.jetty.server.Server;
import org.eclipse.jetty.servlet.ServletContextHandler;
import org.eclipse.jetty.servlet.ServletHolder;

public class App {
    public static void main(String[] args) throws Exception {
        ServletContextHandler context = new ServletContextHandler(ServletContextHandler.SESSIONS);
        context.setContextPath("/");

        Server jettyServer = new Server(8080);
        jettyServer.setHandler(context);

        ServletHolder jerseyServlet = context.addServlet(
             org.glassfish.jersey.servlet.ServletContainer.class, "/*");
        jerseyServlet.setInitOrder(0);

        // Tells the Jersey Servlet which REST service/class to load.
        jerseyServlet.setInitParameter(
           "jersey.config.server.provider.classnames",
           EntryPoint.class.getCanonicalName());

        try {
            jettyServer.start();
            jettyServer.join();
        } finally {
            jettyServer.destroy();
        }
    }
}

</code></pre>

<h1>Building a Single Uber Jar</h1>

This step is in fact optional. It allows you to create an executable single/uber jar file with all dependencies. You can then execute it from any java-endabled machine. To do so, update the pom.xml with the following:

<pre><code class="xml">&lt;build&gt;
  &lt;plugins&gt;
    &lt;plugin&gt;
      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
      &lt;artifactId&gt;maven-shade-plugin&lt;/artifactId&gt;
      &lt;version&gt;1.6&lt;/version&gt;
      &lt;configuration&gt;
        &lt;createDependencyReducedPom&gt;true&lt;/createDependencyReducedPom&gt;
        &lt;filters&gt;
          &lt;filter&gt;
            &lt;artifact&gt;*:*&lt;/artifact&gt;
            &lt;excludes&gt;
              &lt;exclude&gt;META-INF/*.SF&lt;/exclude&gt;
              &lt;exclude&gt;META-INF/*.DSA&lt;/exclude&gt;
              &lt;exclude&gt;META-INF/*.RSA&lt;/exclude&gt;
            &lt;/excludes&gt;
          &lt;/filter&gt;
        &lt;/filters&gt;
      &lt;/configuration&gt;

      &lt;executions&gt;
        &lt;execution&gt;
          &lt;phase&gt;package&lt;/phase&gt;
          &lt;goals&gt;
            &lt;goal&gt;shade&lt;/goal&gt;
          &lt;/goals&gt;
          &lt;configuration&gt;
            &lt;transformers&gt;
              &lt;transformer
                implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" /&gt;
              &lt;transformer
                implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer"&gt;
                &lt;manifestEntries&gt;
                  &lt;Main-Class&gt;com.rest.test.App&lt;/Main-Class&gt;
                &lt;/manifestEntries&gt;
              &lt;/transformer&gt;
            &lt;/transformers&gt;
          &lt;/configuration&gt;
        &lt;/execution&gt;
      &lt;/executions&gt;
    &lt;/plugin&gt;
  &lt;/plugins&gt;
&lt;/build&gt;
</code></pre>

Now you can build and the run the jar file:

<pre><code class="bash">cd restprj
mvn clean install
cd target
java -jar restprj-1.0-SNAPSHOT.jar
</code></pre>

At this point you can open <a href="http://localhost:8080/entry-point/test">http://localhost:8080/entry-point/test</a> in your browser to test the web service.

<h1>Eclipse</h1>

This section is also optional. It describes how to import the Maven project in Eclipse, so you can run and debug your app from there.

First you need to set up the Eclipse maven environment:

[gallery ids="390,391,392"]

Then you need to import the project:

[gallery ids="393,394,395"]

<h1>References</h1>

This post is based on the following StackOverflow discussions:

<ul>
<li><a href="http://stackoverflow.com/questions/22738497/how-do-i-update-example-to-work-with-latest-versions-jetty-9-1-0-rc2-and-jerse">how-do-i-update-example-to-work-with-latest-versions</a></li>
<li><a href="http://stackoverflow.com/questions/17953886/how-to-embed-jetty-and-jersey-into-my-java-application">how-to-embed-jetty-and-jersey-into-my-java-application</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>387</wp:post_id>
		<wp:post_date><![CDATA[2014-10-16 12:37:26]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2014-10-16 01:37:26]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[rest-with-embedded-jetty-and-jersey-in-a-single-jar-step-by-step]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="eclipse"><![CDATA[eclipse]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="jersey"><![CDATA[jersey]]></category>
		<category domain="post_tag" nicename="jetty"><![CDATA[jetty]]></category>
		<category domain="post_tag" nicename="maven"><![CDATA[Maven]]></category>
		<category domain="category" nicename="miscellaneous"><![CDATA[Miscellaneous]]></category>
		<category domain="post_tag" nicename="rest"><![CDATA[REST]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[geo_public]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_pending]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_google_plus_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/116873873608085229608/posts/KzTjZ1MKmHf]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_external]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"116873873608085229608";b:1;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_user]]></wp:meta_key>
			<wp:meta_value><![CDATA[nikolaygrozev]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://t.co/mwqvOtOHUo]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_linkedin_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_facebook]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_tumblr]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_path]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_554a3207fe9d8a312d86105b4a3d0423]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_e730c689f587773b20948fdc846ca61c]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_894ecfab9a23b38c3e01119c6340cc0c]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_03b04f06f0d25833092ddc3b7c3a5e6e]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_1d95a680aabc3f514b15b9c557001855]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_b5547f81af0c08cb57eb48c597e3c54d]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_0fbf2c5cde09374b8c647b579f95ca69]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_5d6daf3b3f2ebaeb82169c0e47a2ed74]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>67</wp:comment_id>
			<wp:comment_author><![CDATA[chris]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[christianbordis@web.de]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[95.91.248.84]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-11-30 06:36:43]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-11-29 19:36:43]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>This tutorial is working like a charm. It helped me a lot :-) Thanks Nikolay</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1417289803.7747499942779541015625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1417305316]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1417305316]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1417294778.7094910144805908203125;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1417305316.2774240970611572265625;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-11-29 19:36:43]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>68</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.168.104.228]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2014-12-03 22:56:13]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2014-12-03 11:56:13]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Glad it worked for you :)</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>67</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1417607773]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1417607773.5224969387054443359375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1417607773]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2014-12-03 11:56:13]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>69</wp:comment_id>
			<wp:comment_author><![CDATA[Maarten Boekhold]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[boekhold@gmx.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[85.115.52.180]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-01-18 21:26:09]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-01-18 10:26:09]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>I'm trying to do something similar. I've got an application that's currently using Grizzly as the embedded web server, and for various reasons I'd like to swap that out for Jetty, completely getting rid of the Grizzly-related jars from the dependencies.
In my case, I already have an instance of the "service bean", and I can't get Jersey manage the lifecycle of that bean. Do you know of a way to enable this? Is there some way I can do:
"jerseyServlet.setProvider(Object useThisBean)"?</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1421576769]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421576769.6599590778350830078125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1421632371]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421632371.181480884552001953125;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[5789601826]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1421632371]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421581126.9693400859832763671875;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-01-18 10:26:09]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>70</wp:comment_id>
			<wp:comment_author><![CDATA[Maarten Boekhold]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[boekhold@gmx.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[85.115.52.180]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-01-18 22:36:33]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-01-18 11:36:33]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>This example works with Jersey 2.7, but not with 2.9 or 2.14. With 2.9/2.14 I'm getting:
java.lang.NoSuchMethodError: org.glassfish.jersey.internal.util.PropertiesHelper.getValue(Ljava/util/Map;Ljavax/ws/rs/RuntimeType;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    at org.glassfish.jersey.moxy.json.MoxyJsonFeature.configure(MoxyJsonFeature.java:67)
    at org.glassfish.jersey.model.internal.CommonConfig.configureFeatures(CommonConfig.java:709)
    at org.glassfish.jersey.model.internal.CommonConfig.configureMetaProviders(CommonConfig.java:639)
    at org.glassfish.jersey.server.ResourceConfig.configureMetaProviders(ResourceConfig.java:809)
    at org.glassfish.jersey.server.ApplicationHandler.initialize(ApplicationHandler.java:388)
    at org.glassfish.jersey.server.ApplicationHandler.access$500(ApplicationHandler.java:163)
    at org.glassfish.jersey.server.ApplicationHandler$3.run(ApplicationHandler.java:323)
    at org.glassfish.jersey.internal.Errors$2.call(Errors.java:289)
...
...</p>

<p>Any idea of the cause for this (and a fix!)</p>

<p>Maarten</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1421580993]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421580993.4416549205780029296875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421632361.2778759002685546875;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[5789597276]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1421632361]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1421632361]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-01-18 11:36:33]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>71</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[24.22.164.218]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-01-19 13:07:51]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-01-19 02:07:51]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi there,</p>

<p>I am not sure what is this service bean you mentioned? The example above dynamically creates an instance (a service bean?) which implements the web service. Isn't that what you want?</p>

<p>If a service bean can be specified in Jersey, then this should be done in the init parameters.
Perhaps you could google what's the name of the init param you want and use jerseyServlet.setInitParameter("param-name", useThisBean);</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>69</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1421633271]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1421633271]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421633271.6485240459442138671875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[5790013039]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-01-19 02:07:51]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>72</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[24.22.164.218]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-01-19 13:12:19]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-01-19 02:12:19]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Perhaps there is a mismatch in the used versions of Jersey and some of the libraries (glassfish.jersey?). Try updating the pom dependencies to the latest versions which are compatible with Jersey 2.9 or 2.14.</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>70</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[5790134938]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1421633540]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421633540.03458309173583984375;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1421633540]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-01-19 02:12:19]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>73</wp:comment_id>
			<wp:comment_author><![CDATA[Maarten Boekhold]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[boekhold@gmx.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[85.115.52.180]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-01-19 15:56:53]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-01-19 04:56:53]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Figured it out. Here's what I wanted to do. Note that I'm explicitly creating an instance of "TheResource" and pass it to the SevletContainer. This allows me to fully control the instantiation and setup of my bean purely from code.</p>

<pre><code>    ServletContextHandler sch = new ServletContextHandler();
    sch.setContextPath("/xxx");

    resource = new TheResource();
    ResourceConfig rc = new ResourceConfig();
    rc.register(resource);

    ServletContainer sc = new ServletContainer(rc);        
    ServletHolder holder = new ServletHolder(sc);
    sch.addServlet(holder, "/*");

    Server server = new Server(port);
    server.setHandler(sch);
    server.start();
    server.join();
</code></pre>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>71</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1421643413]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421643413.701385021209716796875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[5794644499]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1421643755]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421643752.0640308856964111328125;s:7:"message";s:54:"nikolaygrozev changed the comment status to unapproved";s:5:"event";s:17:"status-unapproved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421643755.23534488677978515625;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-01-19 04:56:53]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>74</wp:comment_id>
			<wp:comment_author><![CDATA[Maarten Boekhold]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[boekhold@gmx.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[85.115.52.180]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-01-19 15:57:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-01-19 04:57:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Ah, I had made a mistake in my maven dependencies. I used a property to configure the version of the Jersey dependencies, but for the jersey-media-moxy dependency I had the version hardcoded to "2.7"...</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>72</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1421643467]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421643467.140202045440673828125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[5794514090]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1421643467]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-01-19 04:57:46]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>75</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[131.107.174.171]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-01-20 05:14:11]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-01-19 18:14:11]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Nice :)</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>73</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1421691251]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1421691251.359201908111572265625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[5817305142]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1421691251]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-01-19 18:14:11]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>76</wp:comment_id>
			<wp:comment_author><![CDATA[Oliver]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[f387905@trbvm.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[134.76.4.6]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-02-23 21:39:20]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-02-23 10:39:20]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Nice tutorilal. Very Helpful!</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1424709812.400557994842529296875;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-02-23 10:39:20]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1424687960.64140796661376953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[7244981199]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1424709812]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1424709812]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1424693181.8627779483795166015625;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>77</wp:comment_id>
			<wp:comment_author><![CDATA[David Williams]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[david@gorillamatrix.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.facebook.com/620342464</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[17.149.229.53]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-02-26 14:20:58]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-02-26 03:20:58]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi there, great article.  Question: how do you add Jackson for Json serialization and deserialization.  Best I can think of is this but I dont know what to do next:</p>

<pre><code>    jerseyServlet.setInitParameter(
        ServerProperties.PROVIDER_CLASSNAMES,
        StringUtils.join(
            Arrays.asList(
                HealthCheck.class.getCanonicalName(),
                Rest.class.getCanonicalName()),
            ";"));

    // Create JAX-RS application.
    final Application application = new ResourceConfig()
        .packages("com.apple.ast.management.console")
        .register(JacksonFeature.class);
</code></pre>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1424920858.458672046661376953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_post_as]]></wp:meta_key>
				<wp:meta_value><![CDATA[facebook]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_avatar]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_foreign_user_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[620342464]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[7394949293]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1424992051]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1424992051]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1424925781.4261429309844970703125;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1424992052.108128070831298828125;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-02-26 03:20:58]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>78</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[131.107.159.171]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-02-27 10:15:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-02-26 23:15:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi there,</p>

<p>Perhaps these links may help:
- http://examples.javacodegeeks.com/enterprise-java/rest/jersey/json-example-with-jersey-jackson/
- Section 9.1.4 - https://jersey.java.net/documentation/latest/media.html</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>77</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1424992554]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1424992554.927608013153076171875;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1424992554]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[7395202465]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-02-26 23:15:54]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>79</wp:comment_id>
			<wp:comment_author><![CDATA[Art Lasky]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[art5453@yahoo.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[66.201.49.162]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-04-15 09:53:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-04-14 22:53:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Nikolay, this is a great article that provides a newbie like me with a starting foundation in developing REST services. I got it to work perfectly but in my company we are using version 8.1.2 of jetty. So I changed the dependencies as given in your article to:</p>

<pre><code>  org.eclipse.jetty
  jetty-server
  8.1.2.v20120308
  &amp;lt;!-- 9.2.3.v20140905 --&amp;gt;


org.eclipse.jetty
jetty-servlet
8.1.2.v20120308
&amp;lt;!-- 9.2.3.v20140905 --&amp;gt;
</code></pre>

<p>But I get the following when trying to do 'mvn install':</p>

<p>[INFO] -------------------------------------------------------------
[ERROR] COMPILATION ERROR : 
[INFO] -------------------------------------------------------------
[ERROR] ~/rest/src/main/java/com/rest/App.java:[16,15] error: cannot access AggregateLifeCycle
[ERROR]   class file for org.eclipse.jetty.util.component.AggregateLifeCycle not found
~/rest/src/main/java/com/rest/App.java:[31,23] error: cannot find symbol</p>

<p>Can you suggest how to modify the Java code so it compiles &amp; runs? Or is there another example like this one that uses jetty version 8.1.2? (I did some searching for one but didn't find anything)</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[9570115071]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1429099281]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-04-14 22:53:54]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1429052034.660912036895751953125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1429099281]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1429057291.6525399684906005859375;s:7:"message";s:43:"Akismet re-checked and cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1429099281.5410840511322021484375;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>80</wp:comment_id>
			<wp:comment_author><![CDATA[Vinay Dwivedi]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[dvd.iitkgp@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://vinaydvd.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[183.83.25.99]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-04-24 00:50:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-04-23 13:50:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Thank you so much for righting this blog.
I was blocked by some resource config issue.
Your pom.xml entries saved my day.</p>

<p>Thanks again.</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1429797747.1714088916778564453125;s:7:"message";s:52:"nikolaygrozev changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-04-23 13:50:50]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";d:1429797050.6678678989410400390625;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:8:"vinaydvd";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[9868158346]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1429797747]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1429797747]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>81</wp:comment_id>
			<wp:comment_author><![CDATA[Snir]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[snirco@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.115.215.60]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-05-07 20:58:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-05-07 09:58:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi It working to me but how can I add my webapp folder to load static files html, js,etc...?</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-05-07 09:58:36]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1430997601.52083110809326171875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[10452178936]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1431236855]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1431236855]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1430992716.450131893157958984375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1431236855.39502811431884765625;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>82</wp:comment_id>
			<wp:comment_author><![CDATA[Snir]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[snirco@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[185.32.176.227]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-05-07 22:41:55]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-05-07 11:41:55]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Or how can I deploy a war file</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>81</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[10452179539]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1431236857]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1431003489.646853923797607421875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1430998915.6981608867645263671875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1431236857]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1431236857.74798107147216796875;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-05-07 11:41:55]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>83</wp:comment_id>
			<wp:comment_author><![CDATA[Clara]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[clara2gamma@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[155.54.205.205]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-05-08 23:34:21]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-05-08 12:34:21]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>This tutorial helped me a lot, thanks!</p>

<p>Now I'm trying to load more than one Rest classes. Do I really need to create a new ServletContextHandler for each one?</p>

<p>Thank you in advance.</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1431092913.5713069438934326171875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[10452180193]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1431236860]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1431088461.5881059169769287109375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1431236860]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1431236860.040071964263916015625;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-05-08 12:34:21]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>84</wp:comment_id>
			<wp:comment_author><![CDATA[Sergio Levin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sergio.levin@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://plus.google.com/112208796025828812976</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[186.137.53.147]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-05-13 09:18:18]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-05-12 22:18:18]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi, i'm trying to add multipart support to your example (file upload), but i get an error:
No injection source found for a parameter of type public void com.dmway.scoring.rest.resources.ScoringModelResource.uploadFile(java.io.InputStream,org.glassfish.jersey.media.multipart.FormDataContentDisposition) ...</p>

<p>Any advice?</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1431919457]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1431919457.177546024322509765625;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1431469099.600183963775634765625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_post_as]]></wp:meta_key>
				<wp:meta_value><![CDATA[googleplus]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_avatar]]></wp:meta_key>
				<wp:meta_value><![CDATA[https://lh3.googleusercontent.com/-bqq5aJ1ZFss/AAAAAAAAAAI/AAAAAAAAAJ0/pdYcReexQ-o/photo.jpg?sz=50]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_foreign_user_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[112208796025828812976]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[10724152766]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1431919457]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1431473147.7478630542755126953125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-05-12 22:18:18]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>85</wp:comment_id>
			<wp:comment_author><![CDATA[Ed Kremer]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[eekremer@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[186.37.202.76]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-05-19 22:11:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-05-19 11:11:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Nikolay, thanks for this great article and code !!!</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1432033910.6088879108428955078125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1432035636.246963024139404296875;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1432035636]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1432035636]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[10776842451]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-05-19 11:11:49]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>86</wp:comment_id>
			<wp:comment_author><![CDATA[Shirl Hart]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sh1cpan@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[66.205.135.106]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-06-13 06:00:05]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-06-12 19:00:05]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>This is exactly what I was looking for and it worked the first time! One question, I imported it into eclipse and then changed the test() message text and clicked 'build project' but nothing happened. How do I issued the maven build inside eclipse?</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1434162476.5238521099090576171875;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1434135605.623878002166748046875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[11619152233]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1434162476]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1434162476]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1434140752.4058439731597900390625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-06-12 19:00:05]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>87</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.168.76.2]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-06-13 13:44:20]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-06-13 02:44:20]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Shirl,
I typically prefer making my Maven build in a terminal outside eclipse. It's possible to do it from Eclipse as well - https://wiki.openmrs.org/display/docs/Using+the+M2Eclipse+Maven+Plugin+in+Eclipse
Nikolay</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1434163460.141047000885009765625;s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1434163460]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[11619487465]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1434163460]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-06-13 02:44:20]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>88</wp:comment_id>
			<wp:comment_author><![CDATA[Filippo Pizzicola]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[fpizzicol@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.facebook.com/app_scoped_user_id/1008292339182889/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[200.228.219.70]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-07-23 06:34:39]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-07-22 19:34:39]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Is it possible run use JPA hibernate implementation with this kind of project?</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_post_as]]></wp:meta_key>
				<wp:meta_value><![CDATA[facebook]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_avatar]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_foreign_user_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1008292339182889]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[12996434010]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1437623787]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1437623787]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1437598383.7271149158477783203125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1437623787.4949729442596435546875;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1437593680.040072917938232421875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-07-22 19:34:39]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>89</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[128.250.192.43]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-07-23 15:08:54]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-07-23 04:08:54]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Filippo,
You should be able to use JPA... but it should be application managed JPA. I'm not sure how and if you can do container managed JPA.</p>

<p>Nik</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>88</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1437624534]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[12996680910]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1437624534]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1437624534.690886974334716796875;s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-07-23 04:08:54]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>90</wp:comment_id>
			<wp:comment_author><![CDATA[Filippo Pizzicola]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[fpizzicol@outlook.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.facebook.com/app_scoped_user_id/1008292339182889/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[200.228.219.70]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-07-23 23:47:36]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-07-23 12:47:36]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Thanks Nikolay, I`ll check it. Great tutorial, by the way..</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>89</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1437655658]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_post_as]]></wp:meta_key>
				<wp:meta_value><![CDATA[facebook]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_avatar]]></wp:meta_key>
				<wp:meta_value><![CDATA[http://graph.facebook.com/v2.2/1008292339182889/picture?type=large]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_foreign_user_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[1008292339182889]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[13008148559]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1437655659]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1437655658.556601047515869140625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-07-23 12:47:36]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>91</wp:comment_id>
			<wp:comment_author><![CDATA[Alex]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tuzzo77@yahoo.it]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.econorma.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[79.50.246.167]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-07-27 20:12:47]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-07-27 09:12:47]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Thank you for the useful tuto</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1437988367.9745900630950927734375;s:5:"event";s:9:"check-ham";s:4:"user";s:7:"tuzzo77";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[13131437351]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1437992132]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1437992132]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1437991976.421001911163330078125;s:5:"event";s:9:"check-ham";s:4:"user";s:7:"tuzzo77";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1437992132.706768035888671875;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-07-27 09:12:47]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>92</wp:comment_id>
			<wp:comment_author><![CDATA[Carlo S.]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[carlo.sandroni@rse-web.it]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[151.22.36.230]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-09-02 03:16:18]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-09-01 16:16:18]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Your example works well, but I need to access in my rest service class (e.g. EntryPoint class) to an object created in my main application (e.g. App class).</p>

<p>How can I do this?
Thanks!</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1441124178.642962932586669921875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[14337978745]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1441158470]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1441158470]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1441128591.648209095001220703125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1441158470.213181972503662109375;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-09-01 16:16:18]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>93</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.168.76.2]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-09-02 12:50:04]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-09-02 01:50:04]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Hi Carlo,</p>

<p>You'll have to build your other application with maven, or install its jar file in your local maven repository.</p>

<p>Afterwards you can simply put the proper dependency in the pom.xml of the web service project.</p>

<p>Cheers</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>92</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[14338027868]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1441158604]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1441158604]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1441158604.743278980255126953125;s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-09-02 01:50:04]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>94</wp:comment_id>
			<wp:comment_author><![CDATA[Don Miller]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[millerld57@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://plus.google.com/+DonMillerNC</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[71.70.137.185]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-09-18 03:36:50]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-09-17 16:36:50]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>I used this example on a Raspberry Pi and it worked! (I have previously installed maven).  Thanks!</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_post_as]]></wp:meta_key>
				<wp:meta_value><![CDATA[googleplus]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_avatar]]></wp:meta_key>
				<wp:meta_value><![CDATA[https://lh4.googleusercontent.com/-4-GYSoq_w0I/AAAAAAAAAAI/AAAAAAAAKnM/GmttmM7C0pw/photo.jpg?sz=50]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_foreign_user_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[117054353195908041796]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[14903577601]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1442547271]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1442547271]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1442512306.73744106292724609375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1442547271.9036529064178466796875;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1442507811.58014202117919921875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-09-17 16:36:50]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>95</wp:comment_id>
			<wp:comment_author><![CDATA[Niceguy]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nobody@nodoby.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[150.214.40.112]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-09-22 21:11:16]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-09-22 10:11:16]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>In new versions of maven you need to use "archetype:generate" instead of "archetype:create"</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1442916676.60422801971435546875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1442917191.8020799160003662109375;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1442917191]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1442917191]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[15045884585]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-09-22 10:11:16]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>96</wp:comment_id>
			<wp:comment_author><![CDATA[Rajesh]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[rajeshnailwal@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[182.69.234.122]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-10-24 19:10:47]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-10-24 08:10:47]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>I am following this article. Followed everything except "Building a single Uber jar". I am trying to run it from eclipse App as Java Application but I am getting the following error :-</p>

<p>Exception in thread "main" java.lang.UnsupportedClassVersionError: org/eclipse/jetty/server/Handler : Unsupported major.minor version 52.0</p>

<p>Java version on my system is</p>

<p>java -version
java version "1.7.0_80"
Java(TM) SE Runtime Environment (build 1.7.0_80-b15)
Java HotSpot(TM) Client VM (build 24.80-b11, mixed mode, sharing)</p>

<p>javac -version
javac 1.7.0_80</p>

<pre><code>    9.3.4.v20151007
2.7




&lt;!-- Jetty Server dependencies --&gt;


    org.eclipse.jetty
    jetty-server
    ${jettyVersion}


    org.eclipse.jetty
    jetty-servlet
    ${jettyVersion}


&lt;!-- Jersey --&gt;


    org.glassfish.jersey.core
    jersey-server
    ${jerseyVersion}


    org.glassfish.jersey.containers
    jersey-container-servlet-core
    ${jerseyVersion}


    org.glassfish.jersey.containers
    jersey-container-jetty-http
    ${jerseyVersion}


    org.glassfish.jersey.media
    jersey-media-moxy
    ${jerseyVersion}
</code></pre>

<p>Please let me know what might be the reason</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1445674247.94386196136474609375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[16873854836]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1445678513.4651958942413330078125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1447586937]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1447586937]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1447586937.484839916229248046875;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-10-24 08:10:47]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>97</wp:comment_id>
			<wp:comment_author><![CDATA[binita]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[binita.bharati@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://gravatar.com/binitabharati</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[122.178.230.222]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-10-25 22:39:32]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-10-25 11:39:32]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Great post! It works like a charm.</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[16200210344]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1445773172.5592730045318603515625;s:5:"event";s:9:"check-ham";s:4:"user";s:13:"binitabharati";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1445808053]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1445808053]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1445777531.7613260746002197265625;s:5:"event";s:9:"check-ham";s:4:"user";s:13:"binitabharati";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1445808053.1562950611114501953125;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-10-25 11:39:32]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>98</wp:comment_id>
			<wp:comment_author><![CDATA[ocantov]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[e-victor@live.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://gravatar.com/ocantov</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[186.138.1.115]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-10-31 14:00:01]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-10-31 03:00:01]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Great tutorial!! thank you for sharing. I have a question related to</p>

<p>// Tells the Jersey Servlet which REST service/class to load.
        jerseyServlet.setInitParameter(
           "jersey.config.server.provider.classnames",
           EntryPoint.class.getCanonicalName());</p>

<p>what should I do in order to load more than one REST service/class??</p>

<p>thanks</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1446260402.65132904052734375;s:5:"event";s:9:"check-ham";s:4:"user";s:7:"ocantov";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[16384368872]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1446262673]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1446262673]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1446262673.6763660907745361328125;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-10-31 03:00:01]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>99</wp:comment_id>
			<wp:comment_author><![CDATA[Greg Patnude]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[gpatnude@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>https://www.facebook.com/app_scoped_user_id/10204866567811268/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[161.181.253.20]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-11-13 10:00:05]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-11-12 23:00:05]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>In your Servlet-holder configuration -- you can do this two ways: “jersey.config.server.provider.classnames" also accepts a String array</p>

<p>servlet.setInitParameter("jersey.config.server.provider.classnames", {"path.to.service.Service1", "path.to.service.Service2"});</p>

<p>Or you can use need to point to the package(s) that contain your service endpoints - using the packages initaliazation key instead: "jersey.config.server.provider.packages"</p>

<p>I like to do it this way: assuming ALL of your services are suspended in directories and packages below com.package.services.*; Jersey will scan the class path to locate services @nnotated with @Path ...</p>

<p>ServletHolder servlet = new ServletHolder(org.glassfish.jersey.servlet.ServletContainer.class);
servlet.setInitParameter("jersey.config.server.provider.packages", "com.package.services");</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>98</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1447406609.615725040435791015625;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_post_as]]></wp:meta_key>
				<wp:meta_value><![CDATA[facebook]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_avatar]]></wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_foreign_user_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[10204866567811268]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[16813660907]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1447406609]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1447406609]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1447373974.4743940830230712890625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1447369205.3018519878387451171875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-11-12 23:00:05]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>100</wp:comment_id>
			<wp:comment_author><![CDATA[KJSudarshan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[kjsudijjf@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[103.245.47.20]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-02-23 17:34:30]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-02-23 06:34:30]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>the only place where i could find the detailed step by step accurate information required! This helped me a lot. Thank You!</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1456214544.3744709491729736328125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[20087681491]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1456220816]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1456220816]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1456220817.1082189083099365234375;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1456209272.16184711456298828125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2016-02-23 06:34:30]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>119</wp:comment_id>
			<wp:comment_author><![CDATA[Dmitry]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[diarsid@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[212.80.52.69]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-06-08 10:12:37]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-06-08 10:12:37]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi!
Thanks for this guide, but I've tried this approach and found out that it is not very satisfying. I'll explain why.

If you configure the context path for this approach, the whole service fails.
If you configure more complex jetty server connector and install it into your server instance, service fails also.
If you try to get it working inside of a very simple Spring hello-world-style app (standalone) it fails again:
SEVERE: Spring context lookup failed, skipping spring component provider initialization.

So, it seems that this approach is very limited in its usage scenarios and thus we cannot rely on it.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>122</wp:comment_id>
			<wp:comment_author><![CDATA[Sri]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[sri.kapala@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[140.98.210.243]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-07-27 20:49:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-07-27 20:49:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Very nice Post]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>.NET for Java Devs in a nutshell</title>
		<link>http://www.nikgrozev.org/2015/03/28/net-for-java-devs-in-a-nutshell/</link>
		<pubDate>Fri, 27 Mar 2015 13:15:28 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">https://nikolaygrozev.wordpress.com/?p=408</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Introduction</h1>

.Net is a software development platform, which allows code written in different languages to interoperate. C# and the .Net model have some resemblances with some java-based technologies. This article aims to briefly explain some of its core concepts by comparing and contrasting the two “worlds”.

<h1>Specifications and Implementations</h1>

There are several main specifications which define what .Net actually is:

<ol>
<li>The <strong>Common Intermediate Language</strong> (CIL or just IL) is a language independent representation of compiled code. Similarly to java byte code, which can be compiled from several of languages (Java, Scala, Jython etc.), CIL can be compiled from a multitude of languages.</li>
<li>The <strong>Common Language Runtime</strong> (CLR) is an execution environment (like the JVM), which executes CIL code. It manages threads, garbage collection, just-in-time (JIT) compilation etc.</li>
<li>The <strong>Common Type System</strong> (CTS) defines all data types and programming constructs supported by the CLR, and which can be described in CIL. In java terms, you can think of it as a specification of the JVM's types and constructs.</li>
<li>The <strong>Common Language Specification</strong> (CLS) is a subset of CTS. Not all languages support all features of the CLR runtime (i.e. CTS). For example a language may not have unsigned long. The CLS defines a subset of CTS, which should be supported by all .Net languages. If some code needs to be integrated with other languages, it's externally visible interface (function signatures, member variables etc.) must only use CLS types. There are ways to make the compiler enforce that. There is no similar concept in the java world, and all languages must support all JVM types in order to interoperate.</li>
<li>The <strong>Framework Class Library</strong> (FCL) and its subset the <strong>Base Class Library</strong> (BCL) define the standard library functionalities, which can be used by all languages. In a java environment, the alternative would be the standard java library.</li>
<li>The <strong>Common Language Infrastructure</strong> (CLI) is a “master” specification, which includes all previous ones (CIL, CLR, CTS, CLS etc.) and defines their relationships. .Net is the most famous implementation of CLI. <a href="http://www.mono-project.com/">Mono</a> is a major multi-platform open source alternative. In November 2014, Microsoft announced it will open source .Net core (the fundamental part of .Net) to GitHub and will start working to make .Net multi-platform (as of now it works on Windows only).</li>
</ol>

[caption id="attachment_409" align="aligncenter" width="669"]<img src="http://www.nikgrozev.org/wp-content/uploads/2015/03/dot_net.jpg" alt="Relationship between specifications" width="669" height="366" class="size-full wp-image-409" /> Relationship between specifications[/caption]

<h1>Assemblies</h1>

In .Net assemblies are files (*.dll or *.exe) which contain compiled CIL code and a manifest. The manifest defines the assembly's name, version and dependencies/references to other assemblies. An assembly is basically packaged compiled code, and a similar java concept would be a JAR file. A JAR file also has a manifest, but is not required to contain name, version and dependencies/references. Some component models (e.g. <a href="http://en.wikipedia.org/wiki/OSGi">OSGI</a>) demand that jar files' manifests contain such information.

A Jar file is in fact a zip archive, and can be easily opened and explored. A .Net assembly on the hand can be explored with a tool called <u>ildasm.exe</u>, which ships with .Net.

Assemblies can be built with the respective compiler for the used language (e.g. <u>csc</u>_ for C#), similar to the &lt;u">javac</u> and <u>jar</u> utilities. A response file (*.rsp) can contain multiple build instructions and configurations. Assemblies can also be built with an IDE like Visual Studio, SharpDevelop or MonoDevelop.

The <strong>Global Assembly Cache</strong> (GAC) is a repository, which contains assemblies reusable between multiple applications – mostly system binaries. Users can install assemblies in GAC using system tools, which ship with .Net, although this is not advisable.

Big projects need tools to manage the dependencies on components (assemblies or JARs) and to automate the build. In the java domain, tools like <a href="http://maven.apache.org/">Maven</a> and <a href="http://gradle.org/">Gradle</a> can be used. In the .Net world, <a href="https://www.nuget.org/">NuGet</a> can be used to manage assembly dependencies. Integration with Mono on non-Windows systems seems to be in progress. <a href="http://en.wikipedia.org/wiki/MSBuild">MsBuild</a> seems to be the preferred automated build system for .Net. It also allows you to build Visual Studio solutions and projects without Visual Studio.

In .Net assemblies are not only deployment artefacts – they are also logical entities. For example C# defines an access modifier called <u>internal</u>, which denotes that the respective member can only be accessed from the same assembly. Similarly members with modifier <u>protected internal</u> can be accessed either from the assembly or through inheritance. There does not seem to be an alternative to this in Java. In OSGI you can achieve similar access restriction by specifying which JAR/bundle packages are visible to the outside world.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>408</wp:post_id>
		<wp:post_date><![CDATA[2015-03-28 00:15:28]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-03-27 13:15:28]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[net-for-java-devs-in-a-nutshell]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="c-2"><![CDATA[C#]]></category>
		<category domain="post_tag" nicename="charp"><![CDATA[charp]]></category>
		<category domain="post_tag" nicename="dotnet"><![CDATA[dotnet]]></category>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_pending]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_google_plus_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+NikolayGrozev/posts/2VoRyUpwrvq]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_rest_api_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_rest_api_client_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_external]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"116873873608085229608";b:1;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_user]]></wp:meta_key>
			<wp:meta_value><![CDATA[nikolaygrozev]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://t.co/HUuJnACH3T]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[409]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Basic Networks: Cheatsheet [Part 1]</title>
		<link>http://www.nikgrozev.org/2015/04/22/basic-networks-cheatsheet-part-1/</link>
		<pubDate>Wed, 22 Apr 2015 10:54:00 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">https://nikolaygrozev.wordpress.com/?p=414</guid>
		<description></description>
		<content:encoded><![CDATA[Present day distributed systems are based on technologies which abstract away the complexity of the underlying network. Software Engineers use middleware and programing APIs which completely mask how the underlying network works. Although this eases software development, programmers quite often have problems troubleshooting subtle performance quirks as they do not understand what happens “below” the programming abstractions.

The purpose of this cheat-sheet is to briefly overview the main networking principles without going into too much technical details. For more in-depth understanding you can refer to <a href="http://www.amazon.com/Computer-Networks-Edition-Andrew-Tanenbaum/dp/0132126958">Tanenbaum’s bible</a>.

<h1>Routing</h1>

<h2>Basic Routing Theory</h2>

The Internet consists of a number of <a href="http://en.wikipedia.org/wiki/Autonomous_system_%28Internet%29">Autonomous Systems</a> (AS), which in term consist of one or multiple subnetworks. Typically an AS is owned and exploited by a single large-scale organisation – e.g. an ISP. Routing protocols enable hosts to communicate efficiently regardless of which network they are in.

Routing protocols can be divided in two groups with respect to whether they route traffic within or across AS:

<ul>
<li>Interior Gateway Protocols – route within an AS;</li>
<li>Exterior Gateway Protocols – route across AS networks.</li>
</ul>

With respect to the used routing technique, protocols can also be divided into:

<ul>
<li>Distance Vector protocols – each router maintains a lookup table mapping destination addresses with the most suitable “next step” in the routing. Routers exchange data only with their adjacent routers, which update their tables accordingly. Usually based on the <a href="http://en.wikipedia.org/wiki/Bellman%E2%80%93Ford_algorithm">Ford-Bellman algorithm</a>.</li>
<li>Link State protocols – each router “knows” the states of all links in the network and routes accordingly. Changes are broadcasted to all routers. Based on <a href="http://en.wikipedia.org/wiki/Dijkstra%27s_algorithm">Dijkstra’s algorithm</a>.</li>
</ul>

The above routing methods are generic and can use any distance measure – e.g. number of hops or latency. Typically, distance vector protocols scale better as they do not flood the entire network with network state data.

Finally, routing protocols can also be classified as:

<ul>
<li>Classful – when routers do not include subnet masks in their messages. Routers use the <a href="http://en.wikipedia.org/wiki/Classful_network">legacy IP classes</a> to determine subnet and host addresses.</li>
<li>Classless - when routers exchange subnet information together with the destination addresses.</li>
</ul>

Modern protocols tend to be classless.

Routing is typically hierarchical, meaning that each network can be divided into subnetworks. Each subnet has two types of routers – internal and border. Internal routers route traffic within the network, while border routers route to and from other networks from the same level in the hierarchy.

Network devices (like routers) typically communicate through <a href="http://en.wikipedia.org/wiki/Transmission_Control_Protocol">TCP</a> or <a href="http://en.wikipedia.org/wiki/User_Datagram_Protocol">UDP</a>. In case something goes wrong, network admins need a way to “debug” what has happened. Enter Internet Control Message Protocol (ICMP) which is used just for that. One notable example is the <u>ping</u> command, which uses ICMP to check the connection to a host.

<h2>Large scale routing (Exterior Gateway Protocol)</h2>

Routing between Autonomous Systems (AS) is handled by the Border Gateway Protocol (BGP). It is pretty much the only Exterior Gateway Protocol in use these days. Each AS is given an Id number so it can be uniquely identified. Within each AS a few routers are designated to manage the traffic with other AS networks. They are known as “Autonomous System Boundary Routers” (ASBR). BGP is classified as a distance vector protocol. However the designated BGP routers within each AS keep the entire path to each destination AS. Thus for each destination the neighbouring routers exchange entire paths, not just the next best hop. BGP is classless.

<h2>Smaller Scale routing (Interior Gateway Protocols)</h2>

Open Shortest Path First (OSPF) is a link state classless protocol used to route data within an AS. Each router maintains a complete weighted graph of the network and runs <a href="http://en.wikipedia.org/wiki/Dijkstra%27s_algorithm">Dijkstra’s algorithm</a> to determine the path for each packet. Each router’s graph is built by exchanging graphs with the adjacent routers or vial multicast if the network supports that.

OSPF can manage big networks (an entire AS) and thus is hierarchical and can consist of smaller networks called areas. Each area has an Area Border Router (ABR) which represents it in the OSPF routing. The internal structure of area is not known to the OSPF routers.

The Intermediate System to Intermediate System (IS-IS) protocol is conceptually very similar OSPF, the main difference being that it does <a href="http://en.wikipedia.org/wiki/IS-IS#Comparison_with_OSPF">not use IP addresses</a>. This is why it is less widely adopted.

The Routing Information Protocol (RIP) can also be used to route within an AS, but it does not scale as well as OSPF. It is a distance vector protocol and distances are exchanged periodically (usually every 30 seconds). Its first version was classful, but the later ones are classless.

[caption id="attachment_416" align="aligncenter" width="640"]<img src="http://www.nikgrozev.org/wp-content/uploads/2015/04/as.jpg" alt="Autonomous Systems" width="640" height="456" class="size-full wp-image-416" /> Autonomous Systems[/caption]

<h1>Network Addresses</h1>

To function networks need to give each host a unique address. Usually this is the notorious IPv4 address. Because of hierarchical routing (i.e. networks are divided into subnets), each IP address is divided in two parts – the network id and the host id.

Routing is performed based on the network address (i.e. from one network into another) until the destination network is achieved. At this point the respective router can directly send the package to the host, using the host portion of the IP address.

Back in the day IP addresses were <a href="http://en.wikipedia.org/wiki/Classful_network">divided into classes</a>. Each class can be recognised by a specific sequence of bits in the address’ start. Each class would define which part of the address is a subnet mask and which is the host address. This mechanism turned out to be wasteful and was eventually deprecated.

Presently arbitrary subnet address are used (i.e. Classless Inter-Domain Routing, CIDR), and this can be included in the IPv4 notation as well. For example 152.121.183.34<u>/21</u> means that the first 21 bits are the network address, and the rest are the host address.

Network routing works with IP addresses, but local area networks (like Ethernet or WiFi) work with physical Media Access Control (MAC) addresses. A MAC address is 6 bytes and can be recorded in one of the following formats: <u>01-23-45-67-89-ab</u>; <u>01:23:45:67:89:ab</u> or <u>0123.4567.89ab</u>. So we need to map between MAC and IP addresses. Enter the Address Resolution Protocol (ARP). Each host in the LAN keeps a dictionary of MACs and IPs in the network. Whenever an unknown IP address comes in, a special ARP message with the IP is broadcasted. The machine with the IP in question responds in order to notify the rest of the hosts to update their dictionaries. The <a href="http://en.wikipedia.org/wiki/Neighbor_Discovery_Protocol">Neighbor Discovery Protocol</a> (NDP) is similar to ARP but it works with IPv6.

The IPv4 address space can have only 2<sup>32</sup> (4,294,967,296) addresses, which obviously is insufficient for all devices connecting to the Internet. One way to solve this problem is not to assign a static IP address to every connected device – i.e. to reuse a pool of IP addresses and dynamically assign them to devices joining the network. Also static IP addresses are problematic when a device is moved from one network to another. Enter the Dynamic Host Configuration Protocol (DHCP). Once a new machines joins a network it broadcast a request to find the dedicated DHCP server, which responds with its IP address. If there is no DHCP address on the local network, one of the hosts on the network (known as DHCP agent) transmits the messages between the newly added machine and an external DHCP server.

Another way to mitigate the shortage of IPv4 address is to use Network Address Translation (NAT). In this case every device in a subnet is given a “hidden” IP address, which may not be globally unique. Usually the private IP addresses are in the forma 192.168.X.X or 10.X.X.X. These IP ranges are “reserved” for private (e.g. NAT-ed) networks and can not be used in the public internet. All devices’ communication passes through a NAT device (e.g. a router) which overwrites the source IP address with its own and changes the outbound port uniquely, so that when data is received back on this port, the NAT device knows who the recipient is. As a consequence a server outside the NAT-ed network can not start communication with a machine behind NAT, unless the machine has started it first. Otherwise, the external server would not know which port to send to.

[caption id="attachment_417" align="aligncenter" width="987"]<img src="http://www.nikgrozev.org/wp-content/uploads/2015/04/nat.jpg" alt="NAT" width="987" height="467" class="size-full wp-image-417" /> NAT[/caption]

NAT is basically a hack to work around the issue of limited IPv4 addresses. A better approach would be to move to IPv6, which would allow all devices to have a static IPs. IPv6 addresses are 16 bytes (128 bits) and are in the form: 2001:0db8:85a3:0042:1000:8a2e:0370:7334.

Resources:

<ul>
<li><a href="https://www.youtube.com/user/technologyaddict405/videos">https://www.youtube.com/user/technologyaddict405/videos</a></li>
<li><a href="http://en.wikibooks.org/wiki/Communication_Networks/Routing">http://en.wikibooks.org/wiki/Communication_Networks/Routing</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>414</wp:post_id>
		<wp:post_date><![CDATA[2015-04-22 21:54:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-04-22 10:54:00]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[basic-networks-cheatsheet-part-1]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bgp"><![CDATA[bgp]]></category>
		<category domain="category" nicename="miscellaneous"><![CDATA[Miscellaneous]]></category>
		<category domain="post_tag" nicename="network"><![CDATA[network]]></category>
		<category domain="post_tag" nicename="ospf"><![CDATA[ospf]]></category>
		<category domain="post_tag" nicename="rip"><![CDATA[rip]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_google_plus_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+NikolayGrozev/posts/KgFK1DHVRGm]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_rest_api_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_rest_api_client_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_external]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:11:"google_plus";a:1:{s:21:"116873873608085229608";b:1;}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_user]]></wp:meta_key>
			<wp:meta_value><![CDATA[nikolaygrozev]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[http://t.co/gMcm0svVqC]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_linkedin_publicize_failure]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_linkedin_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_linkedin_publicize_failure]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_linkedin_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_job_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[11450361869]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_linkedin_publicize_failure]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_failed_5425643]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_06769f5b0c7d967740498b60972d6fbb]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_19731d60a8396118762cacc5474c6405]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_2c603de168770c9bf53bf2ad8e433d00]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_oembed_01b05aebb38089957dfa70d9025b442f]]></wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[416]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Reshaping in Pandas  - Pivot, Pivot-Table, Stack and Unstack explained with Pictures</title>
		<link>http://www.nikgrozev.org/2015/07/01/reshaping-in-pandas-pivot-pivot-table-stack-and-unstack-explained-with-pictures/</link>
		<pubDate>Tue, 30 Jun 2015 17:23:43 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">https://nikolaygrozev.wordpress.com/?p=420</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Introduction</h1>

<a href="http://pandas.pydata.org/">Pandas</a> is a popular python library for data analysis. It provides a façade on top of libraries like numpy and matplotlib, which makes it easier to read and transform data. It provides the abstractions of DataFrames and Series, similar to those in R.

In Pandas data reshaping means the transformation of the structure of a table or vector (i.e. DataFrame or Series) to make it suitable for further analysis. Some of Pandas reshaping capabilities do not readily exist in other environments (e.g. SQL or bare bone R) and can be tricky for a beginner.

In this post I'll exemplify some of the most common Pandas reshaping functions and will depict their work with diagrams.

<h1>Pivot</h1>

The <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.pivot.html">pivot</a> function is used to create a new derived table out of a given one. Pivot takes 3 arguements wit the following names: <em><span style="text-decoration:underline;">index,</span></em> <em><span style="text-decoration:underline;">columns</span></em>, and <em><span style="text-decoration:underline;">values</span></em>. As a value for each of these parameters you need to specify a column name in the original table. Then the pivot function will create a new table, whose row and column indices are the unique values of the respective parameters. The cell values of the new table are taken from column given as the <span style="text-decoration:underline;">values</span> parameter.

A bit foggy? Let's give an example. Assume that we are given the following small table:

<img src="http://www.nikgrozev.org/wp-content/uploads/2015/07/table.png" alt="Table" width="316" height="220" class="aligncenter size-full wp-image-432" />

Although the semantics doesn't matter in this example, you can think of it as a table of items we want to sell. The <span style="text-decoration:underline;">Item</span> column contains the item names, <span style="text-decoration:underline;">USD</span> is the price in US dollars and <span style="text-decoration:underline;">EU</span> is the price in euros. Each client can be classified as Gold, Silver or Bronze customer and this is specified in the <span style="text-decoration:underline;">CType</span> column.

The following code snippet creates the depicted DataFrame. Note that we will assume these imports are present in all code snippets throughout this article.

<pre><code class="python">from collections import OrderedDict
from pandas import DataFrame
import pandas as pd
import numpy as np

table = OrderedDict((
    ("Item", ['Item0', 'Item0', 'Item1', 'Item1']),
    ('CType',['Gold', 'Bronze', 'Gold', 'Silver']),
    ('USD',  ['1$', '2$', '3$', '4$']),
    ('EU',   ['1€', '2€', '3€', '4€'])
))
d = DataFrame(table)
</code></pre>

In such a table it is not easy to see how the USD price varies over different customer types. We may like to reshape/pivot the table so that all USD prices for an item are on the row to compare more easily. With Pandas we can do so with a single line:

<pre><code class="python">p = d.pivot(index='Item', columns='CType', values='USD')
</code></pre>

This invocation creates a new table/DataFrame whose columns are the unique values in <span style="text-decoration:underline;">d.CType</span> and whose rows are indexed with the unique values of <span style="text-decoration:underline;">d.Item</span>. So far we have defined the indices of the columns and rows, but what about the cells' values? This is defined by the last parameter of the invocation - <span style="text-decoration:underline;">values='USD'</span>. Each cell in the newly created DataFrame will have as a value the entry of the USD column in the original table corresponding to the same Item and CType. The following diagram illustrates this. Column and row indices are marked in red.

[caption id="attachment_436" align="aligncenter" width="640"]<img src="http://www.nikgrozev.org/wp-content/uploads/2015/07/pivoting_simple1.png" alt="Pivoting in action" width="640" class="size-full wp-image-436" /> Pivoting in action[/caption]

In other words, the value of USD for every row in the original table has been transferred to the new table, where its row and column match the Item and CType of its original row. Cells in the new table which do not have a matching entry in the original one are set with NaN.

As an example the following lines perform equivalent queries on the original and pivoted tables:

<pre><code class="python"># Original DataFrame: Access the USD cost of Item0 for Gold customers
print (d[(d.Item=='Item0') &amp; (d.CType=='Gold')].USD.values)

# Pivoted DataFrame: Access the USD cost of Item0 for Gold customers
print (p[p.index=='Item0'].Gold.values)
</code></pre>

<span style="text-decoration:underline;"><strong>Note</strong></span> that in this example the pivoted table does not contain any information about the EU column! Indeed we can't see those euro symbols anywhere! Thus the pivoted table is a simplified version of the original data and only contains information about the columns we specified as parameters to the pivot method.

<h1>Pivoting By Multiple Columns</h1>

Now what if we want to extend the previous example to have the EU cost for each item on its row as well? This is actually easy - we just have to omit the <span style="text-decoration:underline;">values</span> parameter as follows:

<pre><code class="python">p = d.pivot(index='Item', columns='CType')
</code></pre>

In this case Pandas will create a hierarchical column index (<a href="http://pandas.pydata.org/pandas-docs/stable/advanced.html">MultiIndex</a>) for the new table. You can think of a hierarchical index as a set of trees of indices. Each indexed column/row is identified by a unique sequence of values defining the "path" from the topmost index to the bottom index. The first level of the column index defines all columns that we have not specified in the pivot invocation - in this case USD and EU. The second level of the index defines the unique value of the corresponding column. The following diagram depicts this:

[caption id="attachment_428" align="aligncenter" width="943"]<img src="http://www.nikgrozev.org/wp-content/uploads/2015/07/pivoting_simple_multicolumn.png" alt="Multi-column pivoting" width="943" height="395" class="size-full wp-image-428" /> Multi-column pivoting[/caption]

We can use this hierarchical column index to filter the values of a single column from the original table. For example <span style="text-decoration:underline;">p.USD</span> returns a pivoted DataFrame with the USD values only and it is equivalent to the pivoted DataFrame from the previous section.

To exemplify hierarchical indices, the expression <span style="text-decoration:underline;">p.USD.Bronze</span> selects the first column in the pivoted table.

As a further example the following queries on the original and pivoted tables are equivalent:

<pre><code class="python"># Original DataFrame: Access the USD cost of Item0 for Gold customers
print(d[(d.Item=='Item0') &amp; (d.CType=='Gold')].USD.values)

# Pivoted DataFrame: p.USD gives a "sub-DataFrame" with the USD values only
print(p.USD[p.USD.index=='Item0'].Gold.values)
</code></pre>

<h1>Common Mistake in Pivoting</h1>

As we saw the <span style="text-decoration:underline;">pivot</span> method takes at least 2 column names as parameters - the <span style="text-decoration:underline;">index</span> and the <span style="text-decoration:underline;">columns</span> named parameters. What will happen if we have multiple rows with the same values for these columns? How will the pivot method determine the value of the corresponding cell in the pivoted table? The following diagram depicts the problem:

[caption id="attachment_427" align="aligncenter" width="758"]<img src="http://www.nikgrozev.org/wp-content/uploads/2015/07/pivoting_simple_error.png" alt="Common error in pivoting" width="758" height="261" class="size-full wp-image-427" /> Common error in pivoting[/caption]

In this example we have two rows with the same values ("<em>Item0"</em> and "<em>Gold")</em> for the <span style="text-decoration:underline;">Item</span> and <span style="text-decoration:underline;">CType</span> columns. The pivot method can not know what should be the value of the corresponding value in the pivoted table. Thus it throws an exception with the following message:

<pre><code>ValueError: Index contains duplicate entries, cannot reshape
</code></pre>

The following code reproduces the issue:

<pre><code class="python">table = OrderedDict((
    ("Item", ['Item0', 'Item0', 'Item0', 'Item1']),
    ('CType',['Gold', 'Bronze', 'Gold', 'Silver']),
    ('USD',  ['1/pre&gt;, '2/pre&gt;, '3/pre&gt;, '4/pre&gt;]),
    ('EU',   ['1€', '2€', '3€', '4€'])
))
d = DataFrame(table)
p = d.pivot(index='Item', columns='CType', values='USD')
</code></pre>

Hence, before calling <em><span style="text-decoration:underline;">pivot</span></em> we need to ensure that our data does not have rows with duplicate values for the specified columns. If we can't ensure this we may have to use the <span style="text-decoration:underline;">pivot_table</span> method instead.

<h1>Pivot Table</h1>

The <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.pivot_table.html">pivot_table</a> method comes to solve this problem. It works like pivot, but it aggregates the values from rows with duplicate entries for the specified columns. In other words, in the previous example we could have used the mean, the median or another aggregation function to compute a single value from the conflicting entries. This is depicted in the example below.

[caption id="attachment_441" align="aligncenter" width="749"]<img src="http://www.nikgrozev.org/wp-content/uploads/2015/07/pivoting_table_simple1.png" alt="Pivoting by a single column" width="749" height="255" class="size-full wp-image-441" /> The pivot_table method[/caption]

Note that in this example we removed the $ and € symbols to simplify things. There are two rows in the original table, whose values for <span style="text-decoration:underline;">Item</span> and <span style="text-decoration:underline;">CType</span> are duplicate. The corresponding value in the pivot table is defined as the mean of these two original values. The pivot_table method takes a parameter called <span style="text-decoration:underline;">aggfunc</span>, which is the aggregation function used to combine the multitude of values. In this example we used the mean function from numpy. The following snippet lists the code to reproduce the example:

<pre><code class="python">table = OrderedDict((
    ("Item", ['Item0', 'Item0', 'Item0', 'Item1']),
    ('CType',['Gold', 'Bronze', 'Gold', 'Silver']),
    ('USD',  [1, 2, 3, 4]),
    ('EU',   [1.1, 2.2, 3.3, 4.4])
))
d = DataFrame(table)
p = d.pivot_table(index='Item', columns='CType', values='USD', aggfunc=np.min)
</code></pre>

In essence <em><span style="text-decoration:underline;">pivot_table</span></em> is a generalisation of <em><span style="text-decoration:underline;">pivot</span></em>, which allows you to aggregate multiple values with the same destination in the pivoted table.

<h1>Stack/Unstack</h1>

In fact pivoting a table is a special case of stacking a DataFrame. Let us assume we have a DataFrame with MultiIndices on the rows and columns. Stacking a DataFrame means moving (also rotating or pivoting) the innermost column index to become the innermost row index. The inverse operation is called unstacking. It means moving the innermost row index to become the innermost column index. The following diagram depicts the operations:

[caption id="attachment_443" align="aligncenter" width="827"]<img src="http://www.nikgrozev.org/wp-content/uploads/2015/07/stack-unstack1.png" alt="Stack and Unstack" width="827" height="535" class="size-full wp-image-443" /> Stack and Unstack[/caption]

In this example we look at a DataFrame with 2-level hierarchical indices on both axes. Stacking takes the most-inner column index (i.e. c00, c01, c10), makes it the most inner row index and reshuffles the cell values accordingly. Inversely, unstacking moves the inner row indices (i.e. r00, r01) to the columns.

Typically stacking makes the DataFrame taller, as it is "stacking" data in fewer columns and more rows. Similarly, unstacking usually makes it shorter and wider or broader. The following reproduces the example:

<pre><code class="python"># Row Multi-Index
row_idx_arr = list(zip(['r0', 'r0'], ['r-00', 'r-01']))
row_idx = pd.MultiIndex.from_tuples(row_idx_arr)

# Column Multi-Index
col_idx_arr = list(zip(['c0', 'c0', 'c1'], ['c-00', 'c-01', 'c-10']))
col_idx = pd.MultiIndex.from_tuples(col_idx_arr)

# Create the DataFrame
d = DataFrame(np.arange(6).reshape(2,3), index=row_idx, columns=col_idx)
d = d.applymap(lambda x: (x // 3, x % 3))

# Stack/Unstack
s = d.stack()
u = d.unstack()
</code></pre>

In fact Pandas allows us to stack/unstack on [any level of the indices](http://In fact Pandas allows us to stack/unstack on any level of the index) so our previous explanation was a bit simplified :). Thus, in the previous example we could have stacked on the outermost index level as well! However the default (and most typical case) is to stack/unstack on the innermost index level.

Stacking and unstacking can also be applied to data with flat (i.e. non-hierchical) indices. In this case one of the indices is de facto removed (the columns index if stacking, and the rows if unstacking) and its values are nested in the other index, which is now a MultiIndex. Therefore the result is always a Series with a hierarchical index. The following example demonstrates this:

[caption id="attachment_447" align="aligncenter" width="672"]<img src="http://www.nikgrozev.org/wp-content/uploads/2015/07/stack-simple2.png" alt="Stack and Unstack" width="672" height="402" class="size-full wp-image-447" /> Stack and Unstack[/caption]

In this example we take a DataFrame similar to the one from the beginning. Instead of pivoting, this time we stack it, and we get a Series with a MultiIndex composed of the initial index as first level, and the table columns as a second. Unstacking can help us get back to our original data structure.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>420</wp:post_id>
		<wp:post_date><![CDATA[2015-07-01 04:23:43]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-06-30 17:23:43]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[reshaping-in-pandas-pivot-pivot-table-stack-and-unstack-explained-with-pictures]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="datascience"><![CDATA[DataScience]]></category>
		<category domain="category" nicename="miscellaneous"><![CDATA[Miscellaneous]]></category>
		<category domain="post_tag" nicename="pandas"><![CDATA[Pandas]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="reshape"><![CDATA[Reshape]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[geo_public]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_google_plus_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+NikolayGrozev/posts/i5ygqoW5SUg]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_job_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[12207630000]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_linkedin_publicize_failure]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_failed_5425643]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_external]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:5385644;s:59:"https://twitter.com/nikolaygrozev/status/616142002183254016";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_5425648]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_user]]></wp:meta_key>
			<wp:meta_value><![CDATA[nikolaygrozev]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_5425656]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[431]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>101</wp:comment_id>
			<wp:comment_author><![CDATA[ashok]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[ashok.reddy587@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://gravatar.com/ashokreddy587</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[104.129.192.55]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-11-05 05:48:46]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-11-04 18:48:46]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Haven't seen better Article than this!!! Cleared a lot of question. Thanks!</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1446671661]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1447406620.1090319156646728515625;s:5:"event";s:17:"status-unapproved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1447406623.26006603240966796875;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1446662926.707910060882568359375;s:5:"event";s:9:"check-ham";s:4:"user";s:13:"ashokreddy587";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1446667725.7005710601806640625;s:5:"event";s:9:"check-ham";s:4:"user";s:13:"ashokreddy587";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1446671661.801331996917724609375;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1447406623]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-11-04 18:48:46]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>102</wp:comment_id>
			<wp:comment_author><![CDATA[fatlobyte]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[fat.lobyte9@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://gravatar.com/fatlobyte</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[143.50.46.88]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-12-10 00:02:56]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-12-09 13:02:56]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Thank you so much! 
This cleared things up for me. I will visit this site for reference a few times, I think :)</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1449717410]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1449717410]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1449671257.4098880290985107421875;s:5:"event";s:9:"check-ham";s:4:"user";s:9:"fatlobyte";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1449717410.956698894500732421875;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1449666176.400764942169189453125;s:5:"event";s:9:"check-ham";s:4:"user";s:9:"fatlobyte";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-12-09 13:02:56]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>103</wp:comment_id>
			<wp:comment_author><![CDATA[ursan]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[kevin.olivier.personal@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[73.252.137.253]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-01-26 17:44:59]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-01-26 06:44:59]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>You should look into pandas.pivot_table(), it makes all of this really easier and is a bit more flexible than DataFrame.pivot()</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1453790700.6311819553375244140625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1457765447.2340490818023681640625;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1453790701]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1453794863.67051792144775390625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1457765446]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[20677161372]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1457765446]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2016-01-26 06:44:59]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>104</wp:comment_id>
			<wp:comment_author><![CDATA[tanviratonu]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[tanvirhossain.sk@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://tanviratonu.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[134.155.244.251]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-03-08 09:14:10]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-03-07 22:14:10]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>great post</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1457388850.127934932708740234375;s:5:"event";s:9:"check-ham";s:4:"user";s:11:"tanviratonu";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1457393026.5275070667266845703125;s:5:"event";s:9:"check-ham";s:4:"user";s:11:"tanviratonu";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[20547156842]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1457431544]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1457431544]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1457431545.2790610790252685546875;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2016-03-07 22:14:10]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>105</wp:comment_id>
			<wp:comment_author><![CDATA[zxuiowa@iastate.edu]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[zxuiowa@iastate.edu]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[104.129.196.110]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-03-12 17:14:56]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-03-12 06:14:56]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>this is really helpful!!!!!!!! Thanks</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1457763298.2330739498138427734375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[20677086722]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1457765185]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1457765185]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1457765186.595488071441650390625;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2016-03-12 06:14:56]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>106</wp:comment_id>
			<wp:comment_author><![CDATA[Data Science Articles | Niall Martin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://niallmartin.me/2016/02/17/data-science-articles/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.0.116.101]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-03-23 03:04:27]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-03-22 16:04:27]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>[&#8230;] Reshaping in Pandas &#8211; More code from Nikolay Grozev discussing pivoting, pivot-tables, stacks and unstacking. [&#8230;]</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1458662668.4901790618896484375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1458667638.4272820949554443359375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1458727306]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1458727307.1239039897918701171875;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2016-03-22 16:04:27]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>107</wp:comment_id>
			<wp:comment_author><![CDATA[Jaime Arango]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jaimearang@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[190.99.220.58]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-03-28 09:27:41]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-03-27 22:27:41]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Thank you for your post! 
It was frustrating reading the panda official documentation regarding pivot and stack. Now things are getting more clear for a newbie like me. Just a question: was it really necessary using OrderedDict to exemplify the pivot?</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1459144213.4509069919586181640625;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1459117662.157989978790283203125;s:5:"event";s:9:"check-ham";s:4:"user";s:10:"jaimearang";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1459121275.95392608642578125;s:5:"event";s:9:"check-ham";s:4:"user";s:10:"jaimearang";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[21196743368]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1459144212]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1459144212]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2016-03-27 22:27:41]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>108</wp:comment_id>
			<wp:comment_author><![CDATA[nikolaygrozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nikolay.grozev@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://nikolaygrozev.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[124.168.92.100]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-03-28 16:53:23]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-03-28 05:53:23]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Thanks Jamie. You should be able to reproduce the example with the default python dictionary as well.  I used OrderedDict to ensure the dataframes will look the same for everyone who tries to run the example.</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>107</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1459144403]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1459144404.481441974639892578125;s:5:"event";s:9:"check-ham";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
				<wp:meta_value><![CDATA[21196802008]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1459144405]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2016-03-28 05:53:23]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>109</wp:comment_id>
			<wp:comment_author><![CDATA[Pandas中的数据重塑（reshape）功能 | 神刀安全网]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.shellsec.com/news/12804.html</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[133.242.174.56]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-04-21 16:32:51]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-04-21 05:32:51]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>[&#8230;] 原文链接： https://nikolaygrozev.wordpress.com/2015/07/01/reshaping-in-pandas-pivot-pivot-table-stack-and-unsta&#8230; [&#8230;]</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1461221235.6639020442962646484375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1461216772.2208950519561767578125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1461324030]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1461324031.5455319881439208984375;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2016-04-21 05:32:51]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>123</wp:comment_id>
			<wp:comment_author><![CDATA[Ulf]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[newsletter@morys.net]]></wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[78.49.225.238]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-08-06 10:38:59]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-08-06 10:38:59]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Explains the concept and the difference between the differen pivot functions very clearly, thx !

Just for the inner Monk in me: there seems to be a slight error with the second level column index in the d.stack() table: 
The row index for the last 3 observations in the represented table goes:
r0 - r01 - c01
r0 - r01 - c02
r0 - r01 - c10

but should be:

r0 - r01 - c00
r0 - r01 - c01
r0 - r01 - c10

:-)]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>Fast and Simple Sampling in Pandas when Loading Data From Files</title>
		<link>http://www.nikgrozev.org/2015/06/16/fast-and-simple-sampling-in-pandas-when-loading-data-from-files/</link>
		<pubDate>Mon, 15 Jun 2015 16:33:06 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">https://nikolaygrozev.wordpress.com/?p=421</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Introduction</h1>

Recently I've been exploring how Python can help me quickly analyse and explore data. Using a general purpose programming language like Python has a number of benefits compared to specialised languages like R when munging heterogeneous and messy data.

<a href="http://pandas.pydata.org/">Pandas</a> is one of the most widely used python libraries for data analysis. It basically introduces a layer between other libraries like numpy and matplotlib, which makes it easier to read in, transform and plot data. Also it introduces the concepts of DataFrames and Series, which are familiar to R programmers.

<h3>The Problems</h3>

Quite often people have to work with pretty big data sets, which introduces several problems. Firstly, you may not have sufficient memory on your development machine. In this case you may like to load a subset of the data and use it for exploratory analysis and visualisation. After having an idea of what you're looking for, you can run your thorough analyses on a dedicated server (e.g. a VM in the cloud). Secondly, loading all the data in memory can make your analyses run rather slowly, as all operations are performed on big DataFrames. This can be disruptive for your work process. Again, working with a subset of the data may be sufficient for preliminary exploratory work.

Pandas comes with a few features for handling big data sets. It allows you to <a href="http://pandas-docs/dev/io.html#iterating-through-files-chunk-by-chunk">read big data files in chunks</a> or you can just load the first N lines. Neither of these approaches solves the aforementioned problems, as they don't give us a small randomised sample of the data straight away. A better approach would be to load all the data (in chunks or in whole), and then perform sampling. This is not always viable as the data could exceed the resources you have and the sampling &amp; chunking code may not be trivial.

In this article I'll describe a simple and fast approach for sampling data as it is loaded from the data file.

<h1>Solution: skiprows</h1>

In the later versions of Pandas its developers have introduced a new parameter <u>skiprows</u> of the <a href="http://pandas.pydata.org/pandas-docs/stable/io.html#io-read-csv-table">read_csv</a> and function. It allows you to specify a list of line/row indices, which will not be loaded by pandas. In essence what we can to do is generate the list of line ids which pandas will ignore.

<h2>Approach 1 - select every N-th line</h2>

Often it is reasonable to select every N-th line in the file and ignore the rest. This makes sense if the data is already ordered by an important parameter (e.g. time of event occurrence) and thus such sampling will result in a representative sample. Generating the list of <u>skiprows</u> is trivial once we know the number of lines in the file. We can obtain the latter with a simple scan of the file we can just use an upper bound of the number of lines we expect in the file. The following code illustrates the approach:

<pre><code class="python">import pandas as pd

# The data to load
f = "my_data.csv"

# Take every N-th (in this case 10th) row
n = 10

# Count the lines or use an upper bound
num_lines = sum(1 for l in open(f))

# The row indices to skip - make sure 0 is not included to keep the header!
skip_idx = [x for x in range(1, num_lines) if x % n != 0]

# Read the data
data = pd.read_csv(f, skiprows=skip_idx, ... )
</code></pre>

<u><strong>Note!</strong></u> If your data has a header you should make sure that 0 is not included in your skiprows list. Otherwise the header will be ignored. <u><strong>Note!</strong></u> You may be tempted to use a generator instead of a list for the skiprows parameter value, in order to save some memory. Although this would work, my experiments show that the performance of &lt;u">read_csv</u> degrades when <u>skiprows</u> uses generators.

<h2>Approach 2 - random selection</h2>

In other cases you may want to select the lines randomly. Changing the previous example for this case is easy, as demonstrated below:

<pre><code class="python">import pandas as pd
import random

# The data to load
f = "my_data.csv"

# Count the lines
num_lines = sum(1 for l in open(f))

# Sample size - in this case ~10%
size = int(num_lines / 10)

# The row indices to skip - make sure 0 is not included to keep the header!
skip_idx = random.sample(range(1, num_lines), num_lines - size)

# Read the data
data = pd.read_csv(f, skiprows=skip_idx, ... )
</code></pre>

This approach tends to be a bit slower, as the generation of the random sample of indices can take some time for files with many lines.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>421</wp:post_id>
		<wp:post_date><![CDATA[2015-06-16 03:33:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-06-15 16:33:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[fast-and-simple-sampling-in-pandas-when-loading-data-from-files]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="datascience"><![CDATA[DataScience]]></category>
		<category domain="category" nicename="miscellaneous"><![CDATA[Miscellaneous]]></category>
		<category domain="post_tag" nicename="pandas"><![CDATA[Pandas]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="read_csv"><![CDATA[read_csv]]></category>
		<category domain="post_tag" nicename="sampling"><![CDATA[sampling]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_linkedin_publicize_failure]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_google_plus_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+NikolayGrozev/posts/VgzAPXLD2Fk]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[geo_public]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_job_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[11697502620]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_failed_5425643]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_external]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:5385644;s:59:"https://twitter.com/nikolaygrozev/status/610485196735934464";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_5425648]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_user]]></wp:meta_key>
			<wp:meta_value><![CDATA[nikolaygrozev]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_5425656]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>110</wp:comment_id>
			<wp:comment_author><![CDATA[&raquo; Python:Pandas: Sampling a DataFrame]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://www.itsprite.com/pythonpandas-sampling-a-dataframe/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[45.56.64.90]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-09-11 02:04:49]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-09-10 15:04:49]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>[&#8230;] If you&#8217;re using pandas.read_csv you can directly sample when loading the data, by using the skiprows parameter. Here is a short article I&#8217;ve written on this &#8211; https://nikolaygrozev.wordpress.com/2015/06/16/fast-and-simple-sampling-in-pandas-when-loading-data-&#8230; [&#8230;]</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1441897489.840095996856689453125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1441962725]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1441901805.49617099761962890625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1441962725.6479508876800537109375;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-09-10 15:04:49]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>111</wp:comment_id>
			<wp:comment_author><![CDATA[Pandas in Jupyter &#8211; Quickstart and Useful Snippets | Nikolay Grozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://nikolaygrozev.wordpress.com/2015/12/27/pandas-in-jupyter-quickstart-and-useful-snippets/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.0.100.181]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2015-12-27 12:15:09]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2015-12-27 01:15:09]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>[&#8230;] Sometimes we need to sample the data before loading it, as it is too big to fit in memory. This can be achieved following this approach. [&#8230;]</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1451178910.2172019481658935546875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1451180223]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1451180223.59265899658203125;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2015-12-27 01:15:09]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Overview of Modern Concurrency and Parallelism Concepts</title>
		<link>http://www.nikgrozev.org/2015/07/14/overview-of-modern-concurrency-and-parallelism-concepts/</link>
		<pubDate>Tue, 14 Jul 2015 07:00:39 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">https://nikolaygrozev.wordpress.com/?p=453</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Introduction</h1>

Most software engineers know about operating system (OS) level processes and threads. They are taught in all university OS courses. However, newer concepts promising higher throughput, less overhead, latency, and development efforts have emerged.

I was perplexed as I couldn't find a succinct and systematic description and comparison. This is precisely the goal of this article – to summarise, exemplify and compare terms like green threads, fibres, goroutine, actors etc.

This article aims to give a general overview of these concepts and is not exhaustive. There is still some terminological ambiguity with respect to some of the terms. For this article I have mostly followed the respective Wikipedia pages.

<h1>Concurrency vs. Parallelism</h1>

Let's start by clarifying two important concepts – concurrency and parallelism. Until recently I considered them synonymous and there is still some ambiguity in the community about what they mean.

According to <a href="https://vimeo.com/49718712">Rob Pike's talk</a>, concurrency is about composing independent processes (in the general meaning of the term process) to work together, while parallelism is about actually executing multiple processes simultaneously. Concurrency is about the design and structure of the application, while parallelism is about the actual execution.

Naturally, the terms are related. In order to achieve efficient utilisation of a multi-core system (i.e. good parallelism) you need scalable and flexible design with no bottlenecks (i.e. good concurrency).

[caption id="attachment_458" align="aligncenter" width="740"]<img src="http://www.nikgrozev.org/wp-content/uploads/2015/07/concurrent_vs_parallel.png" alt="Concurrent vs. Parallel" width="440" class="size-full wp-image-458" /> Concurrent vs. Parallel[/caption]

Let's take a multi-threaded application as an example. The separation of the application into threads defines its concurrent model. The mapping of these threads on the available cores defines its level or parallelism. A concurrent system may run efficiently on a single processor, in which case it is not parallel.

We can have it vice versa as well. It is possible to have parallelism without concurrency. For example in <a href="https://en.wikipedia.org/wiki/SIMD">SIMD architectures</a> there are simultaneous/parallel computations, although only one instruction is run at a time.

<h1>Processes and Threads</h1>

If you know about OS processes and threads you may wish to skip this section.

A <a href="https://en.wikipedia.org/wiki/Process_(computing)">process</a> is an instance of a program being executed. Each process has its own <a href="https://en.wikipedia.org/wiki/Address_space">address space</a>, which can not be accessed from other processes. Hence, <a href="https://en.wikipedia.org/wiki/Process_isolation">processes are isolated</a> from each other and can not directly access each others' memory, which increases security and fault tolerance. Special <a href="https://en.wikipedia.org/wiki/Inter-process_communication">inter-process communication</a> techniques like sockets and pipelines can be used to communicate between processes. The OS preemtively schedules the processes' access to CPU resources.

OS processes can be expensive to create, as each one has its own address space, program code, open file handles etc. Furthermore the inter-process communication can be inefficient and cumbersome to program.

Enter <a href="https://en.wikipedia.org/wiki/Thread_(computing)">threads</a> (a.k.a. lightweight processes). A thread is a separate line of execution (i.e. a sequence of instructions) within a process. A process can have multiple threads, all of which share its address space, file handles etc. Starting a thread is cheaper, as fewer resources need to be allocated. The threads within a process are concurrent and can execute in parallel. Each thread maintains its own programming stack. Alike processes, the OS scheduler preemptively schedules all threads.

[caption id="attachment_454" align="aligncenter" width="326"]<img src="http://www.nikgrozev.org/wp-content/uploads/2015/07/threads.png" alt="Each thread in a process has its own stack." width="326" height="326" class="size-full wp-image-454" /> Each thread in a process has its own stack.[/caption]

Since all threads within a process share the same address space, they can communicate much more easily. However, this makes multi-threaded programming notoriously difficult, as the access to shared variables must be carefully synchronised. Acquiring and releasing locks can significantly slow down an application as threads can be blocked for long time periods. Furthermore, blocking leads to context switching, which is expensive.

Another problem is that each thread has its own stack (typically ~2MB). This limits the number of threads you can have in a system to at most tens of thousands of threads for machines with large RAM. In a web server running a separate thread per client, this will limit the number of clients you can serve, although most of the threads may be idle (e.g. waiting on I/O). <a href="http://programmers.stackexchange.com/questions/173575/what-is-a-thread-pool">Thread pools</a> and queues can be used to resolve the issue and to avoid excessive thread allocation. This may result in further contention, as the access to the pool itself must be synchronised and the number of incoming requests may be greater than the pool size, which is still limited by the maximum number of threads in the system.

<h1>Green Threads</h1>

When Java was introduced 20 years ago it featured threads as a core concept and aimed to run on all platforms. At that point some platforms (e.g. old Solaris systems) did not have native support for threads and the JVM could not map its threads to OS threads. Hence, they had to emulate threads on top of such platforms. Such threads are called <a href="https://en.wikipedia.org/wiki/Green_threads">Green Threads</a>.

Green threads run in <a href="https://en.wikipedia.org/wiki/User_space">user space</a>, and are scheduled by a library or a virtual machine (VM). Thus, the OS kernel “sees” green threads as belonging to the same process and <a href="http://stackoverflow.com/questions/16965725/why-green-threads-do-not-work-on-multiple-cores">can not schedule them on multiple cores</a> simuateneosly! Therefore, green threads are a concurrency concept, but not a parallel one.

Java has effectively abandoned green threads in favour of mapping to native OS threads.

<h1>Protothreads</h1>

<a href="https://en.wikipedia.org/wiki/Protothreads">Protothreads</a> are defined as stackless threads. All protothreads share the same same stack and context switching is done by “<a href="http://dunkels.com/adam/pt/about.html">stack rewinding</a>”. They are not preemptable, and only switch context when a blocking operation is invoked. As there is no stack, all local variables are not preserved upon a context switch! Protothreads are available only as a C library, and are used for low-memory embedded devices. Documentation is not too much, except for some <a href="http://dunkels.com/adam/dunkels05using.pdf">academic papers</a> and a <a href="https://engineering.purdue.edu/dcsl/reading/2009/rpanta-protothread.pdf">presentation</a>. As they run on a single stack, I assume protothreads are concurrent but not truly parallel. Protothreads seem to be a programming abstraction for event driven programming, rather than a true parallelism enabler.

<h1>Fibers</h1>

Remember that threads are lightweight processes. Well, <a href="https://en.wikipedia.org/wiki/Fiber_(computer_science)">Fibers</a> are lightweight threads :). Fibers implement user space co-operative multitasking, rather than kernel level pre-emptive one. Thus, a fiber can not be forcefully pre-empted by the OS kernel. A fiber must voluntarily yield its execution to allow another one to run. Fibers always start and stop/yield in a number of predefined places. This makes programming easier, as the programmers are guaranteed that their code will not be abruptly interrupted and its data structures accessed by another fiber. However, fibers must play nice and yield now and then to allow concurrency – this can not be delegated to the OS kernel.

Fibers do have their own stacks, but the fiber switching is done in user space by the execution environment, not the OS kernel generic scheduler. Yielding and resuming are respectively performed by saving and restoring the fiber's execution context/stack also more generally known as <a href="https://en.wikipedia.org/wiki/Continuation">continuation</a>. Fibers have small stacks stored and managed in user space. These factors allegedly significantly <a href="http://locklessinc.com/articles/new_threading/">improving their performance</a> compared to threads.

Fibers are a concurrency concept, but are not truly parallel. Typically, each fiber has a parent thread, just as each thread belongs to a process. Multiple fibers from the same thread can not run simultaneously. In other words, multiple execution paths can coexists in the form of fibers (i.e. concurrency) but they can not actually run at the same time (parallelism).

[caption id="attachment_456" align="aligncenter" width="620"]<img src="http://www.nikgrozev.org/wp-content/uploads/2015/07/fiber.png" alt="Multiple Fibers in a thread." width="620" height="494" class="size-full wp-image-456" /> Multiple Fibers in a thread.[/caption]

Fibers are usually short-lived tasks, unlike threads which are usually long lived. Hence, fibers can have smaller stacks. For instance, the <a href="http://docs.paralleluniverse.co/quasar/">Quasar</a> library allows you to specify the stack size of new fibres. Hence, you can have much more fibers (i.e. millions) than threads (thousands).

There are a lot of articles online about the <a href="http://docs.paralleluniverse.co/quasar/">Quasar</a> library, which supports fibers in Java. In my opinion Quasar fibers are not true fibers as per the above definition, and look more like goroutines, as they can achieve true parallelism and communicate via channels. They are more flexible, but not the same :).

So let's give an example of fibers in Ruby. The following example defines a Fiber, which generates the Fibonacci numbers and is a modified version of the <a href="http://www.infoq.com/news/2007/08/ruby-1-9-fibers">InfoQ</a> example. After each number is generated, the fiber yields. Once it is resumed, the fiber reinstates its stack, generates another number and yields again.

<pre><code class="ruby">require 'fiber'
fib = Fiber.new do
    x, y = 0, 1
    loop do
        puts y
        Fiber.yield
        x,y = y,x+y
    end
end
</code></pre>

It is responsibility of the caller to start and resume the fibers. The following lines print the first 20 Fibonacci numbers.

<pre><code class="ruby">20.times { fib.resume }
</code></pre>

Computing Fibonacci may not be the most impressive or useful example. Indeed, there is a much better use case. Let's assume we have a wrapper of a native async library for downloading HTTP resources. The methods of this library can be provided with callbacks, which are executed once the async operation completes. In this scenario the fiber can start an asynchronous HTTP operation and the yield. As a callback, we can provide an expression which resumes the fiber.

So we can have a fiber yield, while an external native library is doing extensive I/O, and then resume once this is done. Upon resuming the fiber can for example update the user interface (UI). This happens on the same thread! The alternative would be to start a separate thread for the I/O task, which blocks until it is complete and then concurrently modifies the UI.

For an example of how to use Fibers in Ruby in such situation, you can check <a href="https://www.igvita.com/2010/03/22/untangling-evented-code-with-ruby-fibers/">out this article</a>.

In fact this approach of wrapping a long running backround task in a fiber is so widesperead, that C# introduces a specialised <a href="https://en.wikipedia.org/wiki/Await">Async/Await</a> language structure for it.

As I mentioned, there is still some ambiguity with regards to many concurrency terms. For example in <a href="http://docs.paralleluniverse.co/quasar/">Quasar</a> fibers can run in parallel. <a href="https://www.haskell.org/ghc/">GHC</a> and <a href="https://en.wikipedia.org/wiki/Mercury_%28programming_language%29">Mercury</a> can migrate fibers from one thread to another, and GHC can even preempt them. In this section I've use the <a href="https://en.wikipedia.org/wiki/Fiber_%28computer_science%29">Wikipedia definition of Fiber</a>, but other definitions exists as well.

<h1>Generators</h1>

As a step towards coroutines, we will discuss <a href="https://en.wikipedia.org/wiki/Generator_(computer_programming)">g</a><a href="https://en.wikipedia.org/wiki/Generator_(computer_programming)">enerators</a>, also known as semicoroutines. You're probably familiar with this concept if you've studied python or a functional language like Lisp.

Most programming languages have the concept of <a href="https://en.wikipedia.org/wiki/Subroutine">subroutines</a> in the form of procedures, functions or methods. When called, a typical subroutine completes at once and returns a single value. It does not hold any state between invocations.

From the client code, a generator looks like a normal subroutine – it can be invoked and will return a value. However, a generator yields (rather than return!) a value and preserves its state – i.e. the values of the local variables. Again, this is known as continuation. When this generator is called again, its state is restored and the execution continues from the point of the last yielding until a new yield is encountered. Subroutines can be thought of as generators which never yield.

The following example demonstrates a python 2 generator, which consequently produces numbers greater than n.

<pre><code class="python">def countfrom(n):
    while True:
        yield n
        n += 1
</code></pre>

The following invocations demonstrate how generators work. Note that in python 2, the next method is used to call a generator.

<pre><code class="python"># Create a generator
g = countfrom(5)
# Prints 5
print (g.next())
# Prints 6
print (g.next())
</code></pre>

The first invocation of the generator reaches the yield statement, saves the local variable state (n=5) and yields its value. The second invocation restores the local variable (n=5), continues the execution after the yield statement and hence increases n to 6&#46; When yield is reached again, the local variable state (n=6) is saved again and yielded to the caller.

Perhaps you can see a lot similarity between generators and fibers. Indeed, they are almost equivalent concepts. When a generator reaches a yield statement it saves its state and allows other code to execute. The same thing happens with a fiber, which saves its stack and lets another fiber run. When a generator is called, it restores its state and executes until a yield statement is encountered again. The same happens with a fiber, which once it is resumed runs uninterupted until it voluntarily yields.

<h1>Coroutines</h1>

Using a fiber library can be cumbersome, and thus some programming languages introduce <a href="https://en.wikipedia.org/wiki/Fiber_(computer_science)">c</a><a href="https://en.wikipedia.org/wiki/Fiber_(computer_science)">oroutines</a>. The two concepts are functionally equivalent. However, coroutines are implemented with specific syntax on the programming language level.

Coroutines are a generalisation of generators. When you are invoking a generator you can not specify a parameter - i.e. in the previoous example we could not write g.next(7). Coroutines allow for this. When the coroutine is resumed, the specified value is provided to it in the form of a result of yield. The following example illustrates this:

<pre><code class="python">def countfrom(n):
    while True:
        i = yield n
        n += i
</code></pre>

This code can be invoked as:

<pre><code class="python"># Create the coroutine
g = countfrom(5)
# First call to the coroutine – Prints 5
print(g.next())
# Prints 7
print(g.send(2))
# Prints 10
print(g.send(3))
</code></pre>

In Python 2 there are some syntactic specifics. When you call a coroutine for the first time, you have to use <u>next</u>, just like with generators. Subsequent calls must use the <u>send</u> method, providing the actual value. This is needed, because in the beginning the coroutine is not halted/paused on a yield statement. The invocation of <span style="text-decoration:underline;">next</span> intialises it to such a state. Subsequent invocations of send actually illustrate the invocation of the coroutine.

Philosophically speaking, subroutines and coroutines are two different ways to structure a program. With subroutines, you're dividing the program into subparts which execute to completion one after another. With coroutines, you divide your programs into collegial parts, whose lifecycles overlap, and which exchange messages by yielding to each other. If that was a bit too abstract, you may want to consult <a href="http://wla.berkeley.edu/~cs61a/fa11/lectures/streams.html#coroutines">Berkley's lectures</a> for more details.

More details on Python generators and coroutines can be found in <a href="http://www.dabeaz.com/coroutines/Coroutines.pdf">David Beazley's presentation</a>.

Remember that coroutines are not truly parallel. The same is true for generators and fibers. You can still avoid CPU blocking if you start some native asynchronous I/O and then yield, but you can not use multiple CPU cores simultaneously.

<h1>Goroutines</h1>

The <a href="https://en.wikipedia.org/wiki/Go_(programming_language)#Concurrency:_goroutines.2C_channels.2C_and_select">Go programming language</a> introduces the concept of <a href="http://blog.nindalf.com/how-goroutines-work/">Goroutines</a>. They have been described as coroutines which can run in parallel. In terms of implementation, the Go runtime environment maintains an internal pool of native OS threads. Each goroutine is assigned to a thread from this pool which executes its logic. Once a goroutine blocks (e.g. for I/O) the runtime environment can use its thread for another goroutine. When a routine resumes, there is no guaranteer that it will be scheduled on the same thread.

Each goroutine's logic is in fact defined in a function. The Go runtime acts as a mediator which schedules these functions on the underlying thread pool. In some special cases, a long running goroutine can be preemted and its thread given to another routine. Otherwise, the assignment of goroutines to threads is not preemptable. The overall goal is to minimise the time threads are blocked, and thus serve the application with fewer threads and context switches.

[caption id="attachment_455" align="aligncenter" width="186"]<img src="http://www.nikgrozev.org/wp-content/uploads/2015/07/goroutine.png" alt="Goroutines" width="186" height="344" class="size-full wp-image-455" /> Goroutines[/caption]

Goroutines communicate with each other via channels, similarly to processes communication. This alleviates the synchronisation issues of shared memory communication that threads have. This also bears some resemblance with how coroutines communicate by yielding values to each other.

<h1>Actors</h1>

Alike the Object Oriented Model, the <a href="https://en.wikipedia.org/wiki/Actor_model">Actor Model</a> is a way to model computation. Originally developed in the 70s, the actor model is in fact rather simple. It introduces a single concept (the actor) which has a few basic properties.

So what is an Actor? According to the <a href="https://www.youtube.com/watch?v=7erJ1DV_Tlo">overview by Hewit et al.</a> an actor has the following properties:

<ol>
<li>Processing – an actor can do computation;</li>
<li>Storage – an actor can maintain state, similar to a Java object;</li>
<li>Communication – an actor can receive and send messages from and to other actors.</li>
</ol>

In the actor model, a system is represented as a set of actors which exchange messages. When an actor receives a message, it can do one or few of the following:

<ol>
<li>Send messages to other actors;</li>
<li>Create new actors;</li>
<li>Change its state – this new state will be used for processing the future message.</li>
</ol>

A single actor is inherently non-concurrent (i.e. single threaded) and you need not worry about synchronising the access to its state. However, implementations of this model can run an actor's logic in parallel if it is stateless/immutable – i.e. it does not use the last option of the above list. If an actor is stateful the implementation may choose to do some queuing. Either way, at a conceptual level you can think of actors as running one message at a time.

When an actor sends a message, it does not wait for confirmation or response (think UDP not TCP). Also, there are no guarantees about the order of message arrivals or delays. Hence, actors communicate in a completely asynchronous and distributed fashion. Moreover, actors are the atomic components in this model, share no state and are themselves non-concurrent thus removing the need for locks and synchronisation. Once you've built an actor model, it is inherently concurrent. You can deploy on multiple cores and even networked machines to achieve true parallelism.

As a practical example of an Actor-based framework we can consider <a href="https://en.wikipedia.org/wiki/Akka_(toolkit)">Akka</a> - one of the most prominent implementations targeted at the JVM. In Akka actors are arranged in a hierarchy. Each actor is identified with its path from the root. Every parent actor is designated as a supervisor of its child actors. An actor can implement its own supervisor strategy, which gets executed when supervised actors fails. Typically, this is used for restarting or recreating failed actors.

Under the hood Akka uses a thread pool. Based on the <a href="http://stackoverflow.com/questions/20673206/how-are-akka-actors-implemented-on-underlying-threads">configuration and the message dispatchers</a> (classes forwarding messages to actors), Akka schedules the actors on the available threads. Actors can also be replicated and put behind a <a href="https://www.packtpub.com/books/content/dispatchers-and-routers">Dispatcher</a> which load balances the incoming messages among them. This can increase availability and responsiveness. Finally, actors can be transparently distributed on <a href="http://www.typesafe.com/activator/template/akka-distributed-workers">multiple machines or a cluster</a>.

[caption id="attachment_459" align="aligncenter" width="189"]<img src="http://www.nikgrozev.org/wp-content/uploads/2015/07/actors.png" alt="Actors" width="189" height="401" class="size-full wp-image-459" /> Actors[/caption]

<h1>LMAX Disruptor</h1>

The <a href="http://lmax-exchange.github.io/disruptor/">LMAX Disruptor</a> method is a way to implement producer-consumer systems more efficiently. It has been implemented as a Java library, but the approach can be applied in non-JVM environments. While actors, goroutines, and fibers propose efficient concurrent models “on top” of threads, the Disruptor library embraces the multi-threaded approach and tries to improve it. It does so by preallocating memory, avoiding excessive locks and utilising modern processors' capabilities.

The library creators argue that locking data between threads is the main culprit for system latency. To a certain extent this has been mitigated by the Compare and Swap (CAS) capability of modern processors, allowing a piece of memory to be conditionally written in a single atomic instruction. This is how most <em>java.util.concurrent</em> atomic types work under the hood. Even with CAS, locking seems to be a performance bottleneck, as the CPU internally must lock its instructions pipeline.

Another major problem of the producer-consumer systems is the dynamic nature of queues, which are used to store data in a producer-consumer approach. Such queues can usually grow and shrink dynamically resulting in runtime memory allocation and garbage collection. This can significantly degrade performance. Furthermore, most queues are implemented as linked lists, and thus occupy non-adjacent memory addresses. This hinders the memory locality of CPU operations and can lead to many cache misses. Hence, the Disruptor library preallocates a static array of memory, which it uses throughout the execution.

The data structure they use is a ring buffer, which is implemented as an array. The elements/objects of this array are preallocated. To achieve the ring effect, the remainders of all indices are used. Let's assume there is a single producer. There will be a single index within the ring buffer designating the lastly written element. Once the producer creates/produces an input entry, the corresponding buffer entry will be updated and the counter incremented. That update should be “in-place” to avoid creating garbage. Each consumer maintains its own index designating the last read item. It waits until that index precedes the index of the producer and then can consume all newly produced elements. Waiting can be done in multiple ways – e.g. periodically polling. When multiple producers are involved, LMAX Disruptor can use CAS locking to determine the value of the producer index for each of them.

Using this approach we can avoid locking in most circumstances and we only use a preallocated fixed size data structure. However, if the producer significantly outpaces the consumers the buffer won't be enough. Hence, it's a good idea to preallocate huge buffers of thousands or even millions of elements. This will allow the consumers to catch up with a producer which suddently spikes in demand. If the consumers can't catch up given such a huge buffer, then such computation would not be viable with any other queuing model as well – the only solution would be to improve the throughput of the consumers.

Apart from simple producer-consumer systems, the LMAX Disruptor can also increase the performance of pipeline or workflow systems. As one node is continuously producing/streaming data, the dependent nodes can consume it in real time with minimal latency.

[caption id="attachment_457" align="aligncenter" width="459"]<img src="http://www.nikgrozev.org/wp-content/uploads/2015/07/disruptor.png" alt="LMAX Disruptor" width="459" height="448" class="size-full wp-image-457" /> LMAX Disruptor[/caption]

<h1>Summary and Comparison</h1>

Green threads are emulated in user space. They are mostly used in environments where threads can not be mapped to native OS threads. Not used too much these days. Protothreads are stackless ligthweigth threads implemented in C. Won't see them too much, unless you're programming embedded low memory devices.

Fibers and Coroutines model the same concept. They are not truly parallel. However, they can make your life easier when dealing with asynchronous I/O. You can yield the fiber/coroutime after starting the I/O operation, and then resume it afterwards to update the user interface for example. This is much more efficient and elegant than using a background thread.

The Goroutines were defined in the Go programming language. Each Goroutine is a function which runs asynchronously. The runtime environment maps the goroutines to a pool of native OS threads in a way which minimises thread blocking and context switching.

The Actor model allows you to design a program in terms of entities/actors exchanging asynchronous messages. It is inherently decentralised, without locks, and an actor-based program can easily scale to multiple cores or machines. The most popular JVM actor system Akka maps actors to a pool of underlying threads, similarly to goroutines.

The LMAX Disruptor approach embraces threads, rather than trying to avoid them. It reduces the locking and communication overhead of message queues in a producer-consumer relationship.

<blockquote>
  <strong>Updated</strong>: with comments from <a href="https://plus.google.com/102336990940917072907/posts">Paul Bone</a>
</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>453</wp:post_id>
		<wp:post_date><![CDATA[2015-07-14 18:00:39]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-07-14 07:00:39]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[overview-of-modern-concurrency-and-parallelism-concepts]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="coroutine"><![CDATA[coroutine]]></category>
		<category domain="post_tag" nicename="fiber"><![CDATA[fiber]]></category>
		<category domain="post_tag" nicename="goroutine"><![CDATA[goroutine]]></category>
		<category domain="post_tag" nicename="lmax-disruptor"><![CDATA[lmax-disruptor]]></category>
		<category domain="category" nicename="miscellaneous"><![CDATA[Miscellaneous]]></category>
		<category domain="post_tag" nicename="thread"><![CDATA[thread]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[geo_public]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_job_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[12710267798]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_linkedin_publicize_failure]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_failed_5425643]]></wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_external]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:5385644;s:59:"https://twitter.com/nikolaygrozev/status/620850386753077248";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_5425648]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_user]]></wp:meta_key>
			<wp:meta_value><![CDATA[nikolaygrozev]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_google_plus_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+NikolayGrozev/posts/BhL5pSZeaGK]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_5425656]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[458]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>112</wp:comment_id>
			<wp:comment_author><![CDATA[jiacai2050]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jiacai2050@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://liujiacai.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.90.235.94]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-03-06 17:21:14]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-03-06 06:21:14]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>Reblogged this on <a href="https://liujiacai.wordpress.com/2016/03/06/overview-of-modern-concurrency-and-parallelism-concepts/" rel="nofollow">liujiacai</a> and commented: 
good summary about those confusing concepts</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1457868324]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1457868325.01589298248291015625;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1457868324]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[reblog_ping]]></wp:meta_key>
				<wp:meta_value><![CDATA[1]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1457249170.6715700626373291015625;s:5:"event";s:9:"check-ham";s:4:"user";s:10:"jiacai2050";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1457245275.309568881988525390625;s:5:"event";s:9:"check-ham";s:4:"user";s:10:"jiacai2050";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2016-03-06 06:21:14]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>113</wp:comment_id>
			<wp:comment_author><![CDATA[jiacai2050]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[jiacai2050@gmail.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://liujiacai.wordpress.com</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[203.90.235.94]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-03-06 17:21:31]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-03-06 06:21:31]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>good summary about those confusing concepts</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1457245292.1968948841094970703125;s:5:"event";s:9:"check-ham";s:4:"user";s:10:"jiacai2050";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1457246517.16343402862548828125;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[email_notification_notqueued]]></wp:meta_key>
				<wp:meta_value><![CDATA[1457246516]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1457246516]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2016-03-06 06:21:31]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>114</wp:comment_id>
			<wp:comment_author><![CDATA[python, ruby, javascript 浅析 &#8212; 好JSER]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://hao.jser.com/archive/9911/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[182.254.140.159]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-03-28 19:10:51]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-03-28 08:10:51]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>[&#8230;] Overview of Modern Concurrency and Parallelism Concepts （需翻墙，强烈推荐读者看） [&#8230;]</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1459157793.315277099609375;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1459157792]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1459152652.882915973663330078125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2016-03-28 08:10:51]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>120</wp:comment_id>
			<wp:comment_author><![CDATA[Bill D Strong (@BillDStrong)]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[BillDStrong@twitter.example.com]]></wp:comment_author_email>
			<wp:comment_author_url>http://twitter.com/BillDStrong</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[72.87.56.147]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-06-18 07:25:09]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-06-18 07:25:09]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[While coroutines in python may be considered as a generalisation of generators, that is because python uses its own definitions for these two structures that don't corespond to the general literature. 

Coroutines are a generalized abstraction over subroutines. They are slightly higher level than subroutines. I recomend a recent video that gives a brief history of coroutines in refernect to the new C++ specification (that seems not to be going into C++17, unfortunately).

https://www.youtube.com/watch?v=_fu0gx-xseY

Otherwise nice overview.]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_post_as]]></wp:meta_key>
				<wp:meta_value><![CDATA[twitter]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_avatar]]></wp:meta_key>
				<wp:meta_value><![CDATA[http://pbs.twimg.com/profile_images/564897761242267648/K_f5SMRj_normal.jpeg]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[hc_foreign_user_id]]></wp:meta_key>
				<wp:meta_value><![CDATA[2477248645]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Summary of the Oracle JDK8 MOOC</title>
		<link>http://www.nikgrozev.org/2015/07/30/summary-of-the-oracle-jdk8-mooc/</link>
		<pubDate>Thu, 30 Jul 2015 08:49:35 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">https://nikolaygrozev.wordpress.com/?p=477</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Introduction</h1>

In a <a href="www.nikgrozev.org/2014/03/21/java-8-in-a-nutshell/">previous post</a> I summarised the new functional features of Java 8. Oracle has recently released a 3-week <a href="https://blogs.oracle.com/thejavatutorials/entry/jdk_8_massive_open_and">JDK 8 Massive Open and Online Course called "Lambdas and Streams</a>”, which discusses the new JDK8 functional features in much more details. It's a great course and if you're interested in Java and new JDK8 it can help you get started. This article summarises the course and my previous post and can be used as a quick ref-card.

<!-- ---------------------------------------------------------------------- -->

<h1>Lecture 1: Lambda Expressions</h1>

<h2>Lambda Syntax</h2>

To understand lambdas, first we need to understand functional interfaces. In Java 8, an interface is called functional, if it has only one abstract method. In previous Java versions, all interface methods were abstract. In Java 8 interfaces can have default and static methods as well. In order for an interface to be function it should have exactly one abstract method regardless if any default or static methods are defined. It is recommended to annotate functional interfaces with the <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/FunctionalInterface.html">@FunctionalInterface</a> annotation so that the compiler can check if they meet the requirement.

In Java, a lambda function can be thought of as a syntactic short-cut for defining anonymous instances of functional interfaces. Lambda expressions are defined with the following pattern:

<pre><code>(param1, param2, ... , paramN) -&gt; expression | block of code
</code></pre>

If the parameter list has only one parameter, the brackets can be omitted. Note that there are no types in the lambda definitions, as types are automatically inferred from the functional interface definition. Types can be defined explicitly, but this is not required. The body of the lambda expressions can be either a single expression (whose evaluation is the result of the function call) or a block of code, similar to a method definition. The following examples demonstrate functionally equivalent definitions:

<pre><code class="java">Comparator &lt;Integer&gt; cmp1 = (x, y) -&gt; x.compareTo(y);   // Expression body. Types NOT specified
Comparator &lt;Integer&gt; cmp2 = (Integer x, Integer y) -&gt; { // Block of code body. Types specified
    return x.compareTo(y);
};
Comparator &lt;Integer&gt; cmp3 = new Comparator&lt;Integer&gt;() { // Java 7 style
    public int compare(Integer x, Integer y) {
        return x.compareTo(y);
    }
};

Runnable r1 = () -&gt; System.out.println("Test");         // Expression body
Runnable r2 = () -&gt; { System.out.println("Test"); };    // Block of code body
Runnable r3 = new Runnable() {                          // Java 7 style
    public void run() {
        System.out.println("Test");
    }
};
</code></pre>

Alike anonymous classes, lambdas can use the variables of their environment. When using local variables in lambdas, the must be <u>effectively final</u>, which means they are not assigned to from anywhere, regardless if they are actually marked as final.

<h2>Method References</h2>

Lambdas are a neat way to implement functional interfaces, but often all they do is call an existing method. To make things simpler Java 8 introduces method references. Method references are a shorthand for implementing functional interfaces by calling already defined methods.

There are four types of method references:

<table style="width:100%;">
    <thead>
        <tr>
            <th>Reference to</th>
            <th>Syntax</th>
            <th>Lambda Equivalent</th>
        </tr>
    </thead>
    <tbody>
    <tr>
        <td>Static method</td>
        <td>Class::staticMethod</td>
        <td>(param1, ... paramN) -&gt; Class.staticMethod(param1, ... paramN)</td>
    </tr>
    <tr>
        <td>Specific instance's method</td>
        <td>var::instanceMethod</td>
        <td>(param1, ... paramN) -&gt; var.instanceMethod(param1, ... paramN)</td>
    </tr>
    <tr>
        <td>Instance method</td>
        <td>Class::instanceMethod</td>
        <td>(var, param1, ... paramN) -&gt; var.instanceMethod(param1, ... paramN)</td>
    </tr>
    <tr>
        <td>Constructor</td>
        <td>Class::new</td>
        <td>(param1, ... paramN) -&gt; new Class(param1, ... paramN)</td>
    </tr>
    </tbody>
</table>

The following examples demonstrate equivalent definitions with method references and lambdas:

<pre><code class="java">Predicate &lt;String&gt; p1 = Boolean::getBoolean;         // Static method reference
Predicate &lt;String&gt; p2 = s -&gt; Boolean.getBoolean(s);  // Equivalent lambda

String var = "TestEquality";
Predicate &lt;String&gt; p1 = var::equals;         // Specific instance's method reference
Predicate &lt;String&gt; p2 = s -&gt; var.equals(s);  // Equivalent lambda

Predicate &lt;String&gt; p1 = String::isEmpty;     // Instance method reference
Predicate &lt;String&gt; p2 = s -&gt; s.isEmpty();    // Equivalent lambda

Predicate &lt;String&gt; p1 = Boolean::new;           // Constructor reference
Predicate &lt;String&gt; p2 = s -&gt; new Boolean(s);    // Equivalent lambda
</code></pre>

<h2>Functional Interfaces in the standard library</h2>

The standard library has always had a bunch of functional interfaces – Runnable, Callable, Comparator etc. Java 8 introduces a whole new package of functional interfaces called <a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/package-summary.html">java.util.function</a>. In Java there are two kinds of types – referential and primitives. Java generics can only be used with referential types – e.g. List<int> is invalid. Thus, the <u>java.util.function</u> package contains multiple versions of each interface – a generic version for referential types, and specialised versions for the primitives. For example we've got <a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/Consumer.html">Consumer<T></a> and <a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/IntConsumer.html">IntConsumer</a>. In the rest of the article we'll look at the generic interface only.

The main functional interfaces in the package are:

<ul>
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/Consumer.html">Consumer<T></a> - takes an argument of type T returns void;</li>
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/BiConsumer.html">BiConsumer&lt;T,U></a> - a consumer with 2 arguments;</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/Supplier.html">Supplier</a><a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/Supplier.html"><T></a> - takes no argument and returns T;</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/Function.html">Function&lt;T,R></a> - takes an argument of type T and returns R;</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/BiFunction.html">BiFunction&lt;T,U,R></a> - a function of two arguments;</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/UnaryOperator.html">UnaryOperator<T></a> - shorthand for Function&lt;T,T>;</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/BinaryOperator.html">BinaryOperator<T></a> - shorthand for BiFunction&lt;T,T>;</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/Predicate.html">Predicate</a><a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/Predicate.html"><T></a> - given an argument of type T returns a boolean;</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/BiPredicate.html">BiPredicate&lt;T,U></a> - given arguments of types T and U, returns a boolean.</p></li>
</ul>

<p>The consumer interfaces in the above list have a default method <a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/Consumer.html#andThen-java.util.function.Consumer-">andThen</a>, which takes as an argument another consumer. The result is a new consumer instance, which runs the two consumers one after the other, as in the example:

<pre><code class="java">//Define two consumers
Consumer &lt;String&gt; helloConsumer = name -&gt; System.out.println("Hello, " + name);
Consumer &lt;String&gt; byeConsumer = name -&gt; System.out.println("Bye, " + name);

//Create and call a composite consumer which “chains” the previous two
Consumer &lt;String&gt; helloByeConsumer = helloConsumer.andThen(byeConsumer);

// Prints "Hello, Guest\nBye, Guest"
helloByeConsumer.accept("Guest");
</code></pre>

The <u>andThen</u> default method of the function interfaces works similarly – it chains the function invocation as in <u>f(g(x))</u>. The <u>compose</u> method does the same, but swaps the functions – i.e. <u>g(f(x))</u> instead of <u>f(g(x))</u>. The following example demonstrates this:

<pre><code class="java">UnaryOperator &lt;Integer&gt; plus1 = x -&gt; x + 1;
UnaryOperator &lt;Integer&gt; mult2 = x -&gt; x * 2;

//Create a new function with andThen
Function &lt;Integer, Integer&gt; plus1Mult2 = plus1.andThen(mult2);
System.out.println(plus1Mult2.apply(1));// Prints 4

//Create a new function with compose
Function &lt;Integer, Integer&gt; mult2Plus1 = plus1.compose(mult2);
System.out.println(mult2Plus1.apply(1)); // Prints 3
</code></pre>

<strong>Note</strong>: in the above example you may wish to use <a href="https://docs.oracle.com/javase/8/docs/api/java/util/function/IntUnaryOperator.html">IntUnaryOperator</a> instead of UnaryOperator<Integer> to avoid excessive boxing/unboxing.

Similarly, the predicate interfaces have default methods <u>and</u>, <u>or</u> and <u>negate</u>, which can be used to create new predicates with combined logic.

<h2>New Methods in JDK 8</h2>

The Java 8 standard collections library introduces several new methods which use functional interfaces:

<ul>
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html#forEach-java.util.function.Consumer-">Iterable.forEach(Consumer c)</a> – iterates and applies the consumer to each element;</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html#removeIf-java.util.function.Predicate-">Collection.removeIf(Predicate p)</a> – removes all elements for which the predicate returns true;</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/List.html#replaceAll-java.util.function.UnaryOperator-">List.replaceAll(UnaryOperator o)</a> – replaces all elements with the result of the argument operator;</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/List.html#sort-java.util.Comparator-">List.sort(Comparator c)</a> - replaces <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Collections.html#sort-java.util.List-">Collections.sort</a>.</p></li>
</ul>

<p>Also, many methods of the standard <a href="https://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html">Logger</a> have been overloaded to take as an argument a <u>Supplier<String></u> instance, instead of string. For example, when the <a href="https://docs.oracle.com/javase/8/docs/api/java/util/logging/Logger.html#fine-java.util.function.Supplier-">Logger.fine(Supplier<String>)</a> method is invoked it will only call the provided supplier if the logging level is below or equal to <u>Fine</u>. Otherwise, the supplier will not be called leading to fewer operations like string concatenation and formatting.

<!-- ---------------------------------------------------------------------- -->

<h1>Lecture 2: The Streams API</h1>

<h2>Streams</h2>

JDK 8 defines a stream as a sequence of elements. Streams of referential elements inherit from the <a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html">Stream<T></a> interface, and there are specialised interfaces for streams of primitives. Once again we'll only consider the generic types, as the primitive streams offer analogous functionalities.

Streams are usually used in a pipeline of operations, where each operation produces or transforms a stream until a result is derived. Hence, each stream operation can be can be classified as:

<ul>
<li>Stream source – generates a stream;</p></li>
<li><p>Inermediate operation – processes a stream;</p></li>
<li><p>Terminal operation – given a stream, yields the final result.</p></li>
</ul>

<p>[caption id="attachment_478" align="alignnone" width="946"]<img src="http://www.nikgrozev.org/wp-content/uploads/2015/07/streamoverview.png" alt="Working with streams" width="946" height="85" class="size-full wp-image-478" /> Working with streams[/caption]

Sources of streams can be collections and arrays through the following methods and their overloads:

<ul>
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html#stream--">Collection.stream()</a> - converts the collection to a stream;</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/Collection.html#parallelStream--">Collection.parallelStream()</a> - converts to a stream, which can be subjected to parallel processing;</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#stream-T:A-">Arrays.stream(</a><a href="https://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#stream-T:A-">T[]</a><a href="https://docs.oracle.com/javase/8/docs/api/java/util/Arrays.html#stream-T:A-">)</a> - utility method converting the provided array to a stream;</p></li>
</ul>

<p>Other typical sources of streams are random number generators (see <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Random.html">Random</a>), lists of file paths (see <a>Files</a>) and list of lines in a text (see <a href="https://docs.oracle.com/javase/8/docs/api/java/io/BufferedReader.html">BufferedReader</a>).

The generic <a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html">Stream<T></a> interface and its primitive counterparts provide several utility source functions for creating or transforming streams:

<ul>
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#concat-java.util.stream.Stream-java.util.stream.Stream-">Stream.concat(Stream, Stream)</a> - returns the concatenation of the two streams.</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#empty--">Stream.empty()</a> - creates an empty stream;</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#of-">Stream.of(T... values)</a> - a new stream with the specified values;</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/IntStream.html#of-">IntStream.range(int, int)</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/IntStream.html#rangeClosed-int-int-">Int</a><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/IntStream.html#rangeClosed-int-int-">Stream.rangeClosed(int, int)</a> – a new integer stream representing a range.</p></li>
</ul>

<p>The intermediate operations are usually implemented as methods of the <a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html">Stream<T></a> interface and its primitive counterparts. The most important are:

<ul>
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#distinct--">Stream.distinct()</a> - returns a stream with the unique elements.</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#filter-java.util.function.Predicate-">Stream.filter(Predicate p)</a> - returns a stream with the elements for which the predicate returns true.</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#map-java.util.function.Function-">Stream.map(Function f)</a> - returns a stream with the result of the function application on each element.</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#flatMap-java.util.function.Function-">Stream.flatMap(Function f)</a> – if the return type of the function is another stream, then <u>map(f)</u> will return a stream of streams, which may not be convenient. The <u>flatMap</u> method resolves this problem by flattening/combining the results into a single result stream.</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#sorted-java.util.Comparator-">Stream.</a><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#sorted-java.util.Comparator-">sorted</a><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#sorted-java.util.Comparator-">(</a><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#sorted-java.util.Comparator-">Comparator c</a><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#sorted-java.util.Comparator-">)</a> – returns a sorted stream.</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#skip-long-">Stream.</a><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#skip-long-">skip</a><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#skip-long-">(</a><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#skip-long-">long n</a><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#skip-long-">)</a> – returns a new stream, which does not contain the first n elements.</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#limit-long-">Stream.</a><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#limit-long-">limit</a><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#limit-long-">(</a><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#limit-long-">long n</a><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#limit-long-">)</a> – returns a new stream, which contains the first n elements.</p></li>
</ul>

<p>The methods <a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#mapToInt-java.util.function.ToIntFunction-">mapToInt</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#mapToDouble-java.util.function.ToDoubleFunction-">mapToDouble</a>, and <a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#mapToLong-java.util.function.ToLongFunction-">mapToLong</a> are handy when converting/mapping a stream of objects to a stream of primitives.

The terminal operations are special, as they cause the pipeline to be evaluated. Prior a terminal operation, the stream operations are only “accumulated” or delayed. This allows the terminal operation to execute effectively (e.g. in parallel) on the aggregated stream.

Most often you would probably use one of the following terminal operations:

<ul>
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#collect-java.util.stream.Collector-">Stream.collect(Collector c)</a> - collects all elements - e.g. in a list or concatenates them in a string.</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#toArray--">Stream.toArray()</a> - converts the stream to array.</p></li>
<li><p><a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#reduce-U-java.util.function.BiFunction-java.util.function.BinaryOperator-">Stream.reduce(BinaryOperator accumulator)</a> – consequently applies the accummulator over all elements until it yields a single value. Example: multiply all integers.</p></li>
</ul>

<p>Other frequently used terminal methods are <u>count</u>, <u>max</u>, and <u>min,</u> which return <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html">Optional</a> instances.

<h2>Optionals</h2>

In Java 8, <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html"><u>Optiona</u></a><a href="https://docs.oracle.com/javase/8/docs/api/java/util/Optional.html">l<T></a> is a container which holds a reference to an object or <u>null</u>. It is used to avoid excessive null checks throughout the code. It can also be thought of as a stream which has either 0 or 1 elements. In that sense, it is a generalisation of the rule that you should prefer to return empty collections and arrays from methods, rather than null.

The count, max and min methods from the previous section all return optionals, whose embedded value is null if the stream is empty.

Instead of doing a <u>null</u> check, you can use the <u>ifPresent(Consumer c)</u> method to run code if the optional contains a value:

<pre><code class="java">Optional &lt;String&gt; opt = …

// Will print only if opt refers to a non-null value
opt.ifPresent(System.out::println);
</code></pre>

You can also use the <u>filter</u> and <u>map</u> methods, as you would do with streams.

<!-- ---------------------------------------------------------------------- -->

<h1>Lecture 3: More Advanced Lambdas and Stream Concepts</h1>

The <a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#reduce-java.util.function.BinaryOperator-">Stream.reduce(BinaryOperator)</a> method is a terminal operation which aggregates the stream to a single value. The provided operator is applied to <u>null</u> and the first element, then its result and the second element are fed in the operator and so on … until a single value is achieved. There is no guarantee as to the actual sequence of execution, but the result is always as if the aforementioned procedure is executed. This can be used to implement things like computing the min, max or sum of all elements. In fact, streams already have predefined short-cut methods for these functionalities. The reduction mechanism is a generalisation of this concept, and the reduce method has overloads providing additional parameters.

Given an infinite stream, the <a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#findFirst--">Stream.findFirst</a> and <a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#findAny--">Stream.findAny</a> methods are typically used to terminate it and return a value matching the specified predicate wrapped in an Optional. The <u>findFirst</u> method returns the first match, while <u>findAny</u> can return any match thus allowing for parallelism behind the scenes.

<pre><code class="java">// Find a random positive and even integer
int r = Random.ints().findFirst(i -&gt; i &gt; 0 &amp;&amp; i % 2 == 0);

int[] a = new int[] {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
// Can return either 2, 4, 6, 8, or 10
int i = Arrays.stream(a).findAny(i -&gt; i % 2 == 0);
</code></pre>

Another terminal operation is <a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html#collect-java.util.stream.Collector-">Stream.collect(Collector)</a> which converts the stream to a container – usually this is a collection or a string. The collector parameter defines how the stream elements will be converted to the resulting container. The <a href="https://docs.oracle.com/javase/8/docs/api/java/util/stream/Collectors.html">Collectors</a> class defines utility methods for instantiating and combining common collectors.

<pre><code class="java">Stream &lt;Integer&gt; s = Arrays.stream (new Integer[] {1, 2, 3, 4});

// To list and set
List &lt;Integer&gt; lst = s.collect(Collectors.toList());
Set &lt;Integer&gt; set = s.collect(Collectors.toSet());

// Map of same keys and values
Map &lt;Integer, Integer&gt; map = s.collect(Collectors.map(Function.identity(), Function.identity()));

// A string of all values with a separator
String toString = s.collect(Collectors.joining(","));
</code></pre>

Streams can be serial or parallel. All operations on a sequential stream are run in sequence on a single thread. Operations on a parallel streams are run in a thread pool using the <a href="https://docs.oracle.com/javase/tutorial/essential/concurrency/forkjoin.html">Fork Join framework</a>. The size of the thread pool is determined by the number of available processors, but could be overridden by setting a system property.

Parallel streams can be created directly from collections through the <u>parallelStream</u> method. Every stream can be made parallel or sequential with the respective stream methods.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>477</wp:post_id>
		<wp:post_date><![CDATA[2015-07-30 19:49:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-07-30 08:49:35]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[summary-of-the-oracle-jdk8-mooc]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="java"><![CDATA[java]]></category>
		<category domain="post_tag" nicename="jdk8"><![CDATA[jdk8]]></category>
		<category domain="post_tag" nicename="mooc"><![CDATA[MOOC]]></category>
		<category domain="post_tag" nicename="oracle"><![CDATA[Oracle]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[geo_public]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385639]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_job_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[13232733361]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[478]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Pandas in Jupyter - Quickstart and Useful Snippets</title>
		<link>http://www.nikgrozev.org/2015/12/27/pandas-in-jupyter-quickstart-and-useful-snippets/</link>
		<pubDate>Sun, 27 Dec 2015 01:14:57 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">https://nikolaygrozev.wordpress.com/?p=489</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Table of Contents</h1>

<ul>
<li><a href="#introduction">Introduction</a></li>
<li><a href="#installing_and_importing">Installing and Importing</a></li>
<li><a href="#toc">Table of Contents</a></li>
<li><a href="#creating_data_frames">Creating Data Frames</a>

<ul>
<li><a href="#loading_csv_files">Loading CSV Files</a></li>
<li><a href="#hardcoded_dataframes">Hardcoded Dataframes</a></li>
</ul></li>
<li><a href="#previewing_data">Previewing Data</a></li>
<li><a href="#sorting">Sorting</a></li>
<li><a href="#selecting_querying">Selecting/Querying</a></li>
<li><a href="#modifying_data_frames">Modifying Data Frames</a></li>
<li><a href="#dates_and_time">Dates and Time</a></li>
<li><a href="#plotting">Plotting</a>

<ul>
<li><a href="#set_up">Set Up</a></li>
<li><a href="#basic_plotting">Basic Plotting</a></li>
<li><a href="#further_reading">Further Reading</a></li>
</ul></li>
</ul>

<a name="introduction"></a>

<h1>Introduction</h1>

This article overviews how to quickly set up and get started with the <a href="http://pandas.pydata.org/">pandas data analysis library</a>. It also lists common code snippets for parsing, loading, and transforming data. For more detailed documentation on pandas' more advanced features (e.g. plot styling and combining data frames) you'll need to refer to other sources.

<a name="installing_and_importing"></a>

<h1>Installing and Importing</h1>

First we need to install python and the <a href="https://pip.pypa.io/en/stable/">pip</a> package manger. If you don't already have them, you can use <a href="https://github.com/yyuu/pyenv">pyenv</a> to easily install them (tested on Ubuntu and OS X). On Ubuntu you can follow <a href="http://opencafe.readthedocs.org/en/latest/getting_started/pyenv/">these instructions</a> to get pyenv. On OS X you can just use brew:

<pre><code class="bash">brew install pyenv
</code></pre>

Once you have pyenv, you can install an configure the desired python version as follows:

<pre><code class="bash"># Install the desired python version - e.g. 3.4.3
pyenv install 3.4.3
# Set it up as a global version - pyenv will reconfigure your PATH accordingly
pyenv global 3.4.3
</code></pre>

Now we can use <em>pip</em> to install pandas, the <a href="http://ipython.org/">ipython</a> shell, and <a href="http://jupyter.org/">jupyter</a>.

<pre><code class="bash">pip install pandas ipython[all] jupyter
</code></pre>

The last two libraries will allow us to create web base notebooks in which we can play with python and pandas. If you don't know what jupyter notebooks are you can see <a href="https://www.youtube.com/watch?v=Rc4JQWowG5I">this tutorial</a>.

Next, we need to start jupyter. I find it useful to store all notebooks on a cloud storage or a folder under version control, so I can share between multiple machines. This can be achieved with an additional parameter as follows:

<pre><code class="bash">jupyter notebook --notebook-dir=~/Dropbox/notebooks
</code></pre>

Next, we need to import pandas in the first cell of the jupyter notebook.:

<pre><code class="bash">import pandas
</code></pre>

<a name="toc"></a>

<h1>Table Of Contents</h1>

When we have a long notebook, it is useful to have an automatically generated table of contents (TOC). The following code (Borrowed from this <a href="http://stackoverflow.com/questions/21188698/what-happend-to-the-toc-extension-for-ipython-notebook/33051798#33051798">post on StackOverflow</a>) installs the TOC jupyter plugin, i.e.:

<pre><code class="bash">## download 
mkdir toc
cd toc
wget https://raw.githubusercontent.com/minrk/ipython_extensions/master/nbextensions/toc.js
wget https://raw.githubusercontent.com/minrk/ipython_extensions/master/nbextensions/toc.css

## install and enable
cd ..
jupyter-nbextension install --user toc
jupyter-nbextension enable toc/toc 
</code></pre>

Then we need to restart the kernel and make the first cell "Markdown" type and add the following:

<pre><code class="html">**Table of Contents**
&lt;div id="toc"&gt;&lt;/div&gt;
</code></pre>

When you save the TOC should appear.

<a name="creating_data_frames"></a>

<h1>Creating Data Frames</h1>

<a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html">Data frames</a> are the central concept in pandas. In essence, a data frame is table with labeled rows and columns. Data frames can be created from multiple sources - e.g. CSV files, excel files, and JSON.

<a name="loading_csv_files"></a>

<h2>Loading CSV files</h2>

Loading a CSV file as a data frame is pretty easy:

<pre><code class="python">data_frame = pandas.read_csv('file.csv', sep=';')
</code></pre>

Sometimes the CSV file contains padding spaces in front of the values. To ignore them use the <em>skipinitialspaces</em> parameter:

<pre><code class="python">pandas.read_csv('file.csv', sep=';', skipinitialspace=True)
</code></pre>

If the padding white spaces occur on both sides of the cell values we need to use a regular expression separator. In this case, we need to use the 'python' processing engine, instead of the underlying native one, in order to avoid warnings. This will degrade the performance a bit:

<pre><code class="python">pandas.read_csv('file.csv', sep='\s*;\s*', skipinitialspace=True, engine='python')
</code></pre>

Sometimes we need to sample the data before loading it, as it is too big to fit in memory. This can be achieved following <a href="www.nikgrozev.org/2015/06/16/fast-and-simple-sampling-in-pandas-when-loading-data-from-files/">this approach</a>.

<a name="hardcoded_dataframes"></a>

<h2>Hardcoded Dataframes</h2>

Hardcoded data frames can be constructed by providing a hash of columns and their values.

<pre><code class="python">df = pandas.DataFrame({
   'col1': ['Item0', 'Item0', 'Item1', 'Item1'],
   'col2': ['Gold', 'Bronze', 'Gold', 'Silver'],
   'col3': [1, 2, np.nan, 4]
})
</code></pre>

We will reuse this data frame in some of the subsequent examples.

<a name="previewing_data"></a>

<h1>Previewing Data</h1>

To preview the data and the metadata of a dataframe you can use the following functions:

<pre><code class="python"># Displays the top 5 rows. Accepts an optional int parameter - num. of rows to show
df.head()

# Similar to head, but displays the last rows
df.tail()

# The dimensions of the dataframe as a (rows, cols) tuple
df.shape

# The number of columns. Equal to df.shape[0]
len(df) 

# An array of the column names
df.columns 

# Columns and their types
df.dtypes

# Converts the frame to a two-dimensional table
df.values 

# Displays descriptive stats for all columns
df.describe()
</code></pre>

<a name="sorting"></a>

<h1>Sorting</h1>

The <em>sort_index</em> method is used to sort the frame by one of its axis indices. The axis is either 0 or 1 - row/column axis respectively:

<pre><code class="python"># Sort rows descendingly by the index
df.sort_index(axis=0, ascending=False)
</code></pre>

We can also sort by one or multiple columns:

<pre><code class="python">df.sort_values(by=['col2', 'col1'], ascending=False)
</code></pre>

<a name="selecting_querying"></a>

<h1>Selecting/Querying</h1>

Individual columns can be selected with the [] operator or directly as attributes:

<pre><code class="python"># Selects only the column named 'col1';
df.col1 

# Same as previous
df['col1'] 

# Select two columns
df[['col1', 'col2']]
</code></pre>

You can also select by absolute coordinates/position in the frame. Indices are zero based:

<pre><code class="python"># Selects second row
df.iloc[1]
# Selects rows 1-to-3
df.iloc[1:3]
# First row, first column
df.iloc[0,0]
# First 4 rows and first 2 columns
df.iloc[0:4, 0:2]
</code></pre>

Most often, we need to select by a condition on the cell values. To do so, we provide a boolean array denoting which rows will be selected. The trick is that <em>pandas</em> predefines many boolean operators for its data frames and series. For example the following expression produces a boolean array:

<pre><code class="python"># Produces and array, not a single value!
df.col3 &gt; 0
</code></pre>

This allows us to write queries like these:

<pre><code class="python"># Query by a single column value
df[df.col3 &gt; 0] 

# Query by a single column, if it is in a list of predefined values
df[df['col2'].isin(['Gold', 'Silver'])] 

# A conjunction query using two columns
df[(df['col3'] &gt; 0) &amp; (df['col2'] == 'Silver')] 

# A disjunction query using two columns
df[(df['col3'] &gt; 0) | (df['col2'] == 'Silver')]

# A query checking the textual content of the cells
df[df.col2.str.contains('ilver')]
</code></pre>

<a name="#modifying_data_frames"></a>

<h1>Modifying Data Frames</h1>

Pandas' operations tend to produce new data frames instead of modifying the provided ones. Many operations have the optional boolean <em>inplace</em> parameter which we can use to force pandas to apply the changes to subject data frame.

It is also possible to directly assign manipulate the values in cells, columns, and selections as follows:

<pre><code class="python"># Modifies the cell identified by its row index and column name
df.at[1, 'col2'] = 'Bronze and Gold' 

# Modifies the cell identified by its absolute row and column indices
df.iat[1,1] = 'Bronze again' 

# Replaces the column with the array. It could be a numpy array or a simple list.
#Could also be used to create new columns
df.loc[:,'col3'] = ['Unknown'] * len(df) 

# Equivalent to the previous
df.col3 = ['Unknown'] * len(df) 

# Removes all rows with any missing values.
df.dropna(how='any') 

# Removes all rows with all missing values.
df.dropna(how='all')
</code></pre>

It is often useful to create new columns based on existing ones by using a function. The new columns are often called <em>Derived Characteristics</em>:

<pre><code class="python">def f(x):
    return x + ' New Column';

# Uses the unary function f to create a new column based on an existing one
df.col4 = f(df.col3) 

def g(x, y):
    return x + '_' + y

# Uses the 2-arg function g to create a new column based on 2 existing columns
df.col4 = g(df.col3, df.col2)
</code></pre>

<a name="dates_and_time"></a>

<h1>Dates and Time</h1>

When loading data from a CSV, we can tell pandas to look for and parse dates. The <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html">parse_dates</a> parameters can be used for that. In the most typical case, you would pass a list of column names as <em>parse_dates</em>:

<pre><code class="python">dates_df = pandas.read_csv('test.csv', sep=';', parse_dates=['col1', 'col2'])
</code></pre>

This will work for most typical date formats. If it does not (i.e. we have a non-standard date format) we need to supply our own date parser:

<pre><code class="python">def custom_parser(s):
    # Specify the non-standard format you need
    return pandas.datetime.strptime(s, '%d%b%Y')

dates_df = pandas.read_csv('test.csv', sep=';', parse_dates=['col1'], date_parser=custom_parser)
</code></pre>

Alternatively, if we've already loaded the data frame we can change a column from string to a date:

<pre><code class="python">dates_df['col2'] = pandas.to_datetime(dates_df['col2'], format='%d.%m.%Y')
</code></pre>

For more on date-time formats look at the <a href="https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior">documentation</a>.

Often we need to work with <a href="https://en.wikipedia.org/wiki/Unix_time">Unix/Posix timestamps</a>. Converting numeric timestamps to pandas timestamps is easy with the <em>unit</em> parameter:

<pre><code class="python"># Unit specifies if the time is in seconds('s'), millis ('ms'), nanos('ns') etc.
dates_df['col'] = pandas.to_datetime(dates_df['col'], unit='ms')
</code></pre>

If we need to parse Posix timestamps while reading CSVs, we can once again resort to converter functions. In the converter function we can use the <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.to_datetime.html">pandas.to_datetime</a> utility which accepts a <em>unit</em> parameter:

<pre><code class="python">def timestamp_parser(n):
    # Specify the unit you need
    return pandas.to_datetime(float(n), unit='ms')

dates_df = pandas.read_csv('test.csv', sep=';', parse_dates=['col1'], date_parser=timestamp_parser)
</code></pre>

We can also convert time/timestamp data to Unix epoch numbers:

<pre><code class="python"># Creates a new numeric column with the timestamp epoch in nanos
dates_df.col4 = pandas.to_numeric(dates_df.col3)
</code></pre>

<a name="plotting"></a>

<h1>Plotting</h1>

<a name="set_up"></a>

<h2>Set Up</h2>

Pandas uses <a href="http://matplotlib.org/">matplotlib</a> to render graphs, so you need to install it:

<pre><code class="bash">pip install matplotlib
</code></pre>

Before we continue we need to test if matplotlib was set up properly. Open a terminal, start the python interpreter, and type:

<pre><code class="python">import matplotlib
</code></pre>

If the import works without problems you're good to go. However, sometimes in OS X you may get the following error:

<blockquote>
  <em>"RuntimeError: Python is not installed as a framework. The Mac OS X backend will not be able to function correctly if Python is not installed as a framework. See the Python documentation for more information on installing Python as a framework on Mac OS X. Please either reinstall Python as a framework, or try one of the other backends. If you are Working with Matplotlib in a virtual enviroment see 'Working with Matplotlib in Virtual environments' in the Matplotlib FAQ"</em>
</blockquote>

If that error occurs, you need to execute the following from terminal:

<pre><code class="bash">echo "backend: TkAgg" &gt;&gt; ~/.matplotlib/matplotlibrc
</code></pre>

This will set the proper matplotlib backend, as discussed <a href="http://stackoverflow.com/questions/21784641/installation-issue-with-matplotlib-python">here</a>.

Now we can import the matplot library in one of the jupyter notebook cells:

<pre><code class="python">import matplotlib.pyplot as plt
</code></pre>

There is one last configuration to complete before we can display plots in the web notebook. We need to tell jupyter to display the matplotlib plots as images in the notebook itself. To do so, type the following command in one of the notbook cells:

<pre><code class="python"># Will allow us to embed images in the notebook
%matplotlib inline
</code></pre>

<a name="basic_plotting"></a>

<h2>Basic Plotting</h2>

In the rest of this section we'll use the following data frame:

<pre><code class="python">plot_df = pandas.DataFrame({
    'col1': [1, 3, 2, 4],
    'col2': [3, 6, 5, 1],
    'col3': [4, 7, 6, 2],
})
</code></pre>

Data frames have a method called <em>plot</em>. By default it plots a line chart with al numerical columns. The x-axis is the row index of the data frame. In other words, you're plotting :

<pre><code class="python">plot_df.plot()
</code></pre>

[caption id="attachment_538" align="alignnone" width="300"]<img src="http://www.nikgrozev.org/wp-content/uploads/2015/12/lines-300x209.png" alt="Line chart." width="300" height="209" class="size-medium wp-image-538" /> Line chart.[/caption]

We can also specify a column for the x-axis:

<pre><code class="python">plot_df.plot(x='col1')
</code></pre>

The <em>plot</em> has an optional parameter <em>kind</em> which can be use to plot the data in different type of visualisation - e.g. bar harts, pie chart, or histograms.

Using <em>kind='bar'</em> produces multiple plots - one for each row. In each plot, there's a bar for each cell.

<pre><code class="python"># Use kind='hbar' for horizontal bars, and stacked=True to stack the groups
plot_df.plot(kind='bar')
</code></pre>

Boxplots are displayed with the <em>kind='box'</em> options. Each box represents a numeric column.

<pre><code class="python">plot_df.plot(kind='box')
</code></pre>

[gallery ids="536,535,534"]

<a name="further_reading"></a>

<h1>Further Reading</h1>

<ul>
<li><a href="http://pandas.pydata.org/pandas-docs/version/0.15.2/10min.html">Official pandas quickstart tutorial</a></li>
<li><a href="http://pandas.pydata.org/pandas-docs/stable/visualization.html">Official pandas plotting guide</a></li>
<li><a href="http://stackoverflow.com/questions/23797491/parse-dates-in-pandas">Parse dates in pandas (StackOverflow)</a></li>
<li><a href="http://pandas.pydata.org/pandas-docs/stable/timeseries.html">Timeseries in Pandas</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>489</wp:post_id>
		<wp:post_date><![CDATA[2015-12-27 12:14:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2015-12-27 01:14:57]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[pandas-in-jupyter-quickstart-and-useful-snippets]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="datascience"><![CDATA[DataScience]]></category>
		<category domain="post_tag" nicename="jupyter"><![CDATA[Jupyter]]></category>
		<category domain="post_tag" nicename="pandas"><![CDATA[Pandas]]></category>
		<category domain="category" nicename="python"><![CDATA[Python]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[geo_public]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_job_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[18145071606]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_external]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{s:7:"twitter";a:1:{i:5385644;s:59:"https://twitter.com/nikolaygrozev/status/680919801133334528";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_5425648]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_twitter_user]]></wp:meta_key>
			<wp:meta_value><![CDATA[nikolaygrozev]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[publicize_google_plus_url]]></wp:meta_key>
			<wp:meta_value><![CDATA[https://plus.google.com/+NikolayGrozev/posts/V3d9QoNbU1v]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_done_5425656]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385652]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_skip_5385644]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[536]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>115</wp:comment_id>
			<wp:comment_author><![CDATA[Data Science Articles | Niall Martin]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>http://niallmartin.me/2016/02/17/data-science-articles/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.0.116.101]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-03-23 03:04:24]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-03-22 16:04:24]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>[&#8230;] Pandas QuickStart Code &#8211; Useful snippets of code in an IPython notebook from Nikolay Grozev [&#8230;]</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1458667638.3486030101776123046875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1458662665.470573902130126953125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
				<wp:meta_value><![CDATA[1458727304]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1458727304.8314659595489501953125;s:5:"event";s:15:"status-approved";s:4:"user";s:13:"nikolaygrozev";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2016-03-22 16:04:24]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Scala Syntax Refcard on Github</title>
		<link>http://www.nikgrozev.org/2016/03/06/scala-syntax-refcard-on-github/</link>
		<pubDate>Sun, 06 Mar 2016 02:58:45 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">https://nikolaygrozev.wordpress.com/?p=567</guid>
		<description></description>
		<content:encoded><![CDATA[Github now allows <a href="http://blog.jupyter.org/2015/05/07/rendering-notebooks-on-github/">ipython/jupyter notebooks</a> to be viewed directly in the browser. I though that is a great way to create a small reference card/cheatsheet of Scala syntax. It could be found <a href="https://github.com/nikolayg/ScalaJupyterTutorial/blob/master/Scala%20Tutorial.ipynb">here</a>.

Overall, I was impressed with this new feature and everything worked as expected out of the box. The only thing I couldn't achieve was a working table of the contents for the notebook.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>567</wp:post_id>
		<wp:post_date><![CDATA[2016-03-06 13:58:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-06 02:58:45]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[scala-syntax-refcard-on-github]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="github"><![CDATA[github]]></category>
		<category domain="post_tag" nicename="jupyter-notebook"><![CDATA[jupyter notebook]]></category>
		<category domain="category" nicename="scala"><![CDATA[Scala]]></category>
		<category domain="post_tag" nicename="scala"><![CDATA[Scala]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[geo_public]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_job_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[20475432528]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Functional Programming and Category Theory [Part 1] - Categories and Functors</title>
		<link>http://www.nikgrozev.org/2016/03/14/functional-programming-and-category-theory-part-1-categories-and-functors/</link>
		<pubDate>Mon, 14 Mar 2016 06:18:19 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">https://nikolaygrozev.wordpress.com/?p=570</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Table of Contents</h1>

<ul>
<li><a href="#introduction">Introduction</a></li>
<li><a href="#categories">Categories</a>

<ul>
<li><a href="#categories-examples">Examples</a></li>
<li><a href="#categories-hask">The Hask Category</a></li>
</ul></li>
<li><a href="#functors">Functors</a>

<ul>
<li><a href="#functors-in-fp">Functors in FP</a></li>
<li><a href="#functors-in-code">Functors in code</a></li>
<li><a href="#functors-examples">Examples</a></li>
</ul></li>
</ul>

<!-- ---------------------------------------------------------------------- -->

<div id='introduction' />

<h1>Introduction</h1>

Category Theory is a mathematical discipline with a wide range of applications in theoretical computer science. Concepts like <em>Category</em>, <em>Functor</em>, <em>Monad</em>, and others, which were originally defined in Category Theory, have become pivotal for the understanding of modern Functional Programming (FP) languages and paradigms. The meaning and applications of these terms in FP can be understood without in-depth knowledge of the corresponding mathematical definitions and axiomatic. However, a common knowledge of the underlying theory can help FP programmers understand the design and structure of commonly used libraries and tools and be more productive.

This series of tutorials defines and illustrates the Category Theory concepts which are most widely adopted in FP. We will use simple Scala and pseudocode examples to illustrate the new terms.

<!-- ---------------------------------------------------------------------- -->

<div id='categories' />

<h1>Categories</h1>

A <strong>category</strong> is a simple algebraic structure for modelling objects and their relationships. A category <u><strong>C</strong></u> consists of a collection of objects <u><strong>ob(C)</strong></u> and a collection of arrows/morphisms <u><strong>hom(C)</strong></u> connecting the objects. In other words, every arrow <u><strong>f</strong></u> can be defined as a pair <u><strong>[a,b]</strong></u> of the objects it connects. We write <u><strong>f: a &rarr; b</strong></u>.

A category also defines an operation for composing arrows, such that for every <u><strong>f: a &rarr; b</strong></u> and <u><strong>g : b &rarr; c</strong></u>, their composition <u><strong>g &#8728; f</strong></u> is also an arrow, which connects <u><strong>a</strong></u> and <u><strong>c</strong></u> - i.e. <u><strong>g &#8728; f: a &rarr; c</strong></u>.

A collection of objects and arrows qualifies as a category only if:

<ul>
<li>The composition is associative. More formally, <u><strong>h &#8728; (g &#8728; f) = (h &#8728; g) &#8728; f</strong></u> for every three arrows, and;</li>
<li>For every object <u><strong>a</strong></u> there is an identity arrow (i.e. a loop) <u><strong>i<sub>a</sub></strong></u> that connects it to itself: <u><strong>i<sub>a</sub>: a &rarr; a</strong></u>. </li>
<li>The identities should have the obvious property that for every <u><strong>f: a &rarr; b</strong></u> the following is true <u><strong>i<sub>b</sub> &#8728; f = f = f &#8728; i<sub>a</sub></strong></u>. In other words, identities are <em>neutral</em> to composition.</li>
</ul>

[caption id="attachment_605" align="aligncenter" width="320"]<a href="http://www.nikgrozev.org/wp-content/uploads/2016/03/category.jpg" rel="attachment wp-att-605"><img class="wp-image-605 size-medium" src="http://www.nikgrozev.org/wp-content/uploads/2016/03/category.jpg?w=320" alt="Category" /></a> A category of 4 objects. For every object there must be an identity arrow (i.e. loop). The order of composition should not matter.[/caption]

<div id='categories-examples' />

<h2>Examples</h2>

An intuitive example of a category is the inter-city road infrastructure. A portion of this category is depicted in the diagram below. In it, the objects are all cities around the world. We consider two cities to be connected with an arrow if one is reachable from the other. We assume each city is reachable from itself which is represented with the identity arrows. If we can travel from city <u><strong>A</strong></u> to <u><strong>B</strong></u>, and from <u><strong>B</strong></u> to <u><strong>C</strong></u>, then we can do so from <u><strong>A</strong></u> to <u><strong>C</strong></u>. Hence, we can compose arrows.

[caption id="attachment_611" align="aligncenter" width="360"]<a href="http://www.nikgrozev.org/wp-content/uploads/2016/03/category_roads.jpg?w=360" rel="attachment wp-att-611"><img class="wp-image-611 size-medium" src="http://www.nikgrozev.org/wp-content/uploads/2016/03/category_roads.jpg" alt="Category_Roads" /></a>The road network forms a category.[/caption]

More generally, every directed graph forms a category whose objects are the graph nodes. In it, two nodes/objects <u><strong>a</strong></u> and <u><strong>b</strong></u> are connected with an arrow only if there is <em>path</em> between them in the graph. We also consider that every node in the graph has an arrow to itself - i.e. it is reachable from itself.

In Object Oriented Programming (OOP), a class hierarchy also forms a category. The category objecta are the types (e.g. classes, traits, interfaces). We consider two types <u><strong>A</strong></u> and <u><strong>B</strong></u> to be connected with an arrow if <u><strong>A</strong></u> is a subtype of <u><strong>B</strong></u>. These arrows are composable, because if <u><strong>A</strong></u> is a subtype of <u><strong>B</strong></u>, and <u><strong>B</strong></u> of <u><strong>C</strong></u>, then <u><strong>A</strong></u> is a subtype of <u><strong>C</strong></u>. Finally, each type is a subtype of itself and thus we have identity arrows as well. This is depicted in the following figure.

[caption id="attachment_615" align="aligncenter" width="460"]<a href="http://www.nikgrozev.org/wp-content/uploads/2016/03/category_oop.jpg" rel="attachment wp-att-615"><img src="http://www.nikgrozev.org/wp-content/uploads/2016/03/category_oop.jpg?w=460" alt="Category of Programming types." class="size-medium wp-image-615" /></a> Category of types.[/caption]

<div id='categories-hask' />

<h2>The Hask Category</h2>

In Functional Programming, the <u><strong>Hask</strong></u> category has a special role. The objects of <u><strong>Hask</strong></u> are all types of the Haskel programming language - i.e. <u><strong>Ob(Hask) = {Int, String, ...}</strong></u>. We can generalise that to the types of other languages, like Scala, as well. For every function converting one type to another, in <u><strong>Hask</strong></u> there is an arrow between the two types. Arrow composition is just function composition. The identity arrows correspond to the identity functions. The following diagram depicts a portion of the <u><strong>Hask</strong></u> category.

[caption id="attachment_617" align="aligncenter" width="360"]<a href="http://www.nikgrozev.org/wp-content/uploads/2016/03/hask.jpg" rel="attachment wp-att-617"><img src="http://www.nikgrozev.org/wp-content/uploads/2016/03/hask.jpg?w=360" alt="The Hask Category" class="size-medium wp-image-617" /></a> The Hask Category[/caption]

<!-- ---------------------------------------------------------------------- -->

<div id='functors' />

<h1>Functors</h1>

In category theory, a Functor <u><strong>F</strong></u> is a transformation between two categories <u><strong>A</strong></u> and <u><strong>B</strong></u>. We write <u><strong>F : A &rarr; B</strong></u>. <u><strong>F</strong></u> must map every object and arrow from <u><strong>A</strong></u> to <u><strong>B</strong></u>. In other words, if <u><strong>a &isin; ob(A)</strong></u> then <u><strong>F(a) &isin; ob(B)</strong></u>, and if <u><strong>f &isin; Hom(A)</strong></u> then <u><strong>F(f) &isin; Hom(B)</strong></u>.

We also require that <u><strong>F</strong></u> preserves the structure (i.e. identity arrows and composition) of the source category. More formally:

<ul>
<li>If <u><strong>f : a &rarr; b</strong></u> is an arrow in <u><strong>A</strong></u> then <u><strong>F(f):F(a) &rarr; F(B)</strong></u> is an arrow in <u><strong>B</strong></u>.</li>
<li><u><strong>F(id<sub>X</sub>) = id<sub>(F(X))</sub></strong></u>, which means that each identity arrow in <u><strong>A</strong></u> is transformed to an identity arrow of the corresponding object in <u><strong>B</strong></u>.</li>
<li><u><strong>F(g &#8728; f) = F(g) &#8728; F(f)</strong></u>, which means that the mapping of arrows' composition in <u><strong>A</strong></u> is a composition of their mappings in <u><strong>B</strong></u>.</li>
</ul>

[caption id="attachment_619" align="aligncenter" width="940"]<a href="http://www.nikgrozev.org/wp-content/uploads/2016/03/functor.jpg" rel="attachment wp-att-619"><img src="http://www.nikgrozev.org/wp-content/uploads/2016/03/functor.jpg?w=940" alt="A Functor" class="size-large wp-image-619" /></a> A Functor from A to B.[/caption]

When a functor <u><strong>F</strong></u> transforms a category <u><strong>A</strong></u> into itself, we call it an <em>endofunctor</em> and we write <u><strong>F:A &rarr; A</strong></u>.

[caption id="attachment_622" align="aligncenter" width="940"]<a href="http://www.nikgrozev.org/wp-content/uploads/2016/03/endofunctor.jpeg" rel="attachment wp-att-622"><img src="http://www.nikgrozev.org/wp-content/uploads/2016/03/endofunctor.jpeg?w=940" alt="An Endo Functor" class="size-large wp-image-622" /></a> An Endofunctor[/caption]

<div id='functors-in-fp' />

<h2>Functors in FP</h2>

Before we delve into Functors and FP, we need to introduce the concept of a <u><em>type constructor</em></u>. Essentially, a type constructor is a generic type definition, which takes another type as a parameter. For example, in Scala <u><strong>List[T]</strong></u>, <u><strong>Vector[T]</strong></u>, and <u><strong>Option[T]</strong></u> are type constructor. You need to specify the value of the type parameter <u><strong>T</strong></u> in order to produce a concrete type. For example, <strong>List[String]</strong> is a type, while <strong>List</strong> itself is not - it is a type constructor. We will write <strong>TC[ _ ]</strong> to denote that <u><strong>TC</strong></u> is a type constructor.

Functors in Category Theory are a much more general concept than in functional programming (FP). <u>All functors in FP are just endofunctors in <strong>Hask</strong></u>. Furthermore, each functor <u><strong>F</strong></u> is associated with a type constructor <strong>TC[ _ ]</strong>. Each type <u><strong>A</strong></u> in <u><strong>Hask</strong></u> is transformed to <u><strong>TC[A]</strong></u>. For example, if <u><strong>TC = List</strong></u> then <u><strong>F: Int &rarr; List[Int]</strong></u>. In other words, the type constructor uniquely defines the mapping of <u><strong>Hask</strong></u> objects.

In order to define a functor, we also need to define the arrow mapping. The arrows in <u><strong>Hask</strong></u> are just functions. Hence, we need to provide a function called <u><strong>map</strong></u> with the following signature: <u><strong>map: (A &rarr; B) &rarr; (TC[A] &rarr; TC[B])</strong></u>. For every arrow/function <u><strong>f: A &rarr; B</strong></u> it returns its projection/mapping which is also a function - <u><strong>F(f): TC[A] &rarr; TC[B]</strong></u>.

To summarise, a functor in FP is uniquely defined by a type constructor <strong>TC[ _ ]</strong> and a map function with the aforementioned signature. The following diagram depicts a functor, whose type constructor is <strong>List[_]</strong>.

[caption id="attachment_626" align="aligncenter" width="840"]<a href="http://www.nikgrozev.org/wp-content/uploads/2016/03/haskfunctor1.jpg" rel="attachment wp-att-626"><img src="http://www.nikgrozev.org/wp-content/uploads/2016/03/haskfunctor1.jpg?w=840" alt=" A Hash Functor" class="size-large wp-image-626" /></a> The List functor.[/caption]

<div id='functors-in-code' />

<h2>Functors in code</h2>

Following the previous definitions, in Scala a functor can be defined as:

<pre><code class="scala">trait Functor[TC[_]] {
    def map[A,B] (f: A =&gt; B): (TC[A] =&gt; TC[B])
}
</code></pre>

Note that the return type of <u><strong>map</strong></u> is a function. Often the caller just wants to apply/run this function to a given arguement, instead of passing it on as an arguement or reusing it later on. Thus, it is convenient to use another analogous definition of a functor, which also applies the resulting function:

<pre><code class="scala">trait Functor[TC[_]] {
    def map[A,B] (f: A =&gt; B)(param : TC[A]) : TC[B]
}
</code></pre>

This is essentially a <em>shortcut</em> for mapping a function and applying it in one go. We can also define the <u><strong>map</strong></u> function as a method of the type constructor <strong>TC</strong> itself:

<pre><code class="scala">trait TC[A] {
    def map[B] (f: A =&gt; B): TC[B]
}
</code></pre>

For simplicity, in this case we can just say that <strong>TC</strong> itself is a functor, because it is a <em>type constructor</em> and has a <em>map</em> function. To make it more readable we can just write:

<pre><code class="scala">trait Functor[A] {
    def map[B] (f: A =&gt; B): Functor[B]
}
</code></pre>

This trait can then be implemented from all concrete type constructors (e.g. <strong>List</strong> and <strong>Vector</strong>) thus making them functors.

<div id='functors-examples' />

<h2>Examples</h2>

In FP, functors are usually applied to map/convert instances of generic data structures (i.e. type constructors) in a way which preserves their inner structure. For collections like <strong>List</strong> and <strong>Vector</strong> we would implement the <em>map</em> function by just applying it to every element, as in the following pseudocode:

<pre><code class="scala">class List[A] extends Functor[A] {
    // ... 
    def map[B] (f: A =&gt; B): List[B] = {
        this match {
            case List() =&gt; this
            case h::t =&gt; f(h)::(t.map(f))
        }
    }
    // ... 
}
</code></pre>

For type constructors which encode <em>"success-or-failure"</em> state like <strong>Option</strong> or <strong>Either</strong> the map function can be applied only if there is a contained value:

<pre><code class="scala">class Option[A] extends Functor[A] {
    // ... 
    def map[B] (f: A =&gt; B): Option[B] = {
        this match {
            case None =&gt; None
            case Some(x) =&gt; Some(f(x))
        }
    }
    // ... 
}
</code></pre>

Given that all these functors have a common supertype allows us to write functions which will work with all of them. For example:

<pre><code class="scala">def useAnyIntFunctor(functor: Functor[Int]) =
     functor.map(_ + 5).map(_ * 2) 
</code></pre>

This will work <em>"as expected"</em> with all functors - Option, List, etc. However, in this example the return type is <strong>Functor</strong>, not the actual compile-time type of the parameter. This can be amended by defining a method type parameter for the arguement's type.

<u><strong>Update</strong></u>: updated with comments from <a href="https://twitter.com/kenscambler">Ken Scambler</a> and other collegues from <a href="http://www.rea-group.com/IRM/content/default.aspx">REA</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>570</wp:post_id>
		<wp:post_date><![CDATA[2016-03-14 17:18:19]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-03-14 06:18:19]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[functional-programming-and-category-theory-part-1-categories-and-functors]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="category-theory"><![CDATA[Category Theory]]></category>
		<category domain="post_tag" nicename="category-theory"><![CDATA[Category Theory]]></category>
		<category domain="category" nicename="functional-programming"><![CDATA[Functional programming]]></category>
		<category domain="post_tag" nicename="functional-programming"><![CDATA[Functional programming]]></category>
		<category domain="category" nicename="scala"><![CDATA[Scala]]></category>
		<category domain="post_tag" nicename="scala"><![CDATA[Scala]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[geo_public]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_job_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[20734887053]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[622]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>116</wp:comment_id>
			<wp:comment_author><![CDATA[Functional Programming and Category Theory [Part 2] – Applicative Functors | Nikolay Grozev]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://nikolaygrozev.wordpress.com/2016/04/11/functional-programming-and-category-theory-part-2-applicative-functors/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[192.0.99.14]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2016-04-11 23:54:13]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2016-04-11 12:54:13]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<p>[&#8230;] a previous post I talked about the basic concepts in Category Theory and Functional Programming (FP) &#8211; namely [&#8230;]</p>
]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1460383842.6189289093017578125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
				<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1460379254.6027328968048095703125;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key><![CDATA[_elasticsearch_indexed_on]]></wp:meta_key>
				<wp:meta_value><![CDATA[2016-04-11 12:54:13]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Functional Programming and Category Theory [Part 2] – Applicative Functors</title>
		<link>http://www.nikgrozev.org/2016/04/11/functional-programming-and-category-theory-part-2-applicative-functors/</link>
		<pubDate>Mon, 11 Apr 2016 12:54:06 +0000</pubDate>
		<dc:creator><![CDATA[nikolaygrozev]]></dc:creator>
		<guid isPermaLink="false">https://nikolaygrozev.wordpress.com/?p=668</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Table of Contents</h1>

<ul>
<li><a href="#introduction">Introduction</a></li>
<li><a href="#curried-functions">Motivating Example</a></li>
<li><a href="#curried-functions">Curried Functions</a></li>
<li><a href="#struct-and-compute">Applicative Functor: Structure and Computation</a>

<ul>
<li><a href="#function-pure">Function "Pure"</a></li>
<li><a href="#function-apply">Function "Apply"</a></li>
<li><a href="#variations">Variations</a></li>
<li><a href="#putting-pieces-together">Putting the Pieces Together</a></li>
</ul></li>
<li><a href="#laws">Laws</a>

<ul>
<li><a href="#identity-law">Identity Law</a></li>
<li><a href="#composition-law">Composition Law</a></li>
<li><a href="#homomorphism-law">Homomorphism Law</a></li>
<li><a href="#interchange-law">Interchange Law</a></li>
</ul></li>
<li><a href="#app-functor-is-functor">Applicative Functors are Functors</a></li>
<li><a href="#references">References</a></li>
</ul>

<!-- ---------------------------------------------------------------------- -->
<!--- =============================== INTRODUCTION =============================== -->

<div id='introduction' />

<h1>Introduction</h1>

In a <a href="www.nikgrozev.org/2016/03/14/functional-programming-and-category-theory-part-1-categories-and-functors/">previous post</a> I talked about the basic concepts in Category Theory and Functional Programming (FP) - namely Categories and Functors. This post introduces a type of functors called <em>Applicative Functors</em>. Unlike the ordinary functors, applicatives allow us to work with multi-arguement functions and thus turn out to be quite useful in FP.

<!--- =============================== MOTIVATING EXAMPLE =============================== -->

<div id='curried-functions' />

<h1>Motivating Example</h1>

We can reason about a functor as a context for values of a given type <u><strong>A</strong></u> - e.g. <u><strong>List[A], Vector[A], Option[A]</strong></u>. A functor allows us to transfer/map a function <u><strong>f:A &rarr; B</strong></u> to that context. For example:

<ul>
<li><strong>map[List]: (A &rarr; B) &rarr; (List[A] &rarr; List[B])</strong></li>
<li><strong>map[Option]: (A &rarr; B) &rarr; (Option[A] &rarr; Option[B])</strong></li>
</ul>

But what if the function that we want to use takes multiple parameters? Functors can only map over single-arguement functions. The following example illustrates the problem:

<pre><code class="scala">def sum(x : Int)(y : Int) = x + y

val xOpt : Option[Int] = Some(1)
val yOpt : Option[Int] = Some(2)

// How can we sum xOpt and yOpt?
// val result = sum(xOpt)(yOpt) does not compile
</code></pre>

We can obviously "unbox" the values in the two options, apply the function, and embed the new result in an option. This approach is far from elegant. It is not general and does not apply to other functor. We would like to have a generic solution that works with many other functors as well.

<!--- =============================== CURRIED FUNCTIONS =============================== -->

<div id='curried-functions' />

<h1>Curried Functions</h1>

Before we discuss applicative functors, we need to introduce the concept of <a href="https://en.wikipedia.org/wiki/Currying">currying</a>. In FP, we can partially apply a function of multiple parameters by specifying a subset of its required parameters. For this purpose, Scala offers special syntax, allowing us to group function parameters into separate parameter lists.

<pre><code class="scala">def curriedF(x : Int) (y : Int) = x + y

// We need to use underscore after the function invocation
val partiallyApplied : Int =&gt; Int = curriedF(1)_

// Call the partially applied function. Result is 3
val result = partiallyApplied(2)
</code></pre>

The ability to create partially applied functions is called <strong>currying</strong>. Scala also allows us to create curried functions from non-curried ones:

<pre><code class="scala">// Non-curried
def f(x : Int, y : Int) = x + y

// Make a curried version of f
val fCurried = (f _).curried

// Invoke the non-curried and curried functions
f(1, 2)
fCurried(1)(2)
</code></pre>

In fact, this is a much more general idea which is not specific to Scala and FP. Unfortunately, most languages do not explicitly support currying. We can still easily curry every function in most modern languages as long as they support anonymous functions, as in the following Python example:

<pre><code class="python"># Non-curried
def f(x, y): return x + y

# Make a curried version of f
def fCurried(x): return lambda y : f(x, y) 

# Invoke the non-curried and curried functions
f(1, 2)
fCurried(1)(2)
</code></pre>

Curried and non-curried functions are equivalent. As we just showed, we can convert each function to a curried one. The opposite is also true. In terms of notation, we'll denote the non-curried version of a function as <u><strong>f: (A<sub>1</sub> &times; A<sub>2</sub> &times; ... &times; A<sub>n-1</sub>) &rarr; A<sub>n</sub></strong></u>, or we could just write: <u><strong>f: (A<sub>1</sub>, A<sub>2</sub>, ...,A<sub>n-1</sub>) &rarr; A<sub>n</sub></strong></u>.

The curried version will be written as: <u><strong>f: A<sub>1</sub> &rarr; A<sub>2</sub> &rarr; ... &rarr; A<sub>n</sub></strong></u>.

Currying is a simple but powerful method to represent a function with multiple arguements as a single-arg function. This allows us to generalise everything that works for single arguement functions to the multi-arguement case.

<!--- =============================== STRUCTURE AND COMPUTATION =============================== -->

<div id='struct-and-compute' />

<h1>Applicative Functor: Structure and Computation</h1>

An applicative functor is defined by:

<ul>
<li>A type constructor <u><strong>F[ &#95; ]</strong></u> - e.g. <u><strong>List</strong></u>, <u><strong>Option</strong></u>;</li>
<li>A function <u><strong>pure : A &rarr; F[A]</strong></u>, where <u><strong>A</strong></u> can be any type (including types of functions);</li>
<li>A function <u><strong>apply: F[A &rarr; B] &rarr; (F[A] &rarr; F[B])</strong></u>, where <u><strong>A</strong></u> and <u><strong>B</strong></u> can be any types (including types of functions);</li>
</ul>

<div id='function-pure' />

<h2>Function "Pure"</h2>

The <u><strong>pure</strong></u> function is also known as <u><strong>point</strong></u> in some languages and libraries. Essentially, it is a constructor which can convert a value of any type <u><strong>A</strong></u> to a value of <u><strong>F[A]</strong></u>. We often say that <u><strong>pure</strong></u> "lifts" its arguement to the corresponding type defined by the type constructor (e.g. from <u><strong>Int</strong></u> to <u><strong>List[Int]</strong></u>). Here is a sample implementation for <u><strong>Option</strong></u>.

<pre><code class="scala">// Implementation for Options
def pure[A](a : A) : Option[A] = Some(a)

pure("Text") // Some("Text")

// We can also embed a function in an Option
pure(x:Int =&gt; x.toString) //Some(Int =&gt; String)
</code></pre>

Similarly, an implementation of <u><strong>pure</strong></u> for <u><strong>List</strong></u> would just wrap it in a list:

<pre><code class="scala">// Implementation for List
def pure[A](a : A) : List[A] = List(a)

// We can embed a function in a list
pure(x:Int =&gt; x + 1) //List(Int =&gt; Int)
</code></pre>

<div id='function-apply' />

<h2>Function "Apply"</h2>

The <u><strong>apply</strong></u> function takes a function, which is embedded into the context defined by the type constructor (e.g. <u><strong>Option[A &rarr; B]</strong></u>), and lifts/converts it to a function in the realm of the type constructor (e.g. <u><strong>Option[A] &rarr; Option[B]</strong></u>). Here is a sample implementation for <u><strong>Option</strong></u>:

<pre><code class="scala">  // Implementation for Option
  def apply[A, B](oFunc : Option[A =&gt; B]) : Option[A] =&gt; Option[B] = {
    // Returns an anonymous function
    oA: Option[A] =&gt; oA match {
      case None =&gt; None
      case Some(a) =&gt; oFunc.map(f =&gt; f(a))
    }
  }
</code></pre>

Implementing "apply" for List is somewhat less straigthforward. Given a list of functions (i.e. <u><strong>List[A &rarr; B]</strong></u>), we need to return a function that converts from one list to another (i.e. <u><strong>List[A] &rarr; List[B]</strong></u>). One approach is to return a function, which applies all functions in the given list to all elements in its input parameter:

<pre><code class="scala">  // Implementation for List
  def apply[A, B](lFunc : List[A =&gt; B]) : List[A] =&gt; List[B] = {
    // Create an inner result function
    def resultF (lA: List[A]) : List[B] = {
      lA match {
        case List() =&gt; List()
        case head :: tail =&gt; lFunc.map(f =&gt; f(head)) ::: resultF(tail)
      }
    }
    return resultF
  }
</code></pre>

<div id='variations' />

<h2>Variations</h2>

The <u><strong>apply</strong></u> function returns a function as a result. One would usually take this result and invoke it with some parameter. Hence, it often makes sense to use an alternative signature for the <u><strong>apply</strong></u> function:

<pre><code class="scala">def apply[A,B](f: F[A=&gt;B], fa: F[A]): F[B]
</code></pre>

This definition does both at the same time - it converts/maps the lifted function <u><strong>f: F[A=&gt;B]</strong></u> to a function of type <u><strong>F[A]=&gt;F[B]</strong></u> and then applies it to the second arguement <u><strong>fa</strong></u>. It is a convenience "wrapper" for the previous definition of <u><strong>apply</strong></u>. In the rest of the article we'll use both definitions interchangeably in accordance with the needs of each example.

<div id='putting-pieces-together' />

<h2>Putting the Pieces Together</h2>

Let's consider a multi-argument curried function <u><strong>f: A<sub>1</sub> &rarr; A<sub>2</sub> &rarr; ... &rarr; A<sub>n</sub></strong></u>. The function <u><strong>pure</strong></u> can embed <u><strong>f</strong></u> into an instance of <u><strong>F[A<sub>1</sub> &rarr; A<sub>2</sub> &rarr; ... &rarr; A<sub>N</sub>]</strong></u>.

This sets the stage for an invocation of the <u><strong>apply</strong></u> function which transforms <u><strong>F[A<sub>1</sub> &rarr; A<sub>2</sub> &rarr; ... &rarr; A<sub>N</sub>]</strong></u> to <u><strong>F[A<sub>1</sub>] &rarr; F[A<sub>2</sub> &rarr; ... &rarr; A<sub>N</sub>]</strong></u>. We can further use <u><strong>apply</strong></u> repeatedly to transform this to <u><strong>F[A<sub>1</sub>] &rarr; F[A<sub>2</sub>] &rarr; ... &rarr; F[A<sub>N</sub>]</strong></u>, and hence we have been able to <em>"lift"</em> the <u><strong>f</strong></u> function into the applicative functor. This computation is depicted in the next figure.

[caption id="attachment_696" align="aligncenter" width="940"]<a href="http://www.nikgrozev.org/wp-content/uploads/2016/04/applicativefunctor1.jpg" rel="attachment wp-att-696"><img src="http://www.nikgrozev.org/wp-content/uploads/2016/04/applicativefunctor1.jpg?w=940" alt="Computational process when applying an Applicative Functor." class="size-large wp-image-696" /></a> Computational process of applying an Applicative functor.[/caption]

The following diagram depicts how an Applicative Functor acts as an endofunctor in the <strong>Hask</strong> category. It shows how the generic function <u><strong>pure</strong></u> maps each type (i.e <u><strong>A<sub>1</sub> ... A<sub>n</sub></strong></u>) to the corresponding type defined by the type constructor (i.e <u><strong>F[A<sub>1</sub>] ... F[A<sub>n</sub>]</strong></u>). By composing the <u><strong>apply</strong></u> and <u><strong>pure</strong></u> functions, we can map any function <u><strong>f: A<sub>1</sub> &rarr; ... &rarr; A<sub>n</sub></strong></u> to a function with the following form <u><strong>f ': F[A<sub>1</sub>] &rarr; ... &rarr; F[A<sub>n</sub>]</strong></u>.

[caption id="attachment_706" align="aligncenter" width="940"]<a href="http://www.nikgrozev.org/wp-content/uploads/2016/04/applicativefunctorhask.jpg" rel="attachment wp-att-706"><img src="http://www.nikgrozev.org/wp-content/uploads/2016/04/applicativefunctorhask.jpg?w=940" alt="An Applicative Functor in Hask" class="size-large wp-image-706" /></a> An Applicative Functor in Hask[/caption]

Going back to the example from the motivation section, we can implement the desired logic as:

<pre><code class="scala">def sum(x : Int)(y : Int) = x + y
val xOpt : Option[Int] = Some(1)
val yOpt : Option[Int] = Some(2)

// The result is Some(3)
apply(apply(pure(sum), xOpt), yOpt)
</code></pre>

For convenience, some languages and libraries alias the <u><strong>apply</strong></u> function with the left associative <u><strong>&lt;&#42;&gt;</strong></u> operator, which allows for the more succinct expression:

<pre><code class="scala">pure(sum) &lt;*&gt; xOpt &lt;*&gt; yOpt
</code></pre>

<!--- =============================== Laws =============================== -->

<div id='laws' />

<h1>Laws</h1>

This section is a bit less intuitive and you may wish to skip it when reading for the first time. To qualify as an Applicative Functor, a pair of <u><strong>apply</strong></u> and <u><strong>pure</strong></u> functions must obey several laws. In this section, we'll formulate and demonstrate them using the aforementioned Applicative Functor for Option.

<div id='identity-law' />

<h2>Identity Law</h2>

The identity law states that <u><strong>pure(id) &lt;&#42;&gt; v = v</strong></u> for every <u><strong>v</strong></u>, where <u><strong>id</strong></u> is an identity function. This rule implies that <u><strong>pure</strong></u> preserves the identity function. The following snippet exemplifies this law for the Option's applicative functor:

<pre><code class="scala">// Identity Function
def id[A](a: A) = a

// Any v - for example Some(42)
val v: Option[Int] = Some(42)

// The following should be true for every v. In other words,
// pure(id[Int]) should be an identity with respect to &lt;*&gt;.
pure(id[Int]) &lt;*&gt; v == v
</code></pre>

<div id='composition-law' />

<h2>Composition Law</h2>

The composition law states that <u><strong>pure(f) &lt;&#42;&gt; pure(x)=pure(f(x))</strong></u> meaning that for every function <u><strong>f</strong></u> and value <u><strong>x</strong></u>, applying the lifted/mapped function to the lifted value is the same as lifting the function's result, as in the following snippet:

<pre><code class="scala">// Any function f. For example: x+1
def f(x: Int) = x + 1

// Any x - for example Some(42)
val x: Option[Int] = Some(42)

// The following should be true for every f and x. In other words, "lifting" 
// f and applying x, should be the same as lifting f(x)
pure(f) &lt;*&gt; x == pure(f(x))
</code></pre>

<div id='homomorphism-law' />

<h2>Homomorphism Law</h2>

The homomorphism law states that <u><strong>pure(&#8728;) &lt;&#42;&gt; u &lt;&#42;&gt; v &lt;&#42;&gt; w =  u &lt;&#42;&gt; (v &lt;&#42;&gt; w)</strong></u>. Here, "&#8728;" is function composition, which is a function of two arguements (the functions it composes). This law states that function composition is preserved by the applicative functor. The following snippet illustrates:

<pre><code class="scala">// Composition Function
def compose[A,B,C](f: A=&gt;B, g: B=&gt;C) = 
  a: A =&gt; g(f(a))

// Any two functions u and v. For example:
def u(x: Int) = x+1
def v(x: Int) = x+2

// Any w - for example Some(42)
val w: Option[Int] = Some(42)

// The following should be true. In other words, pure(compose) 
// should compose u and v with respect to &lt;*&gt;.
pure(compose) &lt;*&gt; u &lt;*&gt; v &lt;*&gt; w == u &lt;*&gt; (v &lt;*&gt; w)
</code></pre>

<div id='interchange-law' />

<h2>Interchange Law</h2>

The interchange law states that <u><strong>u &lt;&#42;&gt; pure x = pure (f =&gt; f(x)) &lt;&#42;&gt; u</strong></u>. Therefore, we should be able to change the order of <u><strong>apply</strong></u>'s the parameters. To do so, however, we need to convert the second parameter to a higher order function, as in the following snippet:

<pre><code class="scala">// Any function u. For example: x+1
def u(x: Int) = x + 1

// Any u - for example Some(42)
val x: Option[Int] = Some(42)

// The following should be true. In the following code, f is an anonymous
// higher order function that applies its arguement (a function) to x.
u &lt;*&gt; x == pure(f:(Option[Int] =&gt; Option[Int]) =&gt; f(x)) &lt;*&gt; u
</code></pre>

<!--- =============================== Applicative Functors are Functors =============================== -->

<div id='app-functor-is-functor' />

<h1>Applicative Functors are Functors</h1>

So far we have defined an applicative functor, as a pair of two functions - <u><strong>pure</strong></u> and <u><strong>apply</strong></u>. However, we have not yet shown that it is indeed a type of functor. We can do so by implementing a <u><strong>map</strong></u> function as follows:

<pre><code class="scala">def map[F[]]map(f: A =&gt; B, fa:F[A]) =
    pure(f) &lt;*&gt; fa
</code></pre>

The previous laws ensure that this implementation conforms to the functor laws.

In the <a href="www.nikygrozev.org/2016/03/14/functional-programming-and-category-theory-part-1-categories-and-functors/">previous post</a> we saw that a Functor can be defined as a trait representing the type constructor and defining the <u><strong>map</strong></u> function as a method. Analogously, we can define the <u><strong>AppFunctor</strong></u> trait as follows:

<pre><code class="scala">trait AppFunctor[A] {
    def pure(a: A): AppFunctor[A]

    // OOP version of apply[A,B](f: AppFunctor[A =&gt; B], fa: AppFunctor[A]): AppFunctor[B] 
    // We'll use "this" instead of the second parameter "fa".
    def apply[A,B](f: AppFunctor[A =&gt; B]): AppFunctor[B] 

    // We can also implement map (from the definition of a Functor) 
    // through the other two methods:
    def map[A,B](f: A =&gt; B): AppFunctor[B] =
        apply(pure(f))
}
</code></pre>

<!--- =============================== References =============================== -->

<div id='references' />

<h1>References</h1>

<ul>
<li><a href="https://github.com/dcapwell/scala-tour/blob/master/Applicative%20Functor.md">https://github.com/dcapwell/scala-tour/blob/master/Applicative%20Functor.md</a></li>
<li><a href="https://drboolean.gitbooks.io/mostly-adequate-guide/content/ch10.html">https://drboolean.gitbooks.io/mostly-adequate-guide/content/ch10.html</a></li>
<li><a href="http://808fabrik.com/scala/functor-monad-in-scala-handout.pdf">http://808fabrik.com/scala/functor-monad-in-scala-handout.pdf</a></li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>668</wp:post_id>
		<wp:post_date><![CDATA[2016-04-11 23:54:06]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-04-11 12:54:06]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[functional-programming-and-category-theory-part-2-applicative-functors]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="applicative-functor"><![CDATA[Applicative Functor]]></category>
		<category domain="category" nicename="functional-programming"><![CDATA[Functional programming]]></category>
		<category domain="post_tag" nicename="functional-programming"><![CDATA[Functional programming]]></category>
		<category domain="category" nicename="scala"><![CDATA[Scala]]></category>
		<category domain="post_tag" nicename="scala"><![CDATA[Scala]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[geo_public]]></wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[706]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_publicize_job_id]]></wp:meta_key>
			<wp:meta_value><![CDATA[21675234993]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Shell Cheatsheet [Part 1] - Common Bash Scripting, Tmux</title>
		<link>http://www.nikgrozev.org/2016/05/22/shell-cheatsheet-part-1-common-bash-scripting-tmux/</link>
		<pubDate>Sun, 22 May 2016 08:51:23 +0000</pubDate>
		<dc:creator><![CDATA[nikolay.grozev@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/?p=872</guid>
		<description></description>
		<content:encoded><![CDATA[<ul>
<li><a href="#introduction">Introduction</a></li>
<li><a href="#common-bash-commands">Common Bash Commands</a>

<ul>
<li><a href="#finding-files-find-egrep">Finding Files (find, egrep)</a></li>
<li><a href="#interacting-with-servers-curl">Interacting with Servers (curl)</a></li>
<li><a href="#inspect-ports-and-file-handles-lsof">Inspect Ports and File Handles (lsof)</a></li>
<li><a href="#pattern-matching-and-replacing-sed">Pattern Matching and Replacing (sed)</a></li>
<li><a href="#working-with-tabular-data-awk">Working with Tabular Data (awk)</a></li>
<li><a href="#working-with-json-jq">Working with JSON (jq)</a></li>
<li><a href="#working-with-archives-tar-zip-unzip">Working with Archives (tar, zip, unzip)</a></li>
<li><a href="#file-permissions-ls-chmod-chown">File Permissions (ls, chmod, chown)</a></li>
<li><a href="#ssh-connection-ssh-scp">SSH Connection (ssh, scp)</a></li>
<li><a href="#miscellaneous-commands">Miscellaneous Commands</a></li>
</ul></li>
<li><a href="#the-bash-language">The Bash Language</a>

<ul>
<li><a href="#data-structures-array-hash">Data Structures (array, hash)</a></li>
<li><a href="#control-follow">Control Follow</a></li>
<li><a href="#functions">Functions</a></li>
<li><a href="#invoking-a-script">Invoking a Script</a></li>
<li><a href="#writing-a-script">Writing a Script</a></li>
</ul></li>
<li><a href="#managing-services-in-systemd">Managing Services in systemd</a>

<ul>
<li><a href="#service-lifecycle-systemctl-journalctl">Service Lifecycle (systemctl, journalctl)</a></li>
<li><a href="#creating-a-new-service-script-in-etc-init-d">Creating a new Service (script in /etc/init.d)</a></li>
</ul></li>
<li><a href="#tmux-commands">Tmux Commands</a>

<ul>
<li><a href="#manage-sessions">Manage Sessions</a></li>
<li><a href="#windowstabs">Windows/Tabs</a></li>
<li><a href="#panessplits">Panes/Splits</a></li>
</ul></li>
</ul>

<div id='introduction' />

<h1>Introduction</h1>

This post is a cheat sheet of commonly used shell commands and tools. It is meant to serve as a quick reference guide that you can consult when developing scripts or when working extensively with the Bash shell. It refers to tools which are usually present in all Linux distributions and OS X, or which can be easily installed with the usual package managers. The only exception is <strong>systemd</strong> which is present on most modern Linux distributions (with a few exceptions).

<div id='common-bash-commands' />

<h1>Common Bash Commands</h1>

<div id='finding-files-find-egrep' />

<h2>Finding Files (find, egrep)</h2>

<pre><code class="bash"># Find file recursively
find . -name test.txt

# -iname makes it case insensitive
find . -iname Test.txt

# All files and direcotries that match the pattern
find . -name "*.css"

# The same, but only files/directories this time
find . -type f -name "*.css"
find . -type d -name "*.css"

# Using posix/standard regex in the path (not just name)
find . -regex ".*[A-Z]+.*.md"

# Find files by size - use k,M and G for kilo/mega/gigabyte
find . -size 50M
find . -size +50M -size -100M

# Avoid recursiveness by limiting the depth - i.e. like ls
find . -maxdepth 1 -name "*.css"

# Use (a/c/m)time to search by last access/change/modify time (measured in days)
# Files modified 30-60 days ago:  
find . -mtime +30 –mtime -60

# Use (a/c/m)min to serach by minutes
# Files accessed during the last 45 mins:
find . -amin -45

# Finding files by content - prints all matches
find . -type f -exec egrep "^.*pattern" /dev/null {} \;

# The same, but without the matches - i.e. just file names
find . -type f -exec egrep -l "^.*pattern" /dev/null {} \;

# The same as the above two with the grep command
egrep -r '^.*pattern'
egrep -lr '^.*pattern'
</code></pre>

<div id='interacting-with-servers-curl' />

<h2>Interacting with Servers (curl)</h2>

<pre><code class="bash"># Downloads the content. Tries to guess the protocol - e.g. HTTP, FTP
curl example.com &gt; example.txt
curl ftp://myftpsite.com --user myname:mypassword  &gt; example.txt

# Curl plays well with the tidy command, which pretty-prints HTML:
curl example.com | tidy -qi

# Use verbose mode to see headers
curl -v example.com

# Add headers to your request:
curl -H "Content-Type: application/json" -H "authToken: secret" example.com

# Web sites like google.com often respond with redirections (302/301)
# To follow the redirection use -L
curl -L google.com

# Resuming a canceled/failed download
curl -C - example.com

# HTTP POST, PUT, DELETE
curl -X POST example.com -d "Request Body"

# To use HTTP Basic Authentication
curl -u 'username:password' example.com/auth

# To access insecure HTTPS connections
curl -k https://example.com/secure.php
</code></pre>

<div id='inspect-ports-and-file-handles-lsof' />

<h2>Inspect Ports and File Handles (lsof)</h2>

<pre><code class="bash"># List all current network connections
lsof -i

# List processes listening on a given port
lsof -i :25

# Inspect what files/network resources a process or command is using
lsof -p 10075
lsof -c ls
</code></pre>

<div id='pattern-matching-and-replacing-sed' />

<h2>Pattern Matching and Replacing (sed)</h2>

<pre><code class="bash"># Removing lines (1st and 3rd) from a file
sed -e '1d' -e '3d' 'test.txt' &gt; 'result.txt'

# Replace all occurrences of a word with another
sed -e 's/cat/dog/g' 'input.txt'

# The same but case insensitive
sed -e 's/cat/dog/ig' 'input.txt'

# Replace by regex
sed -r 's/(\s+|,|\.)/-/g' 'test.txt'

# Replace by regex using groups
sed -r 's/(\w+)/ (\1) /g' 'test.txt'
</code></pre>

<div id='working-with-tabular-data-awk' />

<h2>Working with Tabular Data (awk)</h2>

<pre><code class="bash"># Getting columns from tabular data
awk '{ print $2, $4 }' text.txt
ls -l | awk '{ print $2, $4 }'

# Using custom separator
echo "1,2,3,4,5" | awk -F, '{ print $2, $4 }'

# Arithmetic and formatting
echo "1 2 3 4 5" | awk '{ printf "%.2f - %.2f - %.2f\n", $2, $2 + $3, $4 }'

# Skip initial rows (e.g. a header)
ls -l | awk 'FNR &gt; 1 { print $1 }'

# Select a specific row
ls -l | awk 'FNR == 2 { print $1 }'
</code></pre>

<div id='working-with-json-jq' />

<h2>Working with JSON (jq)</h2>

<pre><code class="bash"># Sample JSON data
read -r -d '' jsonTxt &lt;&lt; EOM
{"employees":[
    {"firstName":"John", "lastName":"Doe"},
    {"firstName":"Anna", "lastName":"Smith"},
    {"firstName":"Peter", "lastName":"Jones"}
]}
EOM

# Pretty print some JSON
echo $jsonTxt | jq .
jq . jsont.txt

# Get an object's property
echo $jsonTxt | jq .employees

# Get an array element
echo $jsonTxt | jq .employees[1]

# Unpack an array of objects
echo $jsonTxt | jq .employees[]

# Get a property from all objects
echo $jsonTxt | jq .employees[].firstName

# Filter an array by value
echo $jsonTxt | jq '.employees[] | select(.firstName == "John")'

# Filter an array by regex
echo $jsonTxt | jq '.employees[] | select(.firstName | match(["jo.+", "gi"]))'
</code></pre>

<div id='working-with-archives-tar-zip-unzip' />

<h2>Working with Archives (tar, zip, unzip)</h2>

<pre><code class="bash"># Archive a folder
tar cvf archive_name.tar dirname/

# Archive and compress a folder
tar cvzf archive_name.tar.gz dirname/

# Extract a tar
tar xvf archive_name.tar
tar xvf archive_name.tar -C ./destination
tar xvzf archive_name.tar.gz

# Zip a single file
zip file.zip filepath

# Make a zip from a folder
zip -r archive.zip dirname

# Zip a file/folder without storing the path to it
zip -j file.zip filepath

# Unzip/Extract
unzip file.zip
unzip file.zip ./destination
</code></pre>

<div id='file-permissions-ls-chmod-chown' />

<h2>File Permissions (ls, chmod, chown)</h2>

<pre><code class="bash"># Check permissions - prints r/w/x flags for owner-user/group/others
# Also prints the owner user and groups
ls -l path

# Change file owner
chown owner-user file
chown owner-user:owner-group file

# Change owner recursively
chown owner-user -R folder-path

# Giver permissions (i.e. r/w/x) to user/group/others/all (u/g/o/a)
chmod g+w file
chmod a+r file
chmod ug+wx file

# Remove permissions (i.e. r/w/x) to user/group/others/all (u/g/o/a)
chmod g-w file
chmod o-x file

# Chmod recursively
chmod -R g+w directory
</code></pre>

<div id='ssh-connection-ssh-scp' />

<h2>SSH Connection (ssh, scp)</h2>

<pre><code class="bash"># Connect as a user
ssh user@server-address

# Connect with a pem file
ssh -i myfile.pem server-address

# Set appropriate pem file permissions
chmod 400 mykey.pem

# Upload a file over SCP
scp ~/local_file username@server.org:~/destination

# Download over SCP
scp username@server.org:remote_file local_file
</code></pre>

<div id='miscellaneous-commands' />

<h2>Miscellaneous Commands</h2>

<pre><code class="bash"># Move back to the previously visited folder
cd -

# Exit status of the last command
echo $?

# The pid of the last async command
echo $!

# The pid of the current process
echo $$

# Human readable folder details
ls -lah

# Similar, but also specifies the levels to be displayed (-L)
tree -h -L 1

# Inspect the file system - mounted volumes etc.
df -h

</code></pre>

<div id='the-bash-language' />

<h1>The Bash Language</h1>

<div id='data-structures-array-hash' />

<h2>Data Structures (array, hash)</h2>

<pre><code class="bash"># Define an array
arr=(1 "two" 3 'four' 5 'six')

# Get an element by index
echo ${arr[0]}

# Set an element by index
arr[1]='TWO'

# Get the length
echo ${#arr[@]}

# Array slicing in the form [start_after_index]:[slice_length]
echo ${arr[@]:1:2}

# Append
arr+=(7 'eight')

# Define a hash/dictionary/associative array:
declare -A h=( ["one"]=1 ["two"]=2 )

# Get from the hash
echo ${h["one"]}

# Set and delete from hash
h["one"]="Uno"
unset h["one"]
</code></pre>

<div id='control-follow' />

<h2>Control Follow</h2>

<pre><code class="bash"># If-Then-Else - watch your spaces!
if [[ 3 &gt; $((1 + 1)) || 'a' == 'b' ]]
then
  echo "Correct"
else
  echo "Incorrect"
fi

# Create file if it does not exists
if [[ ! -e "test.txt" ]] ; then
    touch "test.txt"
fi

# If variable is undefined/empty
if [[ ! $x ]]
then
  echo "x is empty"
fi

# For loop with sequence/range of numbers
for i in $(seq 1 10);
do
  if [[ $i &lt; 5 ]]
  then
    echo $i
  else
    break
  fi
done

# Loop over all files in a folder with a pattern
for f in $(ls | egrep ".*\.md")
do
  echo $f
done

# Loop over an array - i.e. for-each
for x in ${arr[@]}
do
  echo $x
done

# Iterate/loop over a dictionary/hash
for k in "${!h[@]}"
do
  echo "$k = ${h[$k]}"
done
</code></pre>

<div id='functions' />

<h2>Functions</h2>

<pre><code class="bash"># Example functions with params
function prettyPrint {
  #Parameters are indexed from 1
  local x=$1
  local y=$2
  printf "%.2f$ Revenue and %.2f$ Loss \n" $x $y
}

function customEcho {
  # Number of params
  echo "$# arguements passed"

  # print all params
  for p in $*
  do
    echo "$p"
  done
}

# Invoke functions
prettyPrint 12.5 13.4
customEcho 1 2 3
</code></pre>

<div id='invoking-a-script' />

<h1>Bash Scripts</h1>

<div id='writing-a-script' />

<h2>Invoking a Script</h2>

<pre><code class="bash"># Run a script in a new child process
bash script.sh
./script.sh       # If executable

# Source a script - runs commands and definitions in present process
source script.sh
. script.sh

# Run script with two predefined environment vars
var1=1 var2=2 bash script.sh

# Run a script and print each command - use for debugging
bash -x script.sh

# Run in verbose mode - prints everything including comments
bash -v script.sh

# Fails immediately if an undefined variable is used in the script
bash -u script.sh

# Fails immediately if a command returns an error code
bash -e script.sh
</code></pre>

<div id='writing-a-script' />

<h2>Writing a Script</h2>

<pre><code class="bash">#!/usr/bin/env bash

# Display commands and their args before running them
set -x

# Verbose mode
set -v

# Fails if an undefined variable is used
set -u

# Fails if a command returns an error code
set -e

# Position params
echo "$1 $2"

# Array of position params
echo $*
echo $@

# Number of params
echo $#
</code></pre>

<div id='managing-services-in-systemd' />

<h1>Managing Services in systemd</h1>

<div id='service-lifecycle-systemctl-journalctl' />

<h2>Service Lifecycle (systemctl, journalctl)</h2>

<pre><code class="bash"># List all services
systemctl list-unit-files --type=service

# Start/stop/restart/reload/enable a Services
systemctl start some.service
systemctl stop some.service
systemctl restart some.service
systemctl reload some.service
systemctl enable some.service
systemctl disable some.service

# Check the config of a service
systemctl show some.service

# Check the log/journal of systemd events
journalctl

# Events for a service
journalctl --unit=some.service

# Events since last boot or from today
journalctl -b
journalctl --since=today

# View error events
journalctl -p err
</code></pre>

<div id='creating-a-new-service-script-in-etc-init-d' />

<h2>Creating a new Service (script in /etc/init.d)</h2>

To create a service, place its script in - <strong>"/etc/init.d"</strong> (on some distros in <strong>"/etc/rc.d/init.d/"</strong>). The code of the script should handle start, stop, restart, etc. The following example (taken from <a href="http://unix.stackexchange.com/questions/20357/how-can-i-make-a-script-in-etc-init-d-start-at-boot">here</a>) demonstrates a skeleton of such a script:

<pre><code class="bash">#!/usr/bin/env bash
# === Sample Script ===

# Source function library.
. /etc/init.d/functions

start() {
    # code to start app comes here
    # example: daemon program_name &amp;
}

stop() {
    # code to stop app comes here
    # example: killproc program_name
}

case "$1" in
    start)
       start
       ;;
    stop)
       stop
       ;;
    restart)
       stop
       start
       ;;
    status)
       # code to check status of app comes here
       # example: status program_name
       ;;
    *)
       echo "Usage: $0 {start|stop|status|restart}"
esac

exit 0
</code></pre>

<div id='tmux-commands' />

<h1>Tmux Commands</h1>

<div id='manage-sessions' />

<h2>Manage Sessions</h2>

<pre><code class="bash"># Start a new session
tmux new -s session_name

# Attach to a running session
tmux attach -t session_name

# List all running sessions
tmux ls

# Connect/switch to another session
tmux switch -t session_name

# Disconnect from session (also "ctrl+b+d")
tmux detach

# Kill/terminate a sessions
tmux kill-session -t session_name
</code></pre>

<div id='windowstabs' />

<h2>Windows/Tabs</h2>

<pre><code># Create window/tab (shortcut)
ctrl+b+c

# Rename a window/tab (shortcut)
ctrl+b+,

# Switch window/tab (shortcut)
ctrl+b+w

# Close window/tab (shortcut)
ctrl+b+&amp;
</code></pre>

<div id='panessplits' />

<h2>Panes/Splits</h2>

<pre><code># Split window vertically (shortcut)
ctrl+b+%

# Split window horizontally (shortcut)
ctrl+b+"

# Close current pane (shortcut)
ctrl+b+x

# Navigate to next pane (shortcut)
ctrl+b+o

# Navigate to next pane with arrow key (shortcut)
ctrl+b+[arrow-key]
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>872</wp:post_id>
		<wp:post_date><![CDATA[2016-05-22 08:51:23]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-05-22 08:51:23]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[shell-cheatsheet-part-1-common-bash-scripting-tmux]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bash"><![CDATA[Bash]]></category>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<category domain="post_tag" nicename="cheatsheet"><![CDATA[cheatsheet]]></category>
		<category domain="post_tag" nicename="shell"><![CDATA[shell]]></category>
		<category domain="post_tag" nicename="tmux"><![CDATA[tmux]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Shell Cheatsheet [Part 2] – Working with Docker</title>
		<link>http://www.nikgrozev.org/2016/06/18/shell-cheatsheet-part-2-working-with-docker-locally/</link>
		<pubDate>Sat, 18 Jun 2016 15:22:09 +0000</pubDate>
		<dc:creator><![CDATA[nikolay.grozev@gmail.com]]></dc:creator>
		<guid isPermaLink="false">http://www.nikgrozev.org/?p=890</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>Table of Contents</h1>

<ul>
<li><a href="#introduction">Introduction</a></li>
<li><a href="#docker-101-managing-a-single-container">Docker 101 - Managing a Single Container</a>

<ul>
<li><a href="#inventory-of-containers-and-images">Inventory of Containers and Images</a></li>
<li><a href="#start-containers-run-commands-and-shell-ssh-style">Start Containers, Run Commands and Shell (SSH-style)</a></li>
<li><a href="#networking-and-persistent-volumes">Networking and Persistent Volumes</a></li>
<li><a href="#restart-stop-and-delete-containers">Restart, Stop, and Delete Containers</a></li>
<li><a href="#diff-a-container-and-create-an-image">Diff a Container and Create an Image</a></li>
</ul></li>
<li><a href="#dockerfile-create-a-new-image">Dockerfile - Create a New Image</a>

<ul>
<li><a href="sample-dockerfile">Sample Dockerfile</a></li>
<li><a href="#working-with-dockerfile">Working with Dockerfile</a></li>
</ul></li>
<li><a href="#docker-compose">Docker Compose</a>

<ul>
<li><a href="#sample-docker-compose-yml-file">Sample docker-compose.yml File</a></li>
<li><a href="#run-docker-compose">Run Docker Compose</a></li>
</ul></li>
</ul>

<div id='introduction'/>

<h1>Introduction</h1>

Docker used to run "out of the box" only on Linux-based systems, but now it is available for <a href="https://blog.docker.com/2016/03/docker-for-mac-windows-beta/">Windows and OS X</a> as well, without the need for third party tools. This makes it worthwhile to create a quick reference for often used docker commands and tools. This post is a cheat sheet of commonly used <a href="https://www.docker.com/">Docker</a> shell commands. It is meant to serve as a quick reference that you can consult when developing scripts or debugging. It is not a tutorial - if you haven't used docker before please refer to the <a href="https://docs.docker.com/">official learning materials and documentation</a>.

<div id='docker-101-managing-a-single-container'/>

<h1>Docker 101 - Managing a Single Container</h1>

<div id='inventory-of-containers-and-images'/>

<h2>Inventory of Containers and Images</h2>

<pre><code class="bash"># Check Docker hub for images with a given name
docker search ubuntu

# Pull a container from Docker hub. To use an image tag - use [image-name]:[tag]
docker pull hello-world
docker pull ubuntu
docker pull ubuntu:12.10

# List all "pulled" images on your local system
docker images

# List all running containers
docker ps

# List all containers (not running as well)
docker ps -a

# List what is running in a container. Id/Name is taken from ps.
docker top 32c5a521c664
</code></pre>

<div id='start-containers-run-commands-and-shell-ssh-style'/>

<h2>Start Containers, Run Commands and Shell (SSH-style)</h2>

<pre><code class="bash"># Start a container - pull it from Docker hub if not present. You can name it.
# Standard output/error will be redirected to the current terminal
docker run hello-world
docker run --name=test-container-name hello-world

# Start in detached mode - standard output/error will NOT be redirected to the current terminal
docker run -d hello-world

# Start a container and run a specific command from within
docker run busybox echo "Test\n"
docker run ubuntu /bin/echo hello ubuntu container
run ubuntu /bin/bash -c "ls -l"

# Start a container and run a bash sessions interactively (SSH-style)
docker run -it ubuntu bash
docker run -it ubuntu /bin/bash
docker run -it busybox sh

# Attach a shell into a running container (SSH-style). Id/Name is taken from ps.
sudo docker exec -it b3a04a93f46f bash
sudo docker exec -it b3a04a93f46f sh

# Detach from a container's shell without killing it (keyboard shortcut):
Ctrl + p + q

# Reattach/reconnect to running shell (if doconnected with the above shortcut)
docker attach 32c5a521c664

# Run an arbitrary command within a running container
docker exec b3a04a93f46f /bin/echo "Hello again"
</code></pre>

<div id='networking-and-persistent-volumes'/>

<h2>Networking and Persistent Volumes</h2>

<pre><code class="bash"># Start a web server in a container; map its port (80) to a localhost port (8080)
docker run -p 8080:80 nginx

# If containers can't access the hosts networking (run on host)
sysctl -w net.ipv4.ip_forward=1

# Force the container to use a specific DNS server
docker run --dns 8.8.8.8 ubuntu

# Mount a host folder '~/test-vol' to a container as '/host-test-vol'
docker run -it -v ~/test-vol:/host-test-vol ubuntu /bin/bash
</code></pre>

<div id='restart-stop-and-delete-containers'/>

<h2>Restart, Stop, and Delete Containers</h2>

<pre><code class="bash"># Start/restart a stopped/running container
docker start 33712928d6c5
docker restart 33712928d6c5

# Gracefully stop a running container by.
# Sends SIGTERM to the root process.
docker stop b3a04a93f46f

# Forcefully stop a running container (SIGKILL)
docker kill b3a04a93f46f

# Remove a stopped container
docker rm b3a04a93f46f

# Remove a container regardless of its state (i.e. running, stopped)
docker rm -f b3a04a93f46f
</code></pre>

<div id='diff-a-container-and-create-an-image'/>

<h2>Diff a Container and Create an Image</h2>

<pre><code class="bash"># Check the changes in a container, since it was started from an image
docker diff 60b4f89dfc7f

# Create an image from a container - it will include all new changes
docker commit 60b4f89dfc7f test-image-name
</code></pre>

<div id='dockerfile-create-a-new-image'/>

<h1>Dockerfile - Create a New Image</h1>

<div id='sample-dockerfile'/>

<h2>Sample Dockerfile</h2>

<pre><code class="bash"># Define base docker image - will be pulled from the repo if not present
FROM ubuntu:16.04

# Metadata - Let people know who build this
MAINTAINER John Dockerson john.dockerson@dockeremail.com

# Install and set-up the current image - run only when creating the image
RUN apt-get update
RUN apt-get install -y git nginx

# Default working directory of all containers from this image
WORKDIR /var

# Set an env. variable 'APP-VER' for all containers from this image
ENV APP-VER 1.0

# Exposes port 80 - only to other containers! Can't be accessed from localhost.
EXPOSE 80

# Mount a volume from the host - less flexible that '-v' option.
# Can't specify custom mount point.
VOLUME /var/log

# Copy file(s) from the host to the image. If a folder - copies the content!
ADD folder /usr/local/
COPY folder /usr/local/
ADD folder /usr/local/folder
ADD file.txt /usr/local/

# Commands that will run when starting a container - e.g. start web/db server
# If the caller passes a command - this will not run! You can have only 1 CMD command.
CMD service nginx start

# Like CMD, but can't be overridden if the caller passes a command!
ENTRYPOINT service nginx start
</code></pre>

<div id='working-with-dockerfile'/>

<h2>Working with Dockerfile</h2>

<pre><code class="bash"># Build a docker image from Dockerfile in the current folder
docker build .

# Build a docker image from Dockerfile and name it
docker build -t nikolay/testimage .
docker build -t nikolay/testimage:ver1 .
</code></pre>

<div id='docker-compose'/>

<h1>Docker Compose</h1>

Example borrowed from the official <a href="https://docs.docker.com/compose/django/">documentation</a>:

<div id='sample-docker-compose-yml-file'/>

<h2>Sample docker-compose.yml File</h2>

<pre><code class="yml"># Use the latest version of docker compose
version: '2'

# Define each container in the services section
services:
# A container from an existing image
  db:
    image: postgres

# A container from a custom image (defined in Dockerfile)
  web:
#   Build the image, map ports, volumes, etc. Specify a command
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db

</code></pre>

<div id='run-docker-compose'/>

<h2>Run Docker Compose</h2>

<pre><code class="bash"># From the same folder - start all containers defined in docker-compose.yml.
# If some of the containers are running - starts only the needed ones
docker-compose up

# Force all containers to be restarted
docker-compose up --force-recreate

# Stop all containers
docker-compose stop
</code></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>890</wp:post_id>
		<wp:post_date><![CDATA[2016-06-18 15:22:09]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2016-06-18 15:22:09]]></wp:post_date_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[shell-cheatsheet-part-2-working-with-docker-locally]]></wp:post_name>
		<wp:status><![CDATA[publish]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="bash"><![CDATA[Bash]]></category>
		<category domain="category" nicename="bash"><![CDATA[Bash]]></category>
		<category domain="category" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="post_tag" nicename="docker"><![CDATA[Docker]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpcom_is_markdown]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_head]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_summery]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_post_sidebar]]></wp:meta_key>
			<wp:meta_value><![CDATA[yes]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_sidebar_choice]]></wp:meta_key>
			<wp:meta_value><![CDATA[sidebar-primary]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_author]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_kad_blog_carousel_similar]]></wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
